{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","vega-lite.js","node_modules/colorbrewer/colorbrewer.js","node_modules/colorbrewer/index.js","node_modules/d3-color/build/color.js","node_modules/d3-format/build/format.js","node_modules/d3-time-format/build/timeFormat.js","node_modules/datalib/node_modules/d3-dsv/build/dsv.js","node_modules/datalib/node_modules/d3-time-format/build/timeFormat.js","node_modules/datalib/node_modules/d3-time/build/time.js","node_modules/datalib/src/aggregate/aggregator.js","node_modules/datalib/src/aggregate/collector.js","node_modules/datalib/src/aggregate/groupby.js","node_modules/datalib/src/aggregate/measures.js","node_modules/datalib/src/bins/bins.js","node_modules/datalib/src/bins/histogram.js","node_modules/datalib/src/format.js","node_modules/datalib/src/generate.js","node_modules/datalib/src/import/formats/dsv.js","node_modules/datalib/src/import/formats/index.js","node_modules/datalib/src/import/formats/json.js","node_modules/datalib/src/import/formats/topojson.js","node_modules/datalib/src/import/formats/treejson.js","node_modules/datalib/src/import/load.js","node_modules/datalib/src/import/read.js","node_modules/datalib/src/import/readers.js","node_modules/datalib/src/import/type.js","node_modules/datalib/src/index.js","node_modules/datalib/src/print.js","node_modules/datalib/src/stats.js","node_modules/datalib/src/template.js","node_modules/datalib/src/time.js","node_modules/datalib/src/util.js","node_modules/vega-logging/index.js","node_modules/vega/node_modules/vega-dataflow/src/ChangeSet.js","node_modules/vega/node_modules/vega-dataflow/src/Collector.js","node_modules/vega/node_modules/vega-dataflow/src/DataSource.js","node_modules/vega/node_modules/vega-dataflow/src/Dependencies.js","node_modules/vega/node_modules/vega-dataflow/src/Graph.js","node_modules/vega/node_modules/vega-dataflow/src/Heap.js","node_modules/vega/node_modules/vega-dataflow/src/Node.js","node_modules/vega/node_modules/vega-dataflow/src/Signal.js","node_modules/vega/node_modules/vega-dataflow/src/Tuple.js","node_modules/vega/node_modules/vega-dataflow/src/index.js","node_modules/vega/node_modules/vega-expression/src/codegen.js","node_modules/vega/node_modules/vega-expression/src/constants.js","node_modules/vega/node_modules/vega-expression/src/functions.js","node_modules/vega/node_modules/vega-expression/src/index.js","node_modules/vega/node_modules/vega-expression/src/parser.js","node_modules/vega/src/parse/expr.js","node_modules/vega/src/transforms/Aggregate.js","node_modules/vega/src/transforms/Facetor.js","node_modules/vega/src/transforms/Parameter.js","node_modules/vega/src/transforms/Transform.js","src/Encoding.js","src/compiler/axis.js","src/compiler/compiler.js","src/compiler/data.js","src/compiler/facet.js","src/compiler/layout.js","src/compiler/legend.js","src/compiler/marks.js","src/compiler/scale.js","src/compiler/stack.js","src/compiler/style.js","src/compiler/subfacet.js","src/compiler/time.js","src/consts.js","src/data.js","src/enc.js","src/encdef.js","src/globals.js","src/logger.js","src/schema/schema.js","src/schema/schemautil.js","src/util.js","src/vl"],"names":["f","exports","module","define","amd","g","window","global","self","this","vl","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,2,"colorbrewer","YlGn",3,4,5,6,7,8,9,"YlGnBu","GnBu","BuGn","PuBuGn","PuBu","BuPu","RdPu","PuRd","OrRd","YlOrRd","YlOrBr","Purples","Blues","Greens","Oranges","Reds","Greys","PuOr",10,11,"BrBG","PRGn","PiYG","RdBu","RdGy","RdYlBu","Spectral","RdYlGn","Accent","Dark2","Paired",12,"Pastel1","Pastel2","Set1","Set2","Set3","./colorbrewer.js","factory","color","deltaHue","h1","h0","delta","Math","round","Color","format","m","trim","toLowerCase","reHex3","exec","parseInt","rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reHslPercent","hsl","named","hasOwnProperty","b","arguments","NaN","Rgb","isNaN","max","toString","min","h","Hsl","range","hsl2rgb","m1","m2","lab","Lab","Hcl","deg2rad","sin","c","cos","rgb2xyz","x","xyz2lab","Xn","y","Yn","z","Zn","t3","pow","t2","t0","lab2xyz","t1","xyz2rgb","hcl","sqrt","atan2","rad2deg","cubehelix","Cubehelix","BC_DA","ED","EB","bl","k","E","C","D","interpolateCubehelixGamma","gamma","ah","as","al","bh","bs","interpolateCubehelixGammaLong","interpolateHclLong","ac","bc","interpolateHcl","interpolateLab","aa","ab","ba","bb","interpolateHslLong","interpolateHsl","interpolateRgb","ar","ag","br","bg","prototype","displayable","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","darker","brighter","_prototype","__prototype","Kn","___prototype","PI","____prototype","A","B","cosh","sinh","interpolateCubehelix","interpolateCubehelixLong","formatDecimal","p","toExponential","indexOf","coefficient","slice","exponent","abs","formatPrefixAuto","d","prefixExponent","floor","Array","join","formatRounded","formatDefault","toPrecision","out","i1","i0","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","zero","width","comma","precision","type","formatTypes","formatGroup","grouping","thousands","value","j","push","substring","reverse","identity","locale","prefix","currency","test","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","prefixes","charCodeAt","decimal","group","Infinity","padding","formatPrefix","precisionRound","step","precisionPrefix","precisionFixed","localeFormat","definition","localeDefinitions","zhCn","ruRu","ptBr","plPl","nlNl","mkMk","jaJp","itIt","heIl","frFr","frCa","fiFi","esEs","enUs","enGb","enCa","deDe","caEs","","%","toFixed","X","toUpperCase","ca-ES","de-DE","en-CA","en-GB","en-US","es-ES","fi-FI","fr-CA","fr-FR","he-IL","it-IT","ja-JP","mk-MK","nl-NL","pl-PL","pt-BR","ru-RU","zh-CN","defaultLocale","timeFormat","newInterval","floori","offseti","count","interval","date","Date","d0","d1","ceil","offset","start","stop","filter","setTime","end","weekday","setHours","setDate","getDate","getDay","getTimezoneOffset","utcWeekday","setUTCHours","setUTCDate","getUTCDate","getUTCDay","localDate","H","M","S","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","newFormat","formats","pad","string","pads","charAt","newParse","newDate","parseSpecifier","day","U","W","w","Z","parse","parses","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","parsePeriod","periodLookup","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","time","periods","days","shortDays","months","shortMonths","formatLookup","formatRe","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","Y","formatFullYear","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","requote","replace","requoteRe","names","RegExp","map","numberRe","percentRe","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","formatIsoNative","toISOString","setMonth","setUTCMonth","-","_","0","isoSpecifier","formatIso","isoFormat","dsv","delimiter","text","parseRows","row","Function","name","JSON","stringify","token","N","EOF","eol","EOL","delimiterCode","rows","isArray","formatRows","fieldSet","Object","create","fields","forEach","field","formatValue","concat","formatRow","reFormat","csv","tsv","Map","clear","set","v","get","has","delete",{"end":{"file":0,"comments_before":[],"nlb":false,"endpos":84717,"endcol":12,"endline":2491,"pos":84713,"col":8,"line":2491,"value":"size","type":"name","_comments_dumped":true},"start":{"file":0,"comments_before":[],"nlb":false,"endpos":84717,"endcol":12,"endline":2491,"pos":84713,"col":8,"line":2491,"value":"size","type":"name","_comments_dumped":true},"name":"size"},"size","apply","second","setMilliseconds","seconds","minute","setSeconds","minutes","hour","setMinutes","hours","sundays","mondays","tuesday","tuesdays","wednesday","wednesdays","thursday","thursdays","friday","fridays","saturday","saturdays","week","weeks","month","years","utcSecond","setUTCMilliseconds","utcSeconds","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcSundays","utcMondays","utcTuesday","utcTuesdays","utcWednesday","utcWednesdays","utcThursday","utcThursdays","utcFriday","utcFridays","utcSaturday","utcSaturdays","utcWeek","utcWeeks","utcMonth","utcMonths","utcYears","Aggregator","_cells","_aggr","_stream","summarize_args","util","ops","array","Measures","Collector","Flags","ADD_CELL","MOD_CELL","proto","stream","key","_key","$","groupby","dims","_dims","isString","isFunction","summarize","_count","op","aggr","measures","_assign","*","object","_cellkey","String","_cell","_newcell","cell","num","tuple","_newtuple","flag","aggs","collect","data","_ingest","_add","add","_on_add","_rem","rem","_on_rem","_mod","curr","prev","cell0","cell1","isObject","_on_mod","result","values","_rems","changes","output","mod","_on_drop","_on_keep","execute","input","insert","_consolidate","remove","../util","./collector","./measures","_last","stats","REM","_get","toMap","extent","_ext","index","argmin","argmax","quartile","_q","q1","q2","q3","../stats","args","reduce","./aggregator",13,"measure","base","extend","init","idx","resolve","agg","helper","types","req","str","vals","sort","accessor","mutator","all","ctr","assign","distinct","isValid","missing","valid","sum","mean","average","variance","variancep","stdev","stdevp","median","modeskew",14,"bins","opt","level","minstep","eps","maxb","maxbins","logb","log","div","span","steps","bisect","unit","lo","hi","mid","cmp","EPSILON","date_value","date_index","units","utc","dmin","dmax","minb","minbins","find","spec","raw","../time",15,"$bin","options","$func","histogram","numerical","categorical","qtype","ext","gen","isFinite","unique","comparator","integer","number","../generate","../import/type","./bins",16,"numberLocale","d3_numberF","numberF","timeLocale","d3_timeF","timeF","intervals","domain","error","LN10","e10","e5","e2","numberAutoFormat","timeAutoFormat","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","d3_time","utcAutoFormat","numberPrefix","auto","d3-format","d3-time","d3-time-format",17,"repeat","val","zeros","random","uniform","undefined","samples","normal","next","rds",18,"header","d3_dsv","delim","fmt","../../util","d3-dsv",19,"json","topojson","treejson","./dsv","./json","./topojson","./treejson",20,"isBuffer","property",21,"reader","obj","feature","objects","features","mesh",22,"toTable","root","childrenField","visit","node","table","children",23,"sanitizeUrl","url","file","fileProtocol","baseURL","protocol_re","startsWith","load","useXHR","defaultProtocol","domainWhiteList","origin","document","createElement","href","host","hostname","location","parts","whiteListed","some","lastIndexOf","callback","err","xhr","http","xhrHasResponse","request","responseType","response","responseText","respond","status","async","XMLHttpRequest","XDomainRequest","onload","onerror","onreadystatechange","readyState","open","send","filename","fs","readFile","readFileSync","getBody","encoding","gzip","body","statusCode","searchString","sync-request",24,"read","cols","parsers","clen","len","inferAll","duplicate","keys","annotation","./formats","./type",25,"./load","./read",26,"TYPES","isDate","isNumber","isBoolean","typeAll","infer","TESTS","splice","PARSERS","boolean",27,"dl","version","print","template","./aggregate/aggregator","./aggregate/groupby","./bins/bins","./bins/histogram","./format","./generate","./import/load","./import/read","./import/readers","./import/type","./print","./stats","./template","./time","./util",28,"printQuantitativeProfile","printCategoricalProfile","list","top","FMT","POS","separator","minwidth","maxwidth","limit","lens","head","truncate","tmpl","summary","__summary__",29,"results","quantile","q","M2","avg","med","std","dot","rank","mu","tie","cor","fn","mua","mub","sda","sdb","ra","rb","dist","mat","exp","L2","R","entropy","counts","LN2","mutual","px","py","info","profile","sd",30,"src","source","bind","context","variable","properties","regex","template_re","interpolate","template_escaper","template_escapeChar","template_var","strcall","stringCast","number_format","template_format","time_format","filters","filter_re","prop","shift","pidx","args_re","template_escapes","pattern","format_map","clearFormatCache","'","\\","\r","\n"," "," ",31,"tempDate","entry","STEPS","toUnitMap","baseDate","utcBaseDate",32,"util_escape_str","escape_str_re","strrep","truncateOnWord","rev","cnt","tok","split","truncate_word_re","buffer","FNAME","namedfunc","equal","keystr","Buffer","field_re","$valid","$length","$in","$year","$month","$date","dates","$day","weekdays","$hour","$minute","$second","$utcYear","$utcMonth","$utcDate","$utcDay","$utcHour","$utcMinute","$utcSecond","numcmp","stablesort","sortBy","keyFn","indices","sa","sb","pos","padchar","word","ellipsis","l1","l2",33,"write","msg","console","debug","enable","state","prevTime","now","ts","stamp","reflow",34,"cs","copy","facet","trans","dirty","DEPS","ALL","./Dependencies",35,"graph","Base","_data","router","collector","Tuple","constructor","evaluate","idFilter","./Node","./Tuple","vega-logging",36,"DataSource","_graph","_name","_source","_facet","_input","ChangeSet","_output","_inputNode","_outputNode","_pipeline","_collector","_mutates","DataSourceInput","ds","Node","DataSourceOutput","reflows","DataSourceListener","mutates","_srcMap","_id","derive","rederive","tuples","ingest","where","update","func","ids","idMap","last","fire","propagate","pipeline","unshift","preprocess","connect","synchronize","listener","addListener","removeListener","listeners","./ChangeSet","./Collector",37,"deps",38,"Graph","Heap","Signal","Deps","_stamp","_rank","_signals","doNotPropagate","hash","SIGNALS","dataValues","DATA","signalValues","db","signal","signalRef","ref","pulse","nplse","tpls","ntpls","pulses","pq","_qrank","qrank","peek","pop","_listeners","branch","collects","batch","produces","signals","dependency","disconnect","id","prev_update","reevaluate","reflowed","run","./DataSource","./Heap","./Signal","datalib",39,"nodes","_siftdown","item","parent","_siftup","ridx","cidx","retval","pushpop",40,"nodeID","Router","Produces","Mutates","Reflows","Batch","_ids","_deps","_flags","_setf","_names","dep","cur","reset",41,"initialValue","_value","_verbose","_handlers","verbose","on","handler","off",42,"datum","tupleID","_prev","prev_init",43,"Dependencies","./Graph",44,"codegen_wrap","ast","codegen","globals","lookupGlobal","GLOBAL_VAR","generator","CODEGEN_TYPES","constants","functions","idWhiteList","idBlackList","memberDepth","FIELD_VAR","fieldVar","globalVar","Literal","Identifier","Program","MemberExpression","computed","CallExpression","callee","ArrayExpression","elements","BinaryExpression","left","operator","right","UnaryExpression","argument","ConditionalExpression","consequent","alternate","LogicalExpression","ObjectExpression","Property","ExpressionStatement","expression","./constants","./functions",45,"LOG2E","LOG10E","SQRT1_2","SQRT2",46,"fncall","cast","DATE","STRING","REGEXP","acos","asin","atan","clamp","datetime","milliseconds","timezoneoffset","utcdate","utcday","utcyear","utcmonth","utchours","utcminutes","utcseconds","utcmilliseconds","indexof","lastindexof","parseFloat","upper","lower","regexp","if",47,"parser","expr","compiler","compile","./codegen","./parser",48,"assert","condition","message","isDecimalDigit","ch","isHexDigit","isOctalDigit","isWhiteSpace","isLineTerminator","isIdentifierStart","Regex","NonAsciiIdentifierStart","fromCharCode","isIdentifierPart","NonAsciiIdentifierPart","isFutureReservedWord","isStrictModeReservedWord","isKeyword","strict","skipComment","lineNumber","lineStart","scanHexEscape","scanUnicodeCodePointEscape","cu1","cu2","throwError","Messages","UnexpectedToken","getEscapedIdentifier","substr","getIdentifier","scanIdentifier","Token","Keyword","NullLiteral","BooleanLiteral","scanPunctuator","code2","ch2","ch3","ch4","ch1","extra","tokenize","openParenToken","tokens","openCurlyToken","Punctuator","scanHexLiteral","NumericLiteral","scanOctalLiteral","octal","scanNumericLiteral","scanStringLiteral","quote","unescaped","restore","startLineNumber","startLineStart","StringLiteral","testRegExp","flags","tmp","$0","$1","InvalidRegExp","exception","scanRegExpBody","classMarker","terminated","UnterminatedRegExp","literal","scanRegExpFlags","throwErrorTolerant","scanRegExp","lookahead","RegularExpression","collectRegex","loc","line","column","isIdentifierName","advanceSlash","prevToken","checkToken","advance","collectToken","TokenName","lex","Position","SourceLocation","WrappingSourceLocation","startToken","WrappingNode","peekLineTerminator","found","messageFormat","whole","description","errors","throwUnexpected","UnexpectedEOS","UnexpectedNumber","UnexpectedString","UnexpectedIdentifier","UnexpectedReserved","StrictReservedWord","expect","expectTolerant","matchKeyword","keyword","consumeSemicolon","parseArrayInitialiser","parseAssignmentExpression","finishArrayExpression","parseObjectPropertyKey","StrictOctalLiteral","finishLiteral","finishIdentifier","parseObjectProperty","finishProperty","parseObjectInitialiser","kind","Syntax","PropertyKind","Data","Get","Set","StrictDuplicateProperty","AccessorDataProperty","AccessorGetSet","finishObjectExpression","parseGroupExpression","parenthesisCount","parseExpression","parsePrimaryExpression","legalKeywords","parseArguments","parseNonComputedProperty","parseNonComputedMember","parseComputedMember","parseLeftHandSideExpressionAllowCall","previousAllowIn","allowIn","finishMemberExpression","finishCallExpression","parsePostfixExpression","parseUnaryExpression","finishUnaryExpression","binaryPrecedence","prec","parseBinaryExpression","marker","markers","stack","finishBinaryExpression","parseConditionalExpression","finishConditionalExpression","oldParenthesisCount","parseExpressionStatement","finishExpressionStatement","parseStatement","parseSourceElement","parseSourceElements","sourceElement","directive","firstRestricted","sourceElements","parseProgram","finishProgram","filterTokenLocation","labelSet","inFunctionBody","inIteration","inSwitch","lastCommentStart","tolerant","lexError","program","AssignmentExpression","NewlineAfterThrow","InvalidLHSInAssignment","InvalidLHSInForIn","MultipleDefaultsInSwitch","NoCatchOrFinally","UnknownLabel","Redeclaration","IllegalContinue","IllegalBreak","IllegalReturn","StrictModeWith","StrictCatchVariable","StrictVarName","StrictParamName","StrictParamDupe","StrictFunctionName","StrictDelete","StrictLHSAssignment","StrictLHSPostfix","StrictLHSPrefix","finish","finishAssignmentExpression",49,"eventItem","eventGroup","eventX","eventY","vega-expression",50,"Aggregate","Transform","addParameters","sg","signalDeps","tx","_transform","_fields","_args","_out","_type","TUPLE","_acc","getFields","meas","df","Facetor","VALUE","MULTI","VALID_OPS","accessors","acc","hasGetter","param","transform","reeval","gby","./Facetor","./Transform","vega-dataflow",51,"_facetID","facetID","disconnect_cell",52,"Parameter","_accessors","_resolution","arrayType","isData","dataType","isField","fieldType","valType","exprType","isExpr","FIELDS","../parse/expr",53,"params","_parameters","./Parameter",54,"consts","vlEncDef","vlenc","schema","Encoding","theme","defaults","instantiate","specExtended","merge","_marktype","marktype","_enc","_config","config","fromShorthand","shorthand","enc","fromSpec","toShorthand","specFromShorthand","excludeConfig","toSpec","excludeData","subtract","is","encType","encDef","et","fieldRef","fieldTitle","isCount","displayName","aggregate","timeUnit","bin","scale","axis","bandSize","useSmallBand","ROW","COL","band","MAXBINS_DEFAULT","numberFormat","fieldStats","formatConfig","isTypes","toggleSort","support","Q","qField","O","isType","isOrdinalScale","isDimension","isMeasure","isAggregate","dataTable","AGGREGATE","RAW","alwaysNoOcclusion","isStack","COLOR","DETAIL","isXMeasure","isYMeasure","details","refs","facets","cardinality","isRaw","hasValues","transpose","oldenc","col","./consts","./enc","./encdef","./globals","./schema/schema",55,"setter","getter","def","layout","isCol","isRow","layer","orient","labels","angle","T","ticks","rotate","titleOffset","grid","title","hideTicks","cellPadding","_grid","yOffset","cellWidth","y2","stroke","strokeOpacity","xOffset","cellHeight","x2","mult","opacity","majorTicks","ax","maxLength","titleMaxLength","baseline","dy","height","hasScale","maxLabelLength","labelAngle","../globals",56,"legend","marks","style","subfacet","compileEncoding","scales","enter","mdefs","mdef","lineType","from","by","singleScaleNames","markProps","legends","defs","axes","../Encoding","./axis","./data","./facet","./layout","./legend","./marks","./scale","./stack","./style","./subfacet","datalib/src/stats",57,"filterNonPositive","formatParse","nullFilter","formula","nofn","bin_suffix","filteredFields","fieldList","fieldName","containsType","formulas","hasAggregate","fnDictSet","dim","stacked","STACKED","prefn","../encdef",58,"groupdef","faceting","axesGrp","facetKeys","cellAxes","hasRow","hasCol","mark",59,"vllayout","box","hasX","hasY","xCardinality","yCardinality","TEXT","colCardinality","rowCardinality","getMaxNumberLength","d3_format","getMaxLength","extraOffset",60,"SIZE","SHAPE","shape","symbols","filled","strokeWidth","leg",61,"bar_props","xc","yc","point_props","line_props","area_props","tick_props","filled_point_props","text_props","fontSize","font","placeholder","family","fontWeight","weight","fontStyle","bar","supportedEncoding","requiredEncoding","detail","area","tick","circle","square","point",62,"props","scaleDef","useRawDomain","_useRawDomain","noAggregate","order","scaleUseRawDomain","useRawDomainEnabled","notCountOrSum","isOrdinalFn","bandWidth","nice","outerPadding","points","colorScale","ordinalPalette","quantitativeRange","c10palette","c20palette","palette","ps","to","interpolator","d3-color",63,"stacking","valName","startField","endField","transforms","orderby","method","stackTransform","sortby",64,"estimateOpacity","numPoints","numMultiples",65,"subfaceting",66,"d3_time_format","LONG_DATE","filterNull","stat","yearstat","scaleLabel","labelLength","isColor",67,"encodingTypes",68,"vldata",69,"encTypes","countRetinal","fieldDef","arr","enctype",70,"vlfield","shorthands","timefns","tu","getbins","./compiler/time",71,"INDEX",72,"METHODS","logger","cfn",73,"VALID_AGG_OPS","enum","supportedEnums","supportedTypes","getSupportedRole","supportedRole","timeUnits","defaultTimeFn","scale_type","default","clone","minimum","typicalField","onlyOrdinalField","dimension","axisMixin","supportedMarktypes","maximum","sortMixin","oneOf","required","bandMixin","legendMixin","textMixin","role","margin","sizeMixin","colorMixin","minItems","maxItems","items","stackMixin","shapeMixin","detailMixin","rowMixin","colMixin","facetMixin","requiredNameType","multiRoleField","quantitativeField","onlyQuantitativeField","additionalProperties","viewport","gridColor","gridOpacity","autoSortLine","singleHeight","singleWidth","largeBandSize","smallBandSize","largeBandMaxCardinality","cellGridColor","cellGridOpacity","cellGridOffset","cellBackgroundColor","textCellWidth","singleBarOffset","timeScaleLabelLength","dayScaleLabel","monthScaleLabel","characterWidth","maxSmallNumber","smallNumberFormat","largeNumberFormat","$schema","./schemautil","vega/src/transforms/Aggregate",74,"dest","schemautil","isEmpty","instance","ins",75,"isin","thisArg","any","noaugment","./logger","datalib/src/bins/bins","datalib/src/generate","datalib/src/util",76,"./Encoding","./compiler/compiler"],"mappings":"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","file":"vega-lite.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.vl = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\n},{}],2:[function(require,module,exports){\n// This product includes color specifications and designs developed by Cynthia Brewer (http://colorbrewer.org/).\n// JavaScript specs as packaged in the D3 library (d3js.org). Please see license at http://colorbrewer.org/export/LICENSE.txt\n!function() {\n\nvar colorbrewer = {YlGn: {\n3: [\"#f7fcb9\",\"#addd8e\",\"#31a354\"],\n4: [\"#ffffcc\",\"#c2e699\",\"#78c679\",\"#238443\"],\n5: [\"#ffffcc\",\"#c2e699\",\"#78c679\",\"#31a354\",\"#006837\"],\n6: [\"#ffffcc\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#31a354\",\"#006837\"],\n7: [\"#ffffcc\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#005a32\"],\n8: [\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#005a32\"],\n9: [\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#006837\",\"#004529\"]\n},YlGnBu: {\n3: [\"#edf8b1\",\"#7fcdbb\",\"#2c7fb8\"],\n4: [\"#ffffcc\",\"#a1dab4\",\"#41b6c4\",\"#225ea8\"],\n5: [\"#ffffcc\",\"#a1dab4\",\"#41b6c4\",\"#2c7fb8\",\"#253494\"],\n6: [\"#ffffcc\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#2c7fb8\",\"#253494\"],\n7: [\"#ffffcc\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#0c2c84\"],\n8: [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#0c2c84\"],\n9: [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#253494\",\"#081d58\"]\n},GnBu: {\n3: [\"#e0f3db\",\"#a8ddb5\",\"#43a2ca\"],\n4: [\"#f0f9e8\",\"#bae4bc\",\"#7bccc4\",\"#2b8cbe\"],\n5: [\"#f0f9e8\",\"#bae4bc\",\"#7bccc4\",\"#43a2ca\",\"#0868ac\"],\n6: [\"#f0f9e8\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#43a2ca\",\"#0868ac\"],\n7: [\"#f0f9e8\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#08589e\"],\n8: [\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#08589e\"],\n9: [\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#0868ac\",\"#084081\"]\n},BuGn: {\n3: [\"#e5f5f9\",\"#99d8c9\",\"#2ca25f\"],\n4: [\"#edf8fb\",\"#b2e2e2\",\"#66c2a4\",\"#238b45\"],\n5: [\"#edf8fb\",\"#b2e2e2\",\"#66c2a4\",\"#2ca25f\",\"#006d2c\"],\n6: [\"#edf8fb\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#2ca25f\",\"#006d2c\"],\n7: [\"#edf8fb\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#005824\"],\n8: [\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#005824\"],\n9: [\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#006d2c\",\"#00441b\"]\n},PuBuGn: {\n3: [\"#ece2f0\",\"#a6bddb\",\"#1c9099\"],\n4: [\"#f6eff7\",\"#bdc9e1\",\"#67a9cf\",\"#02818a\"],\n5: [\"#f6eff7\",\"#bdc9e1\",\"#67a9cf\",\"#1c9099\",\"#016c59\"],\n6: [\"#f6eff7\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#1c9099\",\"#016c59\"],\n7: [\"#f6eff7\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016450\"],\n8: [\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016450\"],\n9: [\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016c59\",\"#014636\"]\n},PuBu: {\n3: [\"#ece7f2\",\"#a6bddb\",\"#2b8cbe\"],\n4: [\"#f1eef6\",\"#bdc9e1\",\"#74a9cf\",\"#0570b0\"],\n5: [\"#f1eef6\",\"#bdc9e1\",\"#74a9cf\",\"#2b8cbe\",\"#045a8d\"],\n6: [\"#f1eef6\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#2b8cbe\",\"#045a8d\"],\n7: [\"#f1eef6\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#034e7b\"],\n8: [\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#034e7b\"],\n9: [\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#045a8d\",\"#023858\"]\n},BuPu: {\n3: [\"#e0ecf4\",\"#9ebcda\",\"#8856a7\"],\n4: [\"#edf8fb\",\"#b3cde3\",\"#8c96c6\",\"#88419d\"],\n5: [\"#edf8fb\",\"#b3cde3\",\"#8c96c6\",\"#8856a7\",\"#810f7c\"],\n6: [\"#edf8fb\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8856a7\",\"#810f7c\"],\n7: [\"#edf8fb\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#6e016b\"],\n8: [\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#6e016b\"],\n9: [\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#810f7c\",\"#4d004b\"]\n},RdPu: {\n3: [\"#fde0dd\",\"#fa9fb5\",\"#c51b8a\"],\n4: [\"#feebe2\",\"#fbb4b9\",\"#f768a1\",\"#ae017e\"],\n5: [\"#feebe2\",\"#fbb4b9\",\"#f768a1\",\"#c51b8a\",\"#7a0177\"],\n6: [\"#feebe2\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#c51b8a\",\"#7a0177\"],\n7: [\"#feebe2\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\"],\n8: [\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\"],\n9: [\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\",\"#49006a\"]\n},PuRd: {\n3: [\"#e7e1ef\",\"#c994c7\",\"#dd1c77\"],\n4: [\"#f1eef6\",\"#d7b5d8\",\"#df65b0\",\"#ce1256\"],\n5: [\"#f1eef6\",\"#d7b5d8\",\"#df65b0\",\"#dd1c77\",\"#980043\"],\n6: [\"#f1eef6\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#dd1c77\",\"#980043\"],\n7: [\"#f1eef6\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#91003f\"],\n8: [\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#91003f\"],\n9: [\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#980043\",\"#67001f\"]\n},OrRd: {\n3: [\"#fee8c8\",\"#fdbb84\",\"#e34a33\"],\n4: [\"#fef0d9\",\"#fdcc8a\",\"#fc8d59\",\"#d7301f\"],\n5: [\"#fef0d9\",\"#fdcc8a\",\"#fc8d59\",\"#e34a33\",\"#b30000\"],\n6: [\"#fef0d9\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#e34a33\",\"#b30000\"],\n7: [\"#fef0d9\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#990000\"],\n8: [\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#990000\"],\n9: [\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#b30000\",\"#7f0000\"]\n},YlOrRd: {\n3: [\"#ffeda0\",\"#feb24c\",\"#f03b20\"],\n4: [\"#ffffb2\",\"#fecc5c\",\"#fd8d3c\",\"#e31a1c\"],\n5: [\"#ffffb2\",\"#fecc5c\",\"#fd8d3c\",\"#f03b20\",\"#bd0026\"],\n6: [\"#ffffb2\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#f03b20\",\"#bd0026\"],\n7: [\"#ffffb2\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#b10026\"],\n8: [\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#b10026\"],\n9: [\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#bd0026\",\"#800026\"]\n},YlOrBr: {\n3: [\"#fff7bc\",\"#fec44f\",\"#d95f0e\"],\n4: [\"#ffffd4\",\"#fed98e\",\"#fe9929\",\"#cc4c02\"],\n5: [\"#ffffd4\",\"#fed98e\",\"#fe9929\",\"#d95f0e\",\"#993404\"],\n6: [\"#ffffd4\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#d95f0e\",\"#993404\"],\n7: [\"#ffffd4\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#8c2d04\"],\n8: [\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#8c2d04\"],\n9: [\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#993404\",\"#662506\"]\n},Purples: {\n3: [\"#efedf5\",\"#bcbddc\",\"#756bb1\"],\n4: [\"#f2f0f7\",\"#cbc9e2\",\"#9e9ac8\",\"#6a51a3\"],\n5: [\"#f2f0f7\",\"#cbc9e2\",\"#9e9ac8\",\"#756bb1\",\"#54278f\"],\n6: [\"#f2f0f7\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#756bb1\",\"#54278f\"],\n7: [\"#f2f0f7\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#4a1486\"],\n8: [\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#4a1486\"],\n9: [\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#54278f\",\"#3f007d\"]\n},Blues: {\n3: [\"#deebf7\",\"#9ecae1\",\"#3182bd\"],\n4: [\"#eff3ff\",\"#bdd7e7\",\"#6baed6\",\"#2171b5\"],\n5: [\"#eff3ff\",\"#bdd7e7\",\"#6baed6\",\"#3182bd\",\"#08519c\"],\n6: [\"#eff3ff\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#3182bd\",\"#08519c\"],\n7: [\"#eff3ff\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#084594\"],\n8: [\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#084594\"],\n9: [\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#08519c\",\"#08306b\"]\n},Greens: {\n3: [\"#e5f5e0\",\"#a1d99b\",\"#31a354\"],\n4: [\"#edf8e9\",\"#bae4b3\",\"#74c476\",\"#238b45\"],\n5: [\"#edf8e9\",\"#bae4b3\",\"#74c476\",\"#31a354\",\"#006d2c\"],\n6: [\"#edf8e9\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#31a354\",\"#006d2c\"],\n7: [\"#edf8e9\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#005a32\"],\n8: [\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#005a32\"],\n9: [\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#006d2c\",\"#00441b\"]\n},Oranges: {\n3: [\"#fee6ce\",\"#fdae6b\",\"#e6550d\"],\n4: [\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#d94701\"],\n5: [\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"],\n6: [\"#feedde\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"],\n7: [\"#feedde\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#8c2d04\"],\n8: [\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#8c2d04\"],\n9: [\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#a63603\",\"#7f2704\"]\n},Reds: {\n3: [\"#fee0d2\",\"#fc9272\",\"#de2d26\"],\n4: [\"#fee5d9\",\"#fcae91\",\"#fb6a4a\",\"#cb181d\"],\n5: [\"#fee5d9\",\"#fcae91\",\"#fb6a4a\",\"#de2d26\",\"#a50f15\"],\n6: [\"#fee5d9\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#de2d26\",\"#a50f15\"],\n7: [\"#fee5d9\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#99000d\"],\n8: [\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#99000d\"],\n9: [\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#a50f15\",\"#67000d\"]\n},Greys: {\n3: [\"#f0f0f0\",\"#bdbdbd\",\"#636363\"],\n4: [\"#f7f7f7\",\"#cccccc\",\"#969696\",\"#525252\"],\n5: [\"#f7f7f7\",\"#cccccc\",\"#969696\",\"#636363\",\"#252525\"],\n6: [\"#f7f7f7\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#636363\",\"#252525\"],\n7: [\"#f7f7f7\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"],\n8: [\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"],\n9: [\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\",\"#000000\"]\n},PuOr: {\n3: [\"#f1a340\",\"#f7f7f7\",\"#998ec3\"],\n4: [\"#e66101\",\"#fdb863\",\"#b2abd2\",\"#5e3c99\"],\n5: [\"#e66101\",\"#fdb863\",\"#f7f7f7\",\"#b2abd2\",\"#5e3c99\"],\n6: [\"#b35806\",\"#f1a340\",\"#fee0b6\",\"#d8daeb\",\"#998ec3\",\"#542788\"],\n7: [\"#b35806\",\"#f1a340\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#998ec3\",\"#542788\"],\n8: [\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\"],\n9: [\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\"],\n10: [\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"],\n11: [\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"]\n},BrBG: {\n3: [\"#d8b365\",\"#f5f5f5\",\"#5ab4ac\"],\n4: [\"#a6611a\",\"#dfc27d\",\"#80cdc1\",\"#018571\"],\n5: [\"#a6611a\",\"#dfc27d\",\"#f5f5f5\",\"#80cdc1\",\"#018571\"],\n6: [\"#8c510a\",\"#d8b365\",\"#f6e8c3\",\"#c7eae5\",\"#5ab4ac\",\"#01665e\"],\n7: [\"#8c510a\",\"#d8b365\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#5ab4ac\",\"#01665e\"],\n8: [\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\"],\n9: [\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\"],\n10: [\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"],\n11: [\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"]\n},PRGn: {\n3: [\"#af8dc3\",\"#f7f7f7\",\"#7fbf7b\"],\n4: [\"#7b3294\",\"#c2a5cf\",\"#a6dba0\",\"#008837\"],\n5: [\"#7b3294\",\"#c2a5cf\",\"#f7f7f7\",\"#a6dba0\",\"#008837\"],\n6: [\"#762a83\",\"#af8dc3\",\"#e7d4e8\",\"#d9f0d3\",\"#7fbf7b\",\"#1b7837\"],\n7: [\"#762a83\",\"#af8dc3\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#7fbf7b\",\"#1b7837\"],\n8: [\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\"],\n9: [\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\"],\n10: [\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"],\n11: [\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"]\n},PiYG: {\n3: [\"#e9a3c9\",\"#f7f7f7\",\"#a1d76a\"],\n4: [\"#d01c8b\",\"#f1b6da\",\"#b8e186\",\"#4dac26\"],\n5: [\"#d01c8b\",\"#f1b6da\",\"#f7f7f7\",\"#b8e186\",\"#4dac26\"],\n6: [\"#c51b7d\",\"#e9a3c9\",\"#fde0ef\",\"#e6f5d0\",\"#a1d76a\",\"#4d9221\"],\n7: [\"#c51b7d\",\"#e9a3c9\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#a1d76a\",\"#4d9221\"],\n8: [\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\"],\n9: [\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\"],\n10: [\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"],\n11: [\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"]\n},RdBu: {\n3: [\"#ef8a62\",\"#f7f7f7\",\"#67a9cf\"],\n4: [\"#ca0020\",\"#f4a582\",\"#92c5de\",\"#0571b0\"],\n5: [\"#ca0020\",\"#f4a582\",\"#f7f7f7\",\"#92c5de\",\"#0571b0\"],\n6: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#d1e5f0\",\"#67a9cf\",\"#2166ac\"],\n7: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#67a9cf\",\"#2166ac\"],\n8: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\"],\n9: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\"],\n10: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"],\n11: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"]\n},RdGy: {\n3: [\"#ef8a62\",\"#ffffff\",\"#999999\"],\n4: [\"#ca0020\",\"#f4a582\",\"#bababa\",\"#404040\"],\n5: [\"#ca0020\",\"#f4a582\",\"#ffffff\",\"#bababa\",\"#404040\"],\n6: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#e0e0e0\",\"#999999\",\"#4d4d4d\"],\n7: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#999999\",\"#4d4d4d\"],\n8: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\"],\n9: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\"],\n10: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"],\n11: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"]\n},RdYlBu: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#91bfdb\"],\n4: [\"#d7191c\",\"#fdae61\",\"#abd9e9\",\"#2c7bb6\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#abd9e9\",\"#2c7bb6\"],\n6: [\"#d73027\",\"#fc8d59\",\"#fee090\",\"#e0f3f8\",\"#91bfdb\",\"#4575b4\"],\n7: [\"#d73027\",\"#fc8d59\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#91bfdb\",\"#4575b4\"],\n8: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\"],\n9: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\"],\n10: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"],\n11: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"]\n},Spectral: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#99d594\"],\n4: [\"#d7191c\",\"#fdae61\",\"#abdda4\",\"#2b83ba\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#abdda4\",\"#2b83ba\"],\n6: [\"#d53e4f\",\"#fc8d59\",\"#fee08b\",\"#e6f598\",\"#99d594\",\"#3288bd\"],\n7: [\"#d53e4f\",\"#fc8d59\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#99d594\",\"#3288bd\"],\n8: [\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\"],\n9: [\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\"],\n10: [\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"],\n11: [\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"]\n},RdYlGn: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#91cf60\"],\n4: [\"#d7191c\",\"#fdae61\",\"#a6d96a\",\"#1a9641\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#a6d96a\",\"#1a9641\"],\n6: [\"#d73027\",\"#fc8d59\",\"#fee08b\",\"#d9ef8b\",\"#91cf60\",\"#1a9850\"],\n7: [\"#d73027\",\"#fc8d59\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#91cf60\",\"#1a9850\"],\n8: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\"],\n9: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\"],\n10: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"],\n11: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"]\n},Accent: {\n3: [\"#7fc97f\",\"#beaed4\",\"#fdc086\"],\n4: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\"],\n5: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\"],\n6: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\"],\n7: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\"],\n8: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\",\"#666666\"]\n},Dark2: {\n3: [\"#1b9e77\",\"#d95f02\",\"#7570b3\"],\n4: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\"],\n5: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\"],\n6: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\"],\n7: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\"],\n8: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\",\"#666666\"]\n},Paired: {\n3: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\"],\n4: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\"],\n5: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\"],\n6: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\"],\n7: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\"],\n8: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\"],\n9: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\"],\n10: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\"],\n11: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\"],\n12: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\",\"#b15928\"]\n},Pastel1: {\n3: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\"],\n4: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\"],\n5: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\"],\n6: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\"],\n7: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\"],\n8: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\"],\n9: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\",\"#f2f2f2\"]\n},Pastel2: {\n3: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\"],\n4: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\"],\n5: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\"],\n6: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\"],\n7: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\"],\n8: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\",\"#cccccc\"]\n},Set1: {\n3: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\"],\n4: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\"],\n5: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\"],\n6: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\"],\n7: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\"],\n8: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\"],\n9: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\",\"#999999\"]\n},Set2: {\n3: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\"],\n4: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\"],\n5: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\"],\n6: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\"],\n7: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\"],\n8: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\",\"#b3b3b3\"]\n},Set3: {\n3: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\"],\n4: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\"],\n5: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\"],\n6: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\"],\n7: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\"],\n8: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\"],\n9: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\"],\n10: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\"],\n11: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\"],\n12: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"]\n}};\n\nif (typeof define === \"function\" && define.amd) {\n    define(colorbrewer);\n} else if (typeof module === \"object\" && module.exports) {\n    module.exports = colorbrewer;\n} else {\n    this.colorbrewer = colorbrewer;\n}\n\n}();\n\n},{}],3:[function(require,module,exports){\nmodule.exports = require('./colorbrewer.js');\n\n},{\"./colorbrewer.js\":2}],4:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  factory((global.color = {}));\n}(this, function (exports) { 'use strict';\n\n  function deltaHue(h1, h0) {\n    var delta = h1 - h0;\n    return delta > 180 || delta < -180\n        ? delta - 360 * Math.round(delta / 360)\n        : delta;\n  }\n\n  function Color() {}\n\n  var reHex3 = /^#([0-9a-f]{3})$/;\n  var reHex6 = /^#([0-9a-f]{6})$/;\n  var reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n  var reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\n  color.prototype = Color.prototype = {\n    displayable: function() {\n      return this.rgb().displayable();\n    },\n    toString: function() {\n      return this.rgb() + \"\";\n    }\n  };\n\n  function color(format) {\n    var m;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf))) // #f00\n        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n        : (m = reRgbInteger.exec(format)) ? rgb(m[1], m[2], m[3]) // rgb(255,0,0)\n        : (m = reRgbPercent.exec(format)) ? rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100) // rgb(100%,0%,0%)\n        : (m = reHslPercent.exec(format)) ? hsl(m[1], m[2] / 100, m[3] / 100) // hsl(120,50%,50%)\n        : named.hasOwnProperty(format) ? rgbn(named[format])\n        : null;\n  }\n\n  function rgbn(n) {\n    return rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff);\n  }\n\n  var named = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n  };\n\n  var darker = .7;\n  var brighter = 1 / darker;\n\n  function rgb(r, g, b) {\n    if (arguments.length === 1) {\n      if (!(r instanceof Color)) r = color(r);\n      if (r) {\n        r = r.rgb();\n        b = r.b;\n        g = r.g;\n        r = r.r;\n      } else {\n        r = g = b = NaN;\n      }\n    }\n    return new Rgb(r, g, b);\n  }\n\n  function Rgb(r, g, b) {\n    this.r = +r;\n    this.g = +g;\n    this.b = +b;\n  }\n\n  var _prototype = rgb.prototype = Rgb.prototype = new Color;\n\n  _prototype.brighter = function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k);\n  };\n\n  _prototype.darker = function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k);\n  };\n\n  _prototype.rgb = function() {\n    return this;\n  };\n\n  _prototype.displayable = function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255);\n  };\n\n  _prototype.toString = function() {\n    return format(this.r, this.g, this.b);\n  };\n\n  function format(r, g, b) {\n    return \"#\"\n        + (isNaN(r) ? \"00\" : (r = Math.round(r)) < 16 ? \"0\" + Math.max(0, r).toString(16) : Math.min(255, r).toString(16))\n        + (isNaN(g) ? \"00\" : (g = Math.round(g)) < 16 ? \"0\" + Math.max(0, g).toString(16) : Math.min(255, g).toString(16))\n        + (isNaN(b) ? \"00\" : (b = Math.round(b)) < 16 ? \"0\" + Math.max(0, b).toString(16) : Math.min(255, b).toString(16));\n  }\n\n  function hsl(h, s, l) {\n    if (arguments.length === 1) {\n      if (h instanceof Hsl) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n      } else {\n        if (!(h instanceof Color)) h = color(h);\n        if (h) {\n          if (h instanceof Hsl) return h;\n          h = h.rgb();\n          var r = h.r / 255,\n              g = h.g / 255,\n              b = h.b / 255,\n              min = Math.min(r, g, b),\n              max = Math.max(r, g, b),\n              range = max - min;\n          l = (max + min) / 2;\n          if (range) {\n            s = l < .5 ? range / (max + min) : range / (2 - max - min);\n            if (r === max) h = (g - b) / range + (g < b) * 6;\n            else if (g === max) h = (b - r) / range + 2;\n            else h = (r - g) / range + 4;\n            h *= 60;\n          } else {\n            h = NaN;\n            s = l > 0 && l < 1 ? 0 : h;\n          }\n        } else {\n          h = s = l = NaN;\n        }\n      }\n    }\n    return new Hsl(h, s, l);\n  }\n\n  function Hsl(h, s, l) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n  }\n\n  var __prototype = hsl.prototype = Hsl.prototype = new Color;\n\n  __prototype.brighter = function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k);\n  };\n\n  __prototype.darker = function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k);\n  };\n\n  __prototype.rgb = function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < .5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2)\n    );\n  };\n\n  __prototype.displayable = function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1);\n  };\n\n  /* From FvD 13.37, CSS Color Module Level 3 */\n  function hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60\n        : h < 180 ? m2\n        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n        : m1) * 255;\n  }\n\n  var Kn = 18;\n\n  var Xn = 0.950470;\n  var Yn = 1;\n  var Zn = 1.088830;\n  var t0 = 4 / 29;\n  var t1 = 6 / 29;\n  var t2 = 3 * t1 * t1;\n  var t3 = t1 * t1 * t1;\n\n  function lab(l, a, b) {\n    if (arguments.length === 1) {\n      if (l instanceof Lab) {\n        b = l.b;\n        a = l.a;\n        l = l.l;\n      } else if (l instanceof Hcl) {\n        var h = l.h * deg2rad;\n        b = Math.sin(h) * l.c;\n        a = Math.cos(h) * l.c;\n        l = l.l;\n      } else {\n        if (!(l instanceof Rgb)) l = rgb(l);\n        var r = rgb2xyz(l.r),\n            g = rgb2xyz(l.g),\n            b = rgb2xyz(l.b),\n            x = xyz2lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / Xn),\n            y = xyz2lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / Yn),\n            z = xyz2lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / Zn);\n        b = 200 * (y - z);\n        a = 500 * (x - y);\n        l = 116 * y - 16;\n      }\n    }\n    return new Lab(l, a, b);\n  }\n\n  function Lab(l, a, b) {\n    this.l = +l;\n    this.a = +a;\n    this.b = +b;\n  }\n\n  var ___prototype = lab.prototype = Lab.prototype = new Color;\n\n  ___prototype.brighter = function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b);\n  };\n\n  ___prototype.darker = function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b);\n  };\n\n  ___prototype.rgb = function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z)\n    );\n  };\n\n  function xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n  }\n\n  function lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n  }\n\n  function xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n  }\n\n  function rgb2xyz(x) {\n    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  }\n\n  var deg2rad = Math.PI / 180;\n  var rad2deg = 180 / Math.PI;\n\n  function hcl(h, c, l) {\n    if (arguments.length === 1) {\n      if (h instanceof Hcl) {\n        l = h.l;\n        c = h.c;\n        h = h.h;\n      } else {\n        if (!(h instanceof Lab)) h = lab(h);\n        l = h.l;\n        c = Math.sqrt(h.a * h.a + h.b * h.b);\n        h = Math.atan2(h.b, h.a) * rad2deg;\n        if (h < 0) h += 360;\n      }\n    }\n    return new Hcl(h, c, l);\n  }\n\n  function Hcl(h, c, l) {\n    this.h = +h;\n    this.c = +c;\n    this.l = +l;\n  }\n\n  var ____prototype = hcl.prototype = Hcl.prototype = new Color;\n\n  ____prototype.brighter = function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k));\n  };\n\n  ____prototype.darker = function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k));\n  };\n\n  ____prototype.rgb = function() {\n    return lab(this).rgb();\n  };\n\n  var A = -0.14861;\n  var B = +1.78277;\n  var C = -0.29227;\n  var D = -0.90649;\n  var E = +1.97294;\n  var ED = E * D;\n  var EB = E * B;\n  var BC_DA = B * C - D * A;\n\n  function cubehelix(h, s, l) {\n    if (arguments.length === 1) {\n      if (h instanceof Cubehelix) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n      } else {\n        if (!(h instanceof Rgb)) h = rgb(h);\n        var r = h.r / 255, g = h.g / 255, b = h.b / 255;\n        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB);\n        var bl = b - l, k = (E * (g - l) - C * bl) / D;\n        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)); // NaN if l=0 or l=1\n        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n        if (h < 0) h += 360;\n      }\n    }\n    return new Cubehelix(h, s, l);\n  }\n\n  function Cubehelix(h, s, l) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n  }\n\n  var prototype = cubehelix.prototype = Cubehelix.prototype = new Color;\n\n  prototype.brighter = function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k);\n  };\n\n  prototype.darker = function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k);\n  };\n\n  prototype.rgb = function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh))\n    );\n  };\n\n  function interpolateCubehelixGamma(gamma) {\n    return function(a, b) {\n      a = cubehelix(a);\n      b = cubehelix(b);\n      var ah = isNaN(a.h) ? b.h : a.h,\n          as = isNaN(a.s) ? b.s : a.s,\n          al = a.l,\n          bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n          bs = isNaN(b.s) ? 0 : b.s - as,\n          bl = b.l - al;\n      return function(t) {\n        a.h = ah + bh * t;\n        a.s = as + bs * t;\n        a.l = al + bl * Math.pow(t, gamma);\n        return a + \"\";\n      };\n    };\n  }\n\n  function interpolateCubehelixGammaLong(gamma) {\n    return function(a, b) {\n      a = cubehelix(a);\n      b = cubehelix(b);\n      var ah = isNaN(a.h) ? b.h : a.h,\n          as = isNaN(a.s) ? b.s : a.s,\n          al = a.l,\n          bh = isNaN(b.h) ? 0 : b.h - ah,\n          bs = isNaN(b.s) ? 0 : b.s - as,\n          bl = b.l - al;\n      return function(t) {\n        a.h = ah + bh * t;\n        a.s = as + bs * t;\n        a.l = al + bl * Math.pow(t, gamma);\n        return a + \"\";\n      };\n    };\n  }\n\n  function interpolateHclLong(a, b) {\n    a = hcl(a);\n    b = hcl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        ac = isNaN(a.c) ? b.c : a.c,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : b.h - ah,\n        bc = isNaN(b.c) ? 0 : b.c - ac,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.c = ac + bc * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n\n  function interpolateHcl(a, b) {\n    a = hcl(a);\n    b = hcl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        ac = isNaN(a.c) ? b.c : a.c,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n        bc = isNaN(b.c) ? 0 : b.c - ac,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.c = ac + bc * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n\n  function interpolateLab(a, b) {\n    a = lab(a);\n    b = lab(b);\n    var al = a.l,\n        aa = a.a,\n        ab = a.b,\n        bl = b.l - al,\n        ba = b.a - aa,\n        bb = b.b - ab;\n    return function(t) {\n      a.l = al + bl * t;\n      a.a = aa + ba * t;\n      a.b = ab + bb * t;\n      return a + \"\";\n    };\n  }\n\n  function interpolateHslLong(a, b) {\n    a = hsl(a);\n    b = hsl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        as = isNaN(a.s) ? b.s : a.s,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : b.h - ah,\n        bs = isNaN(b.s) ? 0 : b.s - as,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.s = as + bs * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n\n  function interpolateHsl(a, b) {\n    a = hsl(a);\n    b = hsl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        as = isNaN(a.s) ? b.s : a.s,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n        bs = isNaN(b.s) ? 0 : b.s - as,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.s = as + bs * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n\n  function interpolateRgb(a, b) {\n    a = rgb(a);\n    b = rgb(b);\n    var ar = a.r,\n        ag = a.g,\n        ab = a.b,\n        br = b.r - ar,\n        bg = b.g - ag,\n        bb = b.b - ab;\n    return function(t) {\n      return format(Math.round(ar + br * t), Math.round(ag + bg * t), Math.round(ab + bb * t));\n    };\n  }\n\n  exports.interpolateCubehelix = interpolateCubehelixGamma(1);\n  exports.interpolateCubehelixLong = interpolateCubehelixGammaLong(1);\n\n  exports.color = color;\n  exports.rgb = rgb;\n  exports.hsl = hsl;\n  exports.lab = lab;\n  exports.hcl = hcl;\n  exports.cubehelix = cubehelix;\n  exports.interpolateRgb = interpolateRgb;\n  exports.interpolateHsl = interpolateHsl;\n  exports.interpolateHslLong = interpolateHslLong;\n  exports.interpolateLab = interpolateLab;\n  exports.interpolateHcl = interpolateHcl;\n  exports.interpolateHclLong = interpolateHclLong;\n  exports.interpolateCubehelixGamma = interpolateCubehelixGamma;\n  exports.interpolateCubehelixGammaLong = interpolateCubehelixGammaLong;\n\n}));\n},{}],5:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  factory((global.format = {}));\n}(this, function (exports) { 'use strict';\n\n  var zhCn = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"¥\", \"\"]\n  };\n\n  var ruRu = {\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0руб.\"]\n  };\n\n  var ptBr = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"R$\", \"\"]\n  };\n\n  var plPl = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"zł\"]\n  };\n\n  var nlNl = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"€\\xa0\", \"\"]\n  };\n\n  var mkMk = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0ден.\"]\n  };\n\n  var jaJp = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"\", \"円\"]\n  };\n\n  var itIt = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"€\", \"\"]\n  };\n\n  var heIl = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"₪\", \"\"]\n  };\n\n  var frFr = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n  var frCa = {\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"$\"]\n  };\n\n  var fiFi = {\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n  var esEs = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n  var enUs = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  };\n\n  var enGb = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"£\", \"\"]\n  };\n\n  var enCa = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  };\n\n  var deDe = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n  var caEs = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  }\n\n  function exponent(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  }\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, p + i - 1)[0]; // less than 1y!\n  }\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  }\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  }\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  }\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  }\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity(x) {\n    return x;\n  }\n\n  function locale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function format(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      return function(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            var i = -1, n = value.length, c;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      };\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = format((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: format,\n      formatPrefix: formatPrefix\n    };\n  }\n\n  function precisionRound(step, max) {\n    return Math.max(0, exponent(Math.abs(max)) - exponent(Math.abs(step))) + 1;\n  }\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n  }\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent(Math.abs(step)));\n  }\n\n  var localeDefinitions = {\n    \"ca-ES\": caEs,\n    \"de-DE\": deDe,\n    \"en-CA\": enCa,\n    \"en-GB\": enGb,\n    \"en-US\": enUs,\n    \"es-ES\": esEs,\n    \"fi-FI\": fiFi,\n    \"fr-CA\": frCa,\n    \"fr-FR\": frFr,\n    \"he-IL\": heIl,\n    \"it-IT\": itIt,\n    \"ja-JP\": jaJp,\n    \"mk-MK\": mkMk,\n    \"nl-NL\": nlNl,\n    \"pl-PL\": plPl,\n    \"pt-BR\": ptBr,\n    \"ru-RU\": ruRu,\n    \"zh-CN\": zhCn\n  };\n\n  var defaultLocale = locale(enUs);\n  exports.format = defaultLocale.format;\n  exports.formatPrefix = defaultLocale.formatPrefix;\n\n  function localeFormat(definition) {\n    if (typeof definition === \"string\") {\n      if (!localeDefinitions.hasOwnProperty(definition)) return null;\n      definition = localeDefinitions[definition];\n    }\n    return locale(definition);\n  }\n  ;\n\n  exports.localeFormat = localeFormat;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n\n}));\n},{}],6:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  factory((global.timeFormat = {}));\n}(this, function (exports) { 'use strict';\n\n  var zhCn = {\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%Y/%-m/%-d\",\n    time: \"%H:%M:%S\",\n    periods: [\"上午\", \"下午\"],\n    days: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n    shortDays: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n    months: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\n    shortMonths: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"]\n  };\n\n  var ruRu = {\n    dateTime: \"%A, %e %B %Y г. %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"воскресенье\", \"понедельник\", \"вторник\", \"среда\", \"четверг\", \"пятница\", \"суббота\"],\n    shortDays: [\"вс\", \"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\"],\n    months: [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"],\n    shortMonths: [\"янв\", \"фев\", \"мар\", \"апр\", \"май\", \"июн\", \"июл\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"]\n  };\n\n  var ptBr = {\n    dateTime: \"%A, %e de %B de %Y. %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\n    shortDays: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\n    months: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n    shortMonths: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"]\n  };\n\n  var plPl = {\n    dateTime: \"%A, %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Niedziela\", \"Poniedziałek\", \"Wtorek\", \"Środa\", \"Czwartek\", \"Piątek\", \"Sobota\"],\n    shortDays: [\"Niedz.\", \"Pon.\", \"Wt.\", \"Śr.\", \"Czw.\", \"Pt.\", \"Sob.\"],\n    months: [\"Styczeń\", \"Luty\", \"Marzec\", \"Kwiecień\", \"Maj\", \"Czerwiec\", \"Lipiec\", \"Sierpień\", \"Wrzesień\", \"Październik\", \"Listopad\", \"Grudzień\"],\n    shortMonths: [\"Stycz.\", \"Luty\", \"Marz.\", \"Kwie.\", \"Maj\", \"Czerw.\", \"Lipc.\", \"Sierp.\", \"Wrz.\", \"Paźdz.\", \"Listop.\", \"Grudz.\"]/* In Polish language abbraviated months are not commonly used so there is a dispute about the proper abbraviations. */\n  };\n\n  var nlNl = {\n    dateTime: \"%a %e %B %Y %T\",\n    date: \"%d-%m-%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"zondag\", \"maandag\", \"dinsdag\", \"woensdag\", \"donderdag\", \"vrijdag\", \"zaterdag\"],\n    shortDays: [\"zo\", \"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\"],\n    months: [\"januari\", \"februari\", \"maart\", \"april\", \"mei\", \"juni\", \"juli\", \"augustus\", \"september\", \"oktober\", \"november\", \"december\"],\n    shortMonths: [\"jan\", \"feb\", \"mrt\", \"apr\", \"mei\", \"jun\", \"jul\", \"aug\", \"sep\", \"okt\", \"nov\", \"dec\"]\n  };\n\n  var mkMk = {\n    dateTime: \"%A, %e %B %Y г. %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"недела\", \"понеделник\", \"вторник\", \"среда\", \"четврток\", \"петок\", \"сабота\"],\n    shortDays: [\"нед\", \"пон\", \"вто\", \"сре\", \"чет\", \"пет\", \"саб\"],\n    months: [\"јануари\", \"февруари\", \"март\", \"април\", \"мај\", \"јуни\", \"јули\", \"август\", \"септември\", \"октомври\", \"ноември\", \"декември\"],\n    shortMonths: [\"јан\", \"фев\", \"мар\", \"апр\", \"мај\", \"јун\", \"јул\", \"авг\", \"сеп\", \"окт\", \"ное\", \"дек\"]\n  };\n\n  var jaJp = {\n    dateTime: \"%Y %b %e %a %X\",\n    date: \"%Y/%m/%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"日曜日\", \"月曜日\", \"火曜日\", \"水曜日\", \"木曜日\", \"金曜日\", \"土曜日\"],\n    shortDays: [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"],\n    months: [\"睦月\", \"如月\", \"弥生\", \"卯月\", \"皐月\", \"水無月\", \"文月\", \"葉月\", \"長月\", \"神無月\", \"霜月\", \"師走\"],\n    shortMonths: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\", \"6月\", \"7月\", \"8月\", \"9月\", \"10月\", \"11月\", \"12月\"]\n  };\n\n  var itIt = {\n    dateTime: \"%A %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Domenica\", \"Lunedì\", \"Martedì\", \"Mercoledì\", \"Giovedì\", \"Venerdì\", \"Sabato\"],\n    shortDays: [\"Dom\", \"Lun\", \"Mar\", \"Mer\", \"Gio\", \"Ven\", \"Sab\"],\n    months: [\"Gennaio\", \"Febbraio\", \"Marzo\", \"Aprile\", \"Maggio\", \"Giugno\", \"Luglio\", \"Agosto\", \"Settembre\", \"Ottobre\", \"Novembre\", \"Dicembre\"],\n    shortMonths: [\"Gen\", \"Feb\", \"Mar\", \"Apr\", \"Mag\", \"Giu\", \"Lug\", \"Ago\", \"Set\", \"Ott\", \"Nov\", \"Dic\"]\n  };\n\n  var heIl = {\n    dateTime: \"%A, %e ב%B %Y %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"ראשון\", \"שני\", \"שלישי\", \"רביעי\", \"חמישי\", \"שישי\", \"שבת\"],\n    shortDays: [\"א׳\", \"ב׳\", \"ג׳\", \"ד׳\", \"ה׳\", \"ו׳\", \"ש׳\"],\n    months: [\"ינואר\", \"פברואר\", \"מרץ\", \"אפריל\", \"מאי\", \"יוני\", \"יולי\", \"אוגוסט\", \"ספטמבר\", \"אוקטובר\", \"נובמבר\", \"דצמבר\"],\n    shortMonths: [\"ינו׳\", \"פבר׳\", \"מרץ\", \"אפר׳\", \"מאי\", \"יוני\", \"יולי\", \"אוג׳\", \"ספט׳\", \"אוק׳\", \"נוב׳\", \"דצמ׳\"]\n  };\n\n  var frFr = {\n    dateTime: \"%A, le %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"],\n    shortDays: [\"dim.\", \"lun.\", \"mar.\", \"mer.\", \"jeu.\", \"ven.\", \"sam.\"],\n    months: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    shortMonths: [\"janv.\", \"févr.\", \"mars\", \"avr.\", \"mai\", \"juin\", \"juil.\", \"août\", \"sept.\", \"oct.\", \"nov.\", \"déc.\"]\n  };\n\n  var frCa = {\n    dateTime: \"%a %e %b %Y %X\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"\", \"\"],\n    days: [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"],\n    shortDays: [\"dim\", \"lun\", \"mar\", \"mer\", \"jeu\", \"ven\", \"sam\"],\n    months: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    shortMonths: [\"jan\", \"fév\", \"mar\", \"avr\", \"mai\", \"jui\", \"jul\", \"aoû\", \"sep\", \"oct\", \"nov\", \"déc\"]\n  };\n\n  var fiFi = {\n    dateTime: \"%A, %-d. %Bta %Y klo %X\",\n    date: \"%-d.%-m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"a.m.\", \"p.m.\"],\n    days: [\"sunnuntai\", \"maanantai\", \"tiistai\", \"keskiviikko\", \"torstai\", \"perjantai\", \"lauantai\"],\n    shortDays: [\"Su\", \"Ma\", \"Ti\", \"Ke\", \"To\", \"Pe\", \"La\"],\n    months: [\"tammikuu\", \"helmikuu\", \"maaliskuu\", \"huhtikuu\", \"toukokuu\", \"kesäkuu\", \"heinäkuu\", \"elokuu\", \"syyskuu\", \"lokakuu\", \"marraskuu\", \"joulukuu\"],\n    shortMonths: [\"Tammi\", \"Helmi\", \"Maalis\", \"Huhti\", \"Touko\", \"Kesä\", \"Heinä\", \"Elo\", \"Syys\", \"Loka\", \"Marras\", \"Joulu\"]\n  };\n\n  var esEs = {\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"domingo\", \"lunes\", \"martes\", \"miércoles\", \"jueves\", \"viernes\", \"sábado\"],\n    shortDays: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    months: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n    shortMonths: [\"ene\", \"feb\", \"mar\", \"abr\", \"may\", \"jun\", \"jul\", \"ago\", \"sep\", \"oct\", \"nov\", \"dic\"]\n  };\n\n  var enUs = {\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  var enGb = {\n    dateTime: \"%a %e %b %X %Y\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  var enCa = {\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  var deDe = {\n    dateTime: \"%A, der %e. %B %Y, %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"],\n    shortDays: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n    months: [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mrz\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dez\"]\n  };\n\n  var caEs = {\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"diumenge\", \"dilluns\", \"dimarts\", \"dimecres\", \"dijous\", \"divendres\", \"dissabte\"],\n    shortDays: [\"dg.\", \"dl.\", \"dt.\", \"dc.\", \"dj.\", \"dv.\", \"ds.\"],\n    months: [\"gener\", \"febrer\", \"març\", \"abril\", \"maig\", \"juny\", \"juliol\", \"agost\", \"setembre\", \"octubre\", \"novembre\", \"desembre\"],\n    shortMonths: [\"gen.\", \"febr.\", \"març\", \"abr.\", \"maig\", \"juny\", \"jul.\", \"ag.\", \"set.\", \"oct.\", \"nov.\", \"des.\"]\n  };\n\n  var t0 = new Date;\n  var t1 = new Date;\n\n  function newInterval(floori, offseti, count) {\n\n    function interval(date) {\n      return floori(date = new Date(+date)), date;\n    }\n\n    interval.floor = interval;\n\n    interval.round = function(date) {\n      var d0 = new Date(+date),\n          d1 = new Date(date - 1);\n      floori(d0), floori(d1), offseti(d1, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.ceil = function(date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), date;\n    };\n\n    interval.offset = function(date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function(start, stop, step) {\n      var range = [];\n      start = new Date(start - 1);\n      stop = new Date(+stop);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n      offseti(start, 1), floori(start);\n      if (start < stop) range.push(new Date(+start));\n      while (offseti(start, step), floori(start), start < stop) range.push(new Date(+start));\n      return range;\n    };\n\n    interval.filter = function(test) {\n      return newInterval(function(date) {\n        while (floori(date), !test(date)) date.setTime(date - 1);\n      }, function(date, step) {\n        while (--step >= 0) while (offseti(date, 1), !test(date));\n      });\n    };\n\n    if (count) interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    return interval;\n  }\n\n  var day = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 864e5;\n  });\n\n  function weekday(i) {\n    return newInterval(function(date) {\n      date.setHours(0, 0, 0, 0);\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function(start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 6048e5;\n    });\n  }\n\n  var sunday = weekday(0);\n  var monday = weekday(1);\n\n  var year = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setMonth(0, 1);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function(start, end) {\n    return end.getFullYear() - start.getFullYear();\n  });\n\n  var utcDay = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function(start, end) {\n    return (end - start) / 864e5;\n  });\n\n  function utcWeekday(i) {\n    return newInterval(function(date) {\n      date.setUTCHours(0, 0, 0, 0);\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function(start, end) {\n      return (end - start) / 6048e5;\n    });\n  }\n\n  var utcSunday = utcWeekday(0);\n  var utcMonday = utcWeekday(1);\n\n  var utcYear = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCMonth(0, 1);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function(start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  });\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newYear(y) {\n    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n  }\n\n  function locale(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    var periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"S\": formatSeconds,\n      \"U\": formatWeekNumberSunday,\n      \"w\": formatWeekdayNumber,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"S\": formatUTCSeconds,\n      \"U\": formatUTCWeekNumberSunday,\n      \"w\": formatUTCWeekdayNumber,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"S\": parseSeconds,\n      \"U\": parseWeekNumberSunday,\n      \"w\": parseWeekdayNumber,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    };\n\n    // These recursive directive definitions must be deferred.\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n            if (format = formats[c]) c = format(date, pad == null ? (c === \"e\" ? \" \" : \"0\") : pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, newDate) {\n      return function(string) {\n        var d = newYear(1900),\n            i = parseSpecifier(d, specifier, string, 0);\n        if (i != string.length) return null;\n\n        // The am-pm flag is 0 for AM, and 1 for PM.\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n        // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n        if (\"Z\" in d) {\n          if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n            var day = utcDate(newYear(d.y)).getUTCDay();\n            if (\"W\" in d) d.U = d.W, d.w = (d.w + 6) % 7, --day;\n            d.m = 0;\n            d.d = d.w + d.U * 7 - (day + 6) % 7;\n          }\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        }\n\n        // Otherwise, all fields are in local time.\n        if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          var day = newDate(newYear(d.y)).getDay();\n          if (\"W\" in d) d.U = d.W, d.w = (d.w + 6) % 7, --day;\n          d.m = 0;\n          d.d = d.w + d.U * 7 - (day + 6) % 7;\n        }\n        return newDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodLookup[string.slice(i, i += 2).toLowerCase()];\n      return n == null ? -1 : (d.p = n, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    return {\n      format: function(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n        f.parse = newParse(specifier, localDate);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      utcFormat: function(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n        f.parse = newParse(specifier, utcDate);\n        f.toString = function() { return specifier; };\n        return f;\n      }\n    };\n  }\n\n  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n  var numberRe = /^\\s*\\d+/;\n  var percentRe = /^%/;\n  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\n  function pad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    var map = {}, i = -1, n = names.length;\n    while (++i < n) map[names[i].toLowerCase()] = i;\n    return map;\n  }\n\n  function parseWeekdayNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n    if (n) {\n      d.Z = n[1] ? 0              // 'Z' for UTC\n          : n[3] ? -(n[2] + n[3]) // sign differs from getTimezoneOffset!\n                 : -n[2] * 100;\n      return i + n[0].length;\n    }\n    return -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad(1 + day.count(year(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad(sunday.count(year(d), d), p, 2);\n  }\n\n  function formatWeekdayNumber(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad(monday.count(year(d), d), p, 2);\n  }\n\n  function formatYear(d, p) {\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n        + pad(z / 60 | 0, \"0\", 2)\n        + pad(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad(utcSunday.count(utcYear(d), d), p, 2);\n  }\n\n  function formatUTCWeekdayNumber(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad(utcMonday.count(utcYear(d), d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  formatIsoNative.toString = function() {\n    return isoSpecifier;\n  };\n\n  var formatIso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\")\n      ? formatIsoNative\n      : enUs.utcFormat(isoSpecifier);\n\n  var isoFormat = formatIso;\n\n  var localeDefinitions = {\n    \"ca-ES\": caEs,\n    \"de-DE\": deDe,\n    \"en-CA\": enCa,\n    \"en-GB\": enGb,\n    \"en-US\": enUs,\n    \"es-ES\": esEs,\n    \"fi-FI\": fiFi,\n    \"fr-CA\": frCa,\n    \"fr-FR\": frFr,\n    \"he-IL\": heIl,\n    \"it-IT\": itIt,\n    \"ja-JP\": jaJp,\n    \"mk-MK\": mkMk,\n    \"nl-NL\": nlNl,\n    \"pl-PL\": plPl,\n    \"pt-BR\": ptBr,\n    \"ru-RU\": ruRu,\n    \"zh-CN\": zhCn\n  };\n\n  var defaultLocale = locale(enUs);\n  exports.format = defaultLocale.format;\n  exports.utcFormat = defaultLocale.utcFormat;\n\n  function localeFormat(definition) {\n    if (typeof definition === \"string\") {\n      if (!localeDefinitions.hasOwnProperty(definition)) return null;\n      definition = localeDefinitions[definition];\n    }\n    return locale(definition);\n  }\n  ;\n\n  exports.localeFormat = localeFormat;\n  exports.isoFormat = isoFormat;\n\n}));\n},{}],7:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  factory((global.dsv = {}));\n}(this, function (exports) { 'use strict';\n\n  var dsv = function(delimiter) {\n    var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    function parse(text, f) {\n      var o;\n      return parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) { return f(a(row), i); } : a;\n      });\n    }\n\n    function parseRows(text, f) {\n      var EOL = {}, // sentinel value for end-of-line\n          EOF = {}, // sentinel value for end-of-file\n          rows = [], // output rows\n          N = text.length,\n          I = 0, // current character index\n          n = 0, // the current line number\n          t, // the current token\n          eol; // is the current token followed by EOL?\n\n      function token() {\n        if (I >= N) return EOF; // special case: end of file\n        if (eol) return eol = false, EOL; // special case: end of line\n\n        // special case: quotes\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n        }\n\n        // common case: find next delimiter or newline\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; // \\n\n          else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n          else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        // special case: last token before EOF\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    }\n\n    function format(rows) {\n      if (Array.isArray(rows[0])) return formatRows(rows); // deprecated; use formatRows\n      var fieldSet = Object.create(null), fields = [];\n\n      // Compute unique fields in order of discovery.\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!((field += \"\") in fieldSet)) {\n            fields.push(fieldSet[field] = field);\n          }\n        }\n      });\n\n      return [fields.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    }\n\n    function formatRows(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    }\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return reFormat.test(text) ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\" : text;\n    }\n\n    return {\n      parse: parse,\n      parseRows: parseRows,\n      format: format,\n      formatRows: formatRows\n    };\n  }\n\n  exports.csv = dsv(\",\");\n  exports.tsv = dsv(\"\\t\");\n\n  exports.dsv = dsv;\n\n}));\n},{}],8:[function(require,module,exports){\nif (typeof Map === \"undefined\") {\n  Map = function() { this.clear(); };\n  Map.prototype = {\n    set: function(k, v) { this._[k] = v; return this; },\n    get: function(k) { return this._[k]; },\n    has: function(k) { return k in this._; },\n    delete: function(k) { return k in this._ && delete this._[k]; },\n    clear: function() { this._ = Object.create(null); },\n    get size() { var n = 0; for (var k in this._) ++n; return n; },\n    forEach: function(c) { for (var k in this._) c(this._[k], k, this); }\n  };\n} else (function() {\n  var m = new Map;\n  if (m.set(0, 0) !== m) {\n    m = m.set;\n    Map.prototype.set = function() { m.apply(this, arguments); return this; };\n  }\n})();\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  factory((global.timeFormat = {}));\n}(this, function (exports) { 'use strict';\n\n  var zhCn = {\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%Y/%-m/%-d\",\n    time: \"%H:%M:%S\",\n    periods: [\"上午\", \"下午\"],\n    days: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n    shortDays: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n    months: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\n    shortMonths: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"]\n  };\n\n  var ruRu = {\n    dateTime: \"%A, %e %B %Y г. %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"воскресенье\", \"понедельник\", \"вторник\", \"среда\", \"четверг\", \"пятница\", \"суббота\"],\n    shortDays: [\"вс\", \"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\"],\n    months: [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"],\n    shortMonths: [\"янв\", \"фев\", \"мар\", \"апр\", \"май\", \"июн\", \"июл\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"]\n  };\n\n  var ptBr = {\n    dateTime: \"%A, %e de %B de %Y. %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\n    shortDays: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\n    months: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n    shortMonths: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"]\n  };\n\n  var plPl = {\n    dateTime: \"%A, %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Niedziela\", \"Poniedziałek\", \"Wtorek\", \"Środa\", \"Czwartek\", \"Piątek\", \"Sobota\"],\n    shortDays: [\"Niedz.\", \"Pon.\", \"Wt.\", \"Śr.\", \"Czw.\", \"Pt.\", \"Sob.\"],\n    months: [\"Styczeń\", \"Luty\", \"Marzec\", \"Kwiecień\", \"Maj\", \"Czerwiec\", \"Lipiec\", \"Sierpień\", \"Wrzesień\", \"Październik\", \"Listopad\", \"Grudzień\"],\n    shortMonths: [\"Stycz.\", \"Luty\", \"Marz.\", \"Kwie.\", \"Maj\", \"Czerw.\", \"Lipc.\", \"Sierp.\", \"Wrz.\", \"Paźdz.\", \"Listop.\", \"Grudz.\"]/* In Polish language abbraviated months are not commonly used so there is a dispute about the proper abbraviations. */\n  };\n\n  var nlNl = {\n    dateTime: \"%a %e %B %Y %T\",\n    date: \"%d-%m-%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"zondag\", \"maandag\", \"dinsdag\", \"woensdag\", \"donderdag\", \"vrijdag\", \"zaterdag\"],\n    shortDays: [\"zo\", \"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\"],\n    months: [\"januari\", \"februari\", \"maart\", \"april\", \"mei\", \"juni\", \"juli\", \"augustus\", \"september\", \"oktober\", \"november\", \"december\"],\n    shortMonths: [\"jan\", \"feb\", \"mrt\", \"apr\", \"mei\", \"jun\", \"jul\", \"aug\", \"sep\", \"okt\", \"nov\", \"dec\"]\n  };\n\n  var mkMk = {\n    dateTime: \"%A, %e %B %Y г. %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"недела\", \"понеделник\", \"вторник\", \"среда\", \"четврток\", \"петок\", \"сабота\"],\n    shortDays: [\"нед\", \"пон\", \"вто\", \"сре\", \"чет\", \"пет\", \"саб\"],\n    months: [\"јануари\", \"февруари\", \"март\", \"април\", \"мај\", \"јуни\", \"јули\", \"август\", \"септември\", \"октомври\", \"ноември\", \"декември\"],\n    shortMonths: [\"јан\", \"фев\", \"мар\", \"апр\", \"мај\", \"јун\", \"јул\", \"авг\", \"сеп\", \"окт\", \"ное\", \"дек\"]\n  };\n\n  var jaJp = {\n    dateTime: \"%Y %b %e %a %X\",\n    date: \"%Y/%m/%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"日曜日\", \"月曜日\", \"火曜日\", \"水曜日\", \"木曜日\", \"金曜日\", \"土曜日\"],\n    shortDays: [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"],\n    months: [\"睦月\", \"如月\", \"弥生\", \"卯月\", \"皐月\", \"水無月\", \"文月\", \"葉月\", \"長月\", \"神無月\", \"霜月\", \"師走\"],\n    shortMonths: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\", \"6月\", \"7月\", \"8月\", \"9月\", \"10月\", \"11月\", \"12月\"]\n  };\n\n  var itIt = {\n    dateTime: \"%A %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Domenica\", \"Lunedì\", \"Martedì\", \"Mercoledì\", \"Giovedì\", \"Venerdì\", \"Sabato\"],\n    shortDays: [\"Dom\", \"Lun\", \"Mar\", \"Mer\", \"Gio\", \"Ven\", \"Sab\"],\n    months: [\"Gennaio\", \"Febbraio\", \"Marzo\", \"Aprile\", \"Maggio\", \"Giugno\", \"Luglio\", \"Agosto\", \"Settembre\", \"Ottobre\", \"Novembre\", \"Dicembre\"],\n    shortMonths: [\"Gen\", \"Feb\", \"Mar\", \"Apr\", \"Mag\", \"Giu\", \"Lug\", \"Ago\", \"Set\", \"Ott\", \"Nov\", \"Dic\"]\n  };\n\n  var heIl = {\n    dateTime: \"%A, %e ב%B %Y %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"ראשון\", \"שני\", \"שלישי\", \"רביעי\", \"חמישי\", \"שישי\", \"שבת\"],\n    shortDays: [\"א׳\", \"ב׳\", \"ג׳\", \"ד׳\", \"ה׳\", \"ו׳\", \"ש׳\"],\n    months: [\"ינואר\", \"פברואר\", \"מרץ\", \"אפריל\", \"מאי\", \"יוני\", \"יולי\", \"אוגוסט\", \"ספטמבר\", \"אוקטובר\", \"נובמבר\", \"דצמבר\"],\n    shortMonths: [\"ינו׳\", \"פבר׳\", \"מרץ\", \"אפר׳\", \"מאי\", \"יוני\", \"יולי\", \"אוג׳\", \"ספט׳\", \"אוק׳\", \"נוב׳\", \"דצמ׳\"]\n  };\n\n  var frFr = {\n    dateTime: \"%A, le %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"],\n    shortDays: [\"dim.\", \"lun.\", \"mar.\", \"mer.\", \"jeu.\", \"ven.\", \"sam.\"],\n    months: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    shortMonths: [\"janv.\", \"févr.\", \"mars\", \"avr.\", \"mai\", \"juin\", \"juil.\", \"août\", \"sept.\", \"oct.\", \"nov.\", \"déc.\"]\n  };\n\n  var frCa = {\n    dateTime: \"%a %e %b %Y %X\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"\", \"\"],\n    days: [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"],\n    shortDays: [\"dim\", \"lun\", \"mar\", \"mer\", \"jeu\", \"ven\", \"sam\"],\n    months: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    shortMonths: [\"jan\", \"fév\", \"mar\", \"avr\", \"mai\", \"jui\", \"jul\", \"aoû\", \"sep\", \"oct\", \"nov\", \"déc\"]\n  };\n\n  var fiFi = {\n    dateTime: \"%A, %-d. %Bta %Y klo %X\",\n    date: \"%-d.%-m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"a.m.\", \"p.m.\"],\n    days: [\"sunnuntai\", \"maanantai\", \"tiistai\", \"keskiviikko\", \"torstai\", \"perjantai\", \"lauantai\"],\n    shortDays: [\"Su\", \"Ma\", \"Ti\", \"Ke\", \"To\", \"Pe\", \"La\"],\n    months: [\"tammikuu\", \"helmikuu\", \"maaliskuu\", \"huhtikuu\", \"toukokuu\", \"kesäkuu\", \"heinäkuu\", \"elokuu\", \"syyskuu\", \"lokakuu\", \"marraskuu\", \"joulukuu\"],\n    shortMonths: [\"Tammi\", \"Helmi\", \"Maalis\", \"Huhti\", \"Touko\", \"Kesä\", \"Heinä\", \"Elo\", \"Syys\", \"Loka\", \"Marras\", \"Joulu\"]\n  };\n\n  var esEs = {\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"domingo\", \"lunes\", \"martes\", \"miércoles\", \"jueves\", \"viernes\", \"sábado\"],\n    shortDays: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    months: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n    shortMonths: [\"ene\", \"feb\", \"mar\", \"abr\", \"may\", \"jun\", \"jul\", \"ago\", \"sep\", \"oct\", \"nov\", \"dic\"]\n  };\n\n  var enUs = {\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  var enGb = {\n    dateTime: \"%a %e %b %X %Y\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  var enCa = {\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  var deDe = {\n    dateTime: \"%A, der %e. %B %Y, %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"],\n    shortDays: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n    months: [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mrz\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dez\"]\n  };\n\n  var caEs = {\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"diumenge\", \"dilluns\", \"dimarts\", \"dimecres\", \"dijous\", \"divendres\", \"dissabte\"],\n    shortDays: [\"dg.\", \"dl.\", \"dt.\", \"dc.\", \"dj.\", \"dv.\", \"ds.\"],\n    months: [\"gener\", \"febrer\", \"març\", \"abril\", \"maig\", \"juny\", \"juliol\", \"agost\", \"setembre\", \"octubre\", \"novembre\", \"desembre\"],\n    shortMonths: [\"gen.\", \"febr.\", \"març\", \"abr.\", \"maig\", \"juny\", \"jul.\", \"ag.\", \"set.\", \"oct.\", \"nov.\", \"des.\"]\n  };\n\n  var t0 = new Date;\n  var t1 = new Date;\n\n  function newInterval(floori, offseti, count) {\n\n    function interval(date) {\n      return floori(date = new Date(+date)), date;\n    }\n\n    interval.floor = interval;\n\n    interval.round = function(date) {\n      var d0 = new Date(+date),\n          d1 = new Date(date - 1);\n      floori(d0), floori(d1), offseti(d1, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.ceil = function(date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), date;\n    };\n\n    interval.offset = function(date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function(start, stop, step) {\n      var range = [];\n      start = new Date(start - 1);\n      stop = new Date(+stop);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n      offseti(start, 1), floori(start);\n      if (start < stop) range.push(new Date(+start));\n      while (offseti(start, step), floori(start), start < stop) range.push(new Date(+start));\n      return range;\n    };\n\n    interval.filter = function(test) {\n      return newInterval(function(date) {\n        while (floori(date), !test(date)) date.setTime(date - 1);\n      }, function(date, step) {\n        while (--step >= 0) while (offseti(date, 1), !test(date));\n      });\n    };\n\n    if (count) interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    return interval;\n  }\n\n  var day = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 864e5;\n  });\n\n  function weekday(i) {\n    return newInterval(function(date) {\n      date.setHours(0, 0, 0, 0);\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function(start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 6048e5;\n    });\n  }\n\n  var sunday = weekday(0);\n  var monday = weekday(1);\n\n  var year = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setMonth(0, 1);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function(start, end) {\n    return end.getFullYear() - start.getFullYear();\n  });\n\n  var utcDay = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function(start, end) {\n    return (end - start) / 864e5;\n  });\n\n  function utcWeekday(i) {\n    return newInterval(function(date) {\n      date.setUTCHours(0, 0, 0, 0);\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function(start, end) {\n      return (end - start) / 6048e5;\n    });\n  }\n\n  var utcSunday = utcWeekday(0);\n  var utcMonday = utcWeekday(1);\n\n  var utcYear = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCMonth(0, 1);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function(start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  });\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newYear(y) {\n    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n  }\n\n  function locale(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    var periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"S\": formatSeconds,\n      \"U\": formatWeekNumberSunday,\n      \"w\": formatWeekdayNumber,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"S\": formatUTCSeconds,\n      \"U\": formatUTCWeekNumberSunday,\n      \"w\": formatUTCWeekdayNumber,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"S\": parseSeconds,\n      \"U\": parseWeekNumberSunday,\n      \"w\": parseWeekdayNumber,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    };\n\n    // These recursive directive definitions must be deferred.\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n            if (format = formats[c]) c = format(date, pad == null ? (c === \"e\" ? \" \" : \"0\") : pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, newDate) {\n      return function(string) {\n        var d = newYear(1900),\n            i = parseSpecifier(d, specifier, string, 0);\n        if (i != string.length) return null;\n\n        // The am-pm flag is 0 for AM, and 1 for PM.\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n        // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n        if (\"Z\" in d) {\n          if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n            var day = utcDate(newYear(d.y)).getUTCDay();\n            if (\"W\" in d) d.U = d.W, d.w = (d.w + 6) % 7, --day;\n            d.m = 0;\n            d.d = d.w + d.U * 7 - (day + 6) % 7;\n          }\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        }\n\n        // Otherwise, all fields are in local time.\n        if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          var day = newDate(newYear(d.y)).getDay();\n          if (\"W\" in d) d.U = d.W, d.w = (d.w + 6) % 7, --day;\n          d.m = 0;\n          d.d = d.w + d.U * 7 - (day + 6) % 7;\n        }\n        return newDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (d.p = n, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    return {\n      format: function(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n        f.parse = newParse(specifier, localDate);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      utcFormat: function(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n        f.parse = newParse(specifier, utcDate);\n        f.toString = function() { return specifier; };\n        return f;\n      }\n    };\n  }\n\n  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n  var numberRe = /^\\s*\\d+/;\n  var percentRe = /^%/;\n  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\n  function pad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    var map = new Map, i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n\n  function parseWeekdayNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5))\n        ? (d.Z = -string, i + 5) // sign differs from getTimezoneOffset!\n        : -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad(1 + day.count(year(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad(sunday.count(year(d), d), p, 2);\n  }\n\n  function formatWeekdayNumber(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad(monday.count(year(d), d), p, 2);\n  }\n\n  function formatYear(d, p) {\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n        + pad(z / 60 | 0, \"0\", 2)\n        + pad(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad(utcSunday.count(utcYear(d), d), p, 2);\n  }\n\n  function formatUTCWeekdayNumber(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad(utcMonday.count(utcYear(d), d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  formatIsoNative.toString = function() {\n    return isoSpecifier;\n  };\n\n  var formatIso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\")\n      ? formatIsoNative\n      : enUs.utcFormat(isoSpecifier);\n\n  var isoFormat = formatIso;\n\n  var localeDefinitions = (new Map)\n      .set(\"ca-ES\", caEs)\n      .set(\"de-DE\", deDe)\n      .set(\"en-CA\", enCa)\n      .set(\"en-GB\", enGb)\n      .set(\"en-US\", enUs)\n      .set(\"es-ES\", esEs)\n      .set(\"fi-FI\", fiFi)\n      .set(\"fr-CA\", frCa)\n      .set(\"fr-FR\", frFr)\n      .set(\"he-IL\", heIl)\n      .set(\"it-IT\", itIt)\n      .set(\"ja-JP\", jaJp)\n      .set(\"mk-MK\", mkMk)\n      .set(\"nl-NL\", nlNl)\n      .set(\"pl-PL\", plPl)\n      .set(\"pt-BR\", ptBr)\n      .set(\"ru-RU\", ruRu)\n      .set(\"zh-CN\", zhCn);\n\n  var defaultLocale = locale(enUs);\n  exports.format = defaultLocale.format;\n  exports.utcFormat = defaultLocale.utcFormat;\n\n  function localeFormat(definition) {\n    if (typeof definition === \"string\") {\n      definition = localeDefinitions.get(definition);\n      if (!definition) return null;\n    }\n    return locale(definition);\n  }\n  ;\n\n  exports.localeFormat = localeFormat;\n  exports.isoFormat = isoFormat;\n\n}));\n},{}],9:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  factory((global.time = {}));\n}(this, function (exports) { 'use strict';\n\n  var t1 = new Date;\n\n  var t0 = new Date;\n\n  function newInterval(floori, offseti, count) {\n\n    function interval(date) {\n      return floori(date = new Date(+date)), date;\n    }\n\n    interval.floor = interval;\n\n    interval.round = function(date) {\n      var d0 = new Date(+date),\n          d1 = new Date(date - 1);\n      floori(d0), floori(d1), offseti(d1, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.ceil = function(date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), date;\n    };\n\n    interval.offset = function(date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function(start, stop, step) {\n      var range = [];\n      start = new Date(start - 1);\n      stop = new Date(+stop);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n      offseti(start, 1), floori(start);\n      if (start < stop) range.push(new Date(+start));\n      while (offseti(start, step), floori(start), start < stop) range.push(new Date(+start));\n      return range;\n    };\n\n    interval.filter = function(test) {\n      return newInterval(function(date) {\n        while (floori(date), !test(date)) date.setTime(date - 1);\n      }, function(date, step) {\n        while (--step >= 0) while (offseti(date, 1), !test(date));\n      });\n    };\n\n    if (count) interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    return interval;\n  }\n\n  var second = newInterval(function(date) {\n    date.setMilliseconds(0);\n  }, function(date, step) {\n    date.setTime(+date + step * 1e3);\n  }, function(start, end) {\n    return (end - start) / 1e3;\n  });\n\n  exports.seconds = second.range;\n\n  var minute = newInterval(function(date) {\n    date.setSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 6e4);\n  }, function(start, end) {\n    return (end - start) / 6e4;\n  });\n\n  exports.minutes = minute.range;\n\n  var hour = newInterval(function(date) {\n    date.setMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 36e5);\n  }, function(start, end) {\n    return (end - start) / 36e5;\n  });\n\n  exports.hours = hour.range;\n\n  var day = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 864e5;\n  });\n\n  exports.days = day.range;\n\n  function weekday(i) {\n    return newInterval(function(date) {\n      date.setHours(0, 0, 0, 0);\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function(start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 6048e5;\n    });\n  }\n\n  exports.sunday = weekday(0);\n\n  exports.sundays = exports.sunday.range;\n\n  exports.monday = weekday(1);\n\n  exports.mondays = exports.monday.range;\n\n  exports.tuesday = weekday(2);\n\n  exports.tuesdays = exports.tuesday.range;\n\n  exports.wednesday = weekday(3);\n\n  exports.wednesdays = exports.wednesday.range;\n\n  exports.thursday = weekday(4);\n\n  exports.thursdays = exports.thursday.range;\n\n  exports.friday = weekday(5);\n\n  exports.fridays = exports.friday.range;\n\n  exports.saturday = weekday(6);\n\n  exports.saturdays = exports.saturday.range;\n\n  var week = exports.sunday;\n\n  exports.weeks = week.range;\n\n  var month = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setDate(1);\n  }, function(date, step) {\n    date.setMonth(date.getMonth() + step);\n  }, function(start, end) {\n    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n  });\n\n  exports.months = month.range;\n\n  var year = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setMonth(0, 1);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function(start, end) {\n    return end.getFullYear() - start.getFullYear();\n  });\n\n  exports.years = year.range;\n\n  var utcSecond = newInterval(function(date) {\n    date.setUTCMilliseconds(0);\n  }, function(date, step) {\n    date.setTime(+date + step * 1e3);\n  }, function(start, end) {\n    return (end - start) / 1e3;\n  });\n\n  exports.utcSeconds = utcSecond.range;\n\n  var utcMinute = newInterval(function(date) {\n    date.setUTCSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 6e4);\n  }, function(start, end) {\n    return (end - start) / 6e4;\n  });\n\n  exports.utcMinutes = utcMinute.range;\n\n  var utcHour = newInterval(function(date) {\n    date.setUTCMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 36e5);\n  }, function(start, end) {\n    return (end - start) / 36e5;\n  });\n\n  exports.utcHours = utcHour.range;\n\n  var utcDay = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function(start, end) {\n    return (end - start) / 864e5;\n  });\n\n  exports.utcDays = utcDay.range;\n\n  function utcWeekday(i) {\n    return newInterval(function(date) {\n      date.setUTCHours(0, 0, 0, 0);\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function(start, end) {\n      return (end - start) / 6048e5;\n    });\n  }\n\n  exports.utcSunday = utcWeekday(0);\n\n  exports.utcSundays = exports.utcSunday.range;\n\n  exports.utcMonday = utcWeekday(1);\n\n  exports.utcMondays = exports.utcMonday.range;\n\n  exports.utcTuesday = utcWeekday(2);\n\n  exports.utcTuesdays = exports.utcTuesday.range;\n\n  exports.utcWednesday = utcWeekday(3);\n\n  exports.utcWednesdays = exports.utcWednesday.range;\n\n  exports.utcThursday = utcWeekday(4);\n\n  exports.utcThursdays = exports.utcThursday.range;\n\n  exports.utcFriday = utcWeekday(5);\n\n  exports.utcFridays = exports.utcFriday.range;\n\n  exports.utcSaturday = utcWeekday(6);\n\n  exports.utcSaturdays = exports.utcSaturday.range;\n\n  var utcWeek = exports.utcSunday;\n\n  exports.utcWeeks = utcWeek.range;\n\n  var utcMonth = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCDate(1);\n  }, function(date, step) {\n    date.setUTCMonth(date.getUTCMonth() + step);\n  }, function(start, end) {\n    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n  });\n\n  exports.utcMonths = utcMonth.range;\n\n  var utcYear = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCMonth(0, 1);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function(start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  });\n\n  exports.utcYears = utcYear.range;\n\n  exports.interval = newInterval;\n  exports.second = second;\n  exports.minute = minute;\n  exports.hour = hour;\n  exports.day = day;\n  exports.week = week;\n  exports.month = month;\n  exports.year = year;\n  exports.utcSecond = utcSecond;\n  exports.utcMinute = utcMinute;\n  exports.utcHour = utcHour;\n  exports.utcDay = utcDay;\n  exports.utcWeek = utcWeek;\n  exports.utcMonth = utcMonth;\n  exports.utcYear = utcYear;\n\n}));\n},{}],10:[function(require,module,exports){\nvar util = require('../util'),\n    Measures = require('./measures'),\n    Collector = require('./collector');\n\nfunction Aggregator() {\n  this._cells = {};\n  this._aggr = [];\n  this._stream = false;\n}\n\nvar Flags = Aggregator.Flags = {\n  ADD_CELL: 1,\n  MOD_CELL: 2\n};\n\nvar proto = Aggregator.prototype;\n\n// Parameters\n\nproto.stream = function(v) {\n  if (v == null) return this._stream;\n  this._stream = !!v;\n  this._aggr = [];\n  return this;\n};\n\n// key accessor to use for streaming removes\nproto.key = function(key) {\n  if (key == null) return this._key;\n  this._key = util.$(key);\n  return this;\n};\n\n// Input: array of objects of the form\n// {name: string, get: function}\nproto.groupby = function(dims) {\n  this._dims = util.array(dims).map(function(d, i) {\n    d = util.isString(d) ? {name: d, get: util.$(d)}\n      : util.isFunction(d) ? {name: util.name(d) || d.name || ('_' + i), get: d}\n      : (d.name && util.isFunction(d.get)) ? d : null;\n    if (d == null) throw 'Invalid groupby argument: ' + d;\n    return d;\n  });\n  return this.clear();\n};\n\n// Input: array of objects of the form\n// {name: string, ops: [string, ...]}\nproto.summarize = function(fields) {\n  fields = summarize_args(fields);\n  this._count = true;\n  var aggr = (this._aggr = []),\n      m, f, i, j, op, as, get;\n\n  for (i=0; i<fields.length; ++i) {\n    for (j=0, m=[], f=fields[i]; j<f.ops.length; ++j) {\n      op = f.ops[j];\n      if (op !== 'count') this._count = false;\n      as = (f.as && f.as[j]) || (op + (f.name==='*' ? '' : '_'+f.name));\n      m.push(Measures[op](as));\n    }\n    get = f.get && util.$(f.get) ||\n      (f.name === '*' ? util.identity : util.$(f.name));\n    aggr.push({\n      name: f.name,\n      measures: Measures.create(\n        m,\n        this._stream, // streaming remove flag\n        get,          // input tuple getter\n        this._assign) // output tuple setter\n    });\n  }\n  return this.clear();\n};\n\n// Convenience method to summarize by count\nproto.count = function() {\n  return this.summarize({'*':'count'});\n};\n\n// Override to perform custom tuple value assignment\nproto._assign = function(object, name, value) {\n  object[name] = value;\n};\n\nfunction summarize_args(fields) {\n  if (util.isArray(fields)) { return fields; }\n  if (fields == null) { return []; }\n  var a = [], name, ops;\n  for (name in fields) {\n    ops = util.array(fields[name]);\n    a.push({name: name, ops: ops});\n  }\n  return a;\n}\n\n// Cell Management\n\nproto.clear = function() {\n  return (this._cells = {}, this);\n};\n\nproto._cellkey = function(x) {\n  var d = this._dims,\n      n = d.length, i,\n      k = String(d[0].get(x));\n  for (i=1; i<n; ++i) {\n    k += '|' + d[i].get(x);\n  }\n  return k;\n};\n\nproto._cell = function(x) {\n  var key = this._dims.length ? this._cellkey(x) : '';\n  return this._cells[key] || (this._cells[key] = this._newcell(x, key));\n};\n\nproto._newcell = function(x, key) {\n  var cell = {\n    num:   0,\n    tuple: this._newtuple(x, key),\n    flag:  Flags.ADD_CELL,\n    aggs:  {}\n  };\n\n  var aggr = this._aggr, i;\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name] = new aggr[i].measures(cell, cell.tuple);\n  }\n  if (cell.collect) {\n    cell.data = new Collector(this._key);\n  }\n  return cell;\n};\n\nproto._newtuple = function(x) {\n  var dims = this._dims,\n      t = {}, i, n;\n  for (i=0, n=dims.length; i<n; ++i) {\n    t[dims[i].name] = dims[i].get(x);\n  }\n  return this._ingest(t);\n};\n\n// Override to perform custom tuple ingestion\nproto._ingest = util.identity;\n\n// Process Tuples\n\nproto._add = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num += 1;\n  if (!this._count) { // skip if count-only\n    if (cell.collect) cell.data.add(x);\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].add(x);\n    }\n  }\n  cell.flag |= Flags.MOD_CELL;\n  if (this._on_add) this._on_add(x, cell);\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num -= 1;\n  if (!this._count) { // skip if count-only\n    if (cell.collect) cell.data.rem(x);\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].rem(x);\n    }\n  }\n  cell.flag |= Flags.MOD_CELL;\n  if (this._on_rem) this._on_rem(x, cell);\n};\n\nproto._mod = function(curr, prev) {\n  var cell0 = this._cell(prev),\n      cell1 = this._cell(curr),\n      aggr = this._aggr, i;\n\n  if (cell0 !== cell1) {\n    cell0.num -= 1;\n    cell1.num += 1;\n    if (cell0.collect) cell0.data.rem(prev);\n    if (cell1.collect) cell1.data.add(curr);\n  } else if (cell0.collect && !util.isObject(curr)) {\n    cell0.data.rem(prev);\n    cell0.data.add(curr);\n  }\n\n  for (i=0; i<aggr.length; ++i) {\n    cell0.aggs[aggr[i].name].rem(prev);\n    cell1.aggs[aggr[i].name].add(curr);\n  }\n  cell0.flag |= Flags.MOD_CELL;\n  cell1.flag |= Flags.MOD_CELL;\n  if (this._on_mod) this._on_mod(curr, prev, cell0, cell1);\n};\n\nproto.result = function() {\n  var result = [],\n      aggr = this._aggr,\n      cell, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    if (cell.num > 0) {\n      // consolidate collector values\n      if (cell.collect) {\n        cell.data.values();\n      }\n      // update tuple properties\n      for (i=0; i<aggr.length; ++i) {\n        cell.aggs[aggr[i].name].set();\n      }\n      // add output tuple\n      result.push(cell.tuple);\n    } else {\n      delete this._cells[k];\n    }\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return result;\n};\n\nproto.changes = function(output) {\n  var changes = output || {add:[], rem:[], mod:[]},\n      aggr = this._aggr,\n      cell, flag, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    flag = cell.flag;\n\n    // consolidate collector values\n    if (cell.collect) {\n      cell.data.values();\n    }\n\n    // update tuple properties\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].set();\n    }\n\n    // organize output tuples\n    if (cell.num <= 0) {\n      changes.rem.push(cell.tuple); // if (flag === Flags.MOD_CELL) { ??\n      delete this._cells[k];\n      if (this._on_drop) this._on_drop(cell);\n    } else {\n      if (this._on_keep) this._on_keep(cell);\n      if (flag & Flags.ADD_CELL) {\n        changes.add.push(cell.tuple);\n      } else if (flag & Flags.MOD_CELL) {\n        changes.mod.push(cell.tuple);\n      }\n    }\n\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return changes;\n};\n\nproto.execute = function(input) {\n  return this.clear().insert(input).result();\n};\n\nproto.insert = function(input) {\n  this._consolidate();\n  for (var i=0; i<input.length; ++i) {\n    this._add(input[i]);\n  }\n  return this;\n};\n\nproto.remove = function(input) {\n  if (!this._stream) {\n    throw 'Aggregator not configured for streaming removes.' +\n      ' Call stream(true) prior to calling summarize.';\n  }\n  for (var i=0; i<input.length; ++i) {\n    this._rem(input[i]);\n  }\n  this._rems = true;\n  return this;\n};\n\n// consolidate removals\nproto._consolidate = function() {\n  if (!this._rems) return;\n  for (var k in this._cells) {\n    if (this._cells[k].collect) {\n      this._cells[k].data.values();\n    }\n  }\n  this._rems = false;\n};\n\nmodule.exports = Aggregator;\n},{\"../util\":32,\"./collector\":11,\"./measures\":13}],11:[function(require,module,exports){\nvar util = require('../util');\nvar stats = require('../stats');\n\nvar REM = '__dl_rem__';\n\nfunction Collector(key) {\n  this._add = [];\n  this._rem = [];\n  this._key = key || null;\n  this._last = null;\n}\n\nvar proto = Collector.prototype;\n\nproto.add = function(v) {\n  this._add.push(v);\n};\n\nproto.rem = function(v) {\n  this._rem.push(v);\n};\n\nproto.values = function() {\n  this._get = null;\n  if (this._rem.length === 0) return this._add;\n\n  var a = this._add,\n      r = this._rem,\n      k = this._key,\n      x = Array(a.length - r.length),\n      i, j, n, m;\n\n  if (!util.isObject(r[0])) {\n    // processing raw values\n    m = stats.count.map(r);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (m[a[i]] > 0) {\n        m[a[i]] -= 1;\n      } else {\n        x[j++] = a[i];\n      }\n    }\n  } else if (k) {\n    // has unique key field, so use that\n    m = util.toMap(r, k);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!m.hasOwnProperty(k(a[i]))) { x[j++] = a[i]; }\n    }\n  } else {\n    // no unique key, mark tuples directly\n    for (i=0, n=r.length; i<n; ++i) {\n      r[i][REM] = 1;\n    }\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!a[i][REM]) { x[j++] = a[i]; }\n    }\n    for (i=0, n=r.length; i<n; ++i) {\n      delete r[i][REM];\n    }\n  }\n\n  this._rem = [];\n  return (this._add = x);\n};\n\n// memoizing statistics methods\n\nproto.extent = function(get) {\n  if (this._get !== get || !this._ext) {\n    var v = this.values(),\n        i = stats.extent.index(v, get);\n    this._ext = [v[i[0]], v[i[1]]];\n    this._get = get;    \n  }\n  return this._ext;\n};\n\nproto.argmin = function(get) {\n  return this.extent(get)[0];\n};\n\nproto.argmax = function(get) {\n  return this.extent(get)[1];\n};\n\nproto.min = function(get) {\n  var m = this.extent(get)[0];\n  return m ? get(m) : +Infinity;\n};\n\nproto.max = function(get) {\n  var m = this.extent(get)[1];\n  return m ? get(m) : -Infinity;\n};\n\nproto.quartile = function(get) {\n  if (this._get !== get || !this._q) {\n    this._q = stats.quartile(this.values(), get);\n    this._get = get;    \n  }\n  return this._q;\n};\n\nproto.q1 = function(get) {\n  return this.quartile(get)[0];\n};\n\nproto.q2 = function(get) {\n  return this.quartile(get)[1];\n};\n\nproto.q3 = function(get) {\n  return this.quartile(get)[2];\n};\n\nmodule.exports = Collector;\n\n},{\"../stats\":29,\"../util\":32}],12:[function(require,module,exports){\nvar util = require('../util');\nvar Aggregator = require('./aggregator');\n\nmodule.exports = function() {\n  // flatten arguments into a single array\n  var args = [].reduce.call(arguments, function(a, x) {\n    return a.concat(util.array(x));\n  }, []);\n  // create and return an aggregator\n  return new Aggregator()\n    .groupby(args)\n    .summarize({'*':'values'});\n};\n\n},{\"../util\":32,\"./aggregator\":10}],13:[function(require,module,exports){\nvar util = require('../util');\n\nvar types = {\n  'values': measure({\n    name: 'values',\n    init: 'cell.collect = true;',\n    set:  'cell.data.values()', idx: -1\n  }),\n  'count': measure({\n    name: 'count',\n    set:  'cell.num'\n  }),\n  'missing': measure({\n    name: 'missing',\n    set:  'this.missing'\n  }),\n  'valid': measure({\n    name: 'valid',\n    set:  'this.valid'\n  }),\n  'sum': measure({\n    name: 'sum',\n    init: 'this.sum = 0;',\n    add:  'this.sum += v;',\n    rem:  'this.sum -= v;',\n    set:  'this.sum'\n  }),\n  'mean': measure({\n    name: 'mean',\n    init: 'this.mean = 0;',\n    add:  'var d = v - this.mean; this.mean += d / this.valid;',\n    rem:  'var d = v - this.mean; this.mean -= this.valid ? d / this.valid : this.mean;',\n    set:  'this.mean'\n  }),\n  'average': measure({\n    name: 'average',\n    set:  'this.mean',\n    req:  ['mean'], idx: 1\n  }),\n  'variance': measure({\n    name: 'variance',\n    init: 'this.dev = 0;',\n    add:  'this.dev += d * (v - this.mean);',\n    rem:  'this.dev -= d * (v - this.mean);',\n    set:  'this.valid > 1 ? this.dev / (this.valid-1) : 0',\n    req:  ['mean'], idx: 1\n  }),\n  'variancep': measure({\n    name: 'variancep',\n    set:  'this.valid > 1 ? this.dev / this.valid : 0',\n    req:  ['variance'], idx: 2\n  }),\n  'stdev': measure({\n    name: 'stdev',\n    set:  'this.valid > 1 ? Math.sqrt(this.dev / (this.valid-1)) : 0',\n    req:  ['variance'], idx: 2\n  }),\n  'stdevp': measure({\n    name: 'stdevp',\n    set:  'this.valid > 1 ? Math.sqrt(this.dev / this.valid) : 0',\n    req:  ['variance'], idx: 2\n  }),\n  'median': measure({\n    name: 'median',\n    set:  'cell.data.q2(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q1': measure({\n    name: 'q1',\n    set:  'cell.data.q1(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q3': measure({\n    name: 'q3',\n    set:  'cell.data.q3(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'distinct': measure({\n    name: 'distinct',\n    set:  'this.distinct(cell.data.values(), this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'argmin': measure({\n    name: 'argmin',\n    add:  'if (v < this.min) this.argmin = t;',\n    rem:  'if (v <= this.min) this.argmin = null;',\n    set:  'this.argmin = this.argmin || cell.data.argmin(this.get)',\n    req:  ['min'], str: ['values'], idx: 3\n  }),\n  'argmax': measure({\n    name: 'argmax',\n    add:  'if (v > this.max) this.argmax = t;',\n    rem:  'if (v >= this.max) this.argmax = null;',\n    set:  'this.argmax = this.argmax || cell.data.argmax(this.get)',\n    req:  ['max'], str: ['values'], idx: 3\n  }),\n  'min': measure({\n    name: 'min',\n    init: 'this.min = +Infinity;',\n    add:  'if (v < this.min) this.min = v;',\n    rem:  'if (v <= this.min) this.min = NaN;',\n    set:  'this.min = (isNaN(this.min) ? cell.data.min(this.get) : this.min)',\n    str:  ['values'], idx: 4\n  }),\n  'max': measure({\n    name: 'max',\n    init: 'this.max = -Infinity;',\n    add:  'if (v > this.max) this.max = v;',\n    rem:  'if (v >= this.max) this.max = NaN;',\n    set:  'this.max = (isNaN(this.max) ? cell.data.max(this.get) : this.max)',\n    str:  ['values'], idx: 4\n  }),\n  'modeskew': measure({\n    name: 'modeskew',\n    set:  'this.dev===0 ? 0 : (this.mean - cell.data.q2(this.get)) / Math.sqrt(this.dev/(this.valid-1))',\n    req:  ['mean', 'stdev', 'median'], idx: 5\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = util.extend({init:'', add:'', rem:'', idx:0}, base);\n    m.out = out || base.name;\n    return m;\n  };\n}\n\nfunction resolve(agg, stream) {\n  function collect(m, a) {\n    function helper(r) { if (!m[r]) collect(m, m[r] = types[r]()); }\n    if (a.req) a.req.forEach(helper);\n    if (stream && a.str) a.str.forEach(helper);\n    return m;\n  }\n  var map = agg.reduce(\n    collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {})\n  );\n  return util.vals(map).sort(function(a, b) { return a.idx - b.idx; });\n}\n\nfunction create(agg, stream, accessor, mutator) {\n  var all = resolve(agg, stream),\n      ctr = 'this.cell = cell; this.tuple = t; this.valid = 0; this.missing = 0;',\n      add = 'if (v==null) this.missing++; if (!this.isValid(v)) return; ++this.valid;',\n      rem = 'if (v==null) this.missing--; if (!this.isValid(v)) return; --this.valid;',\n      set = 'var t = this.tuple; var cell = this.cell;';\n\n  all.forEach(function(a) {\n    if (a.idx < 0) {\n      ctr = a.init + ctr;\n      add = a.add + add;\n      rem = a.rem + rem;\n    } else {\n      ctr += a.init;\n      add += a.add;\n      rem += a.rem;\n    }\n  });\n  agg.slice()\n    .sort(function(a, b) { return a.idx - b.idx; })\n    .forEach(function(a) {\n      set += 'this.assign(t,\\''+a.out+'\\','+a.set+');';\n    });\n  set += 'return t;';\n\n  /* jshint evil: true */\n  ctr = Function('cell', 't', ctr);\n  ctr.prototype.assign = mutator;\n  ctr.prototype.add = Function('t', 'var v = this.get(t);' + add);\n  ctr.prototype.rem = Function('t', 'var v = this.get(t);' + rem);\n  ctr.prototype.set = Function(set);\n  ctr.prototype.get = accessor;\n  ctr.prototype.distinct = require('../stats').count.distinct;\n  ctr.prototype.isValid = util.isValid;\n  ctr.fields = agg.map(util.$('out'));\n  return ctr;\n}\n\ntypes.create = create;\nmodule.exports = types;\n},{\"../stats\":29,\"../util\":32}],14:[function(require,module,exports){\nvar util = require('../util'),\n    time = require('../time'),\n    EPSILON = 1e-15;\n\nfunction bins(opt) {\n  if (!opt) { throw Error(\"Missing binning options.\"); }\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],      \n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n    \n    // increase step size if too many bins\n    do { step *= base; } while (Math.ceil(span/step) > maxb);\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  if (!opt) { throw Error(\"Missing date binning options.\"); }\n\n  // find time step, then bin\n  var units = opt.utc ? time.utc : time,\n      dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n\n},{\"../time\":31,\"../util\":32}],15:[function(require,module,exports){\nvar bins = require('./bins'),\n    gen  = require('../generate'),\n    type = require('../import/type'),\n    util = require('../util'),\n    stats = require('../stats');\n\nvar qtype = {\n  'integer': 1,\n  'number': 1,\n  'date': 1\n};\n\nfunction $bin(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return !b ? (opt.accessor || util.identity) :\n    util.$func('bin', b.unit.unit ?\n      function(x) { return b.value(b.unit.unit(x)); } :\n      function(x) { return b.value(x); }\n    )(opt.accessor);\n}\n\nfunction histogram(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return b ?\n    numerical(values, opt.accessor, b) :\n    categorical(values, opt.accessor, opt && opt.sort);\n}\n\nfunction spec(opt) {\n  var t = opt.type, b = null;\n  if (t == null || qtype[t]) {\n    if (t === 'integer' && opt.minstep == null) opt.minstep = 1;\n    b = (t === 'date') ? bins.date(opt) : bins(opt);\n  }\n  return b;\n}\n\nfunction options() {\n  var a = arguments,\n      i = 0,\n      values = util.isArray(a[i]) ? a[i++] : null,\n      f = util.isFunction(a[i]) || util.isString(a[i]) ? util.$(a[i++]) : null,\n      opt = util.extend({}, a[i]);\n  \n  if (values) {\n    opt.type = opt.type || type(values, f);\n    if (qtype[opt.type]) {\n      var ext = stats.extent(values, f);\n      opt = util.extend({min: ext[0], max: ext[1]}, opt);\n    }\n  }\n  if (f) { opt.accessor = f; }\n  return opt;\n}\n\nfunction numerical(values, f, b) {\n  var h = gen.range(b.start, b.stop + b.step/2, b.step)\n    .map(function(v) { return {value: b.value(v), count: 0}; });\n\n  for (var i=0, v, j; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      j = b.index(v);\n      if (j < 0 || j >= h.length || !isFinite(j)) continue;\n      h[j].count += 1;\n    }\n  }\n  h.bins = b;\n  return h;\n}\n\nfunction categorical(values, f, sort) {\n  var u = stats.unique(values, f),\n      c = stats.count.map(values, f);\n  return u.map(function(k) { return {value: k, count: c[k]}; })\n    .sort(util.comparator(sort ? '-count' : '+value'));\n}\n\nmodule.exports = {\n  $bin: $bin,\n  histogram: histogram\n};\n},{\"../generate\":17,\"../import/type\":26,\"../stats\":29,\"../util\":32,\"./bins\":14}],16:[function(require,module,exports){\nvar d3_time = require('d3-time'),\n    d3_timeF = require('d3-time-format'),\n    d3_numberF = require('d3-format'),\n    numberF = d3_numberF, // defaults to EN-US\n    timeF = d3_timeF;     // defaults to EN-US\n\nfunction numberLocale(l) {\n  var f = d3_numberF.localeFormat(l);\n  if (f == null) throw Error('Unrecognized locale: ' + l);\n  numberF = f;\n}\n\nfunction timeLocale(l) {\n  var f = d3_timeF.localeFormat(l);\n  if (f == null) throw Error('Unrecognized locale: ' + l);\n  timeF = f;\n}\n\nmodule.exports = {\n  // Update number formatter to use provided locale configuration.\n  // For more see https://github.com/d3/d3-format\n  numberLocale: numberLocale,\n  number:       function(f) { return numberF.format(f); },\n  numberPrefix: function(f, v) { return numberF.formatPrefix(f, v); },\n\n  // Update time formatter to use provided locale configuration.\n  // For more see https://github.com/d3/d3-time-format\n  timeLocale:   timeLocale,\n  time:         function(f) { return timeF.format(f); },  \n  utc:          function(f) { return timeF.utcFormat(f); },\n\n  // Set number and time locale simultaneously.\n  locale:       function(l) { numberLocale(l); timeLocale(l); },\n\n  // automatic formatting functions\n  auto: {\n    number:   numberAutoFormat,\n    time:     function() { return timeAutoFormat(); },\n    utc:      function() { return utcAutoFormat(); }\n  }\n};\n\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction intervals(domain, count) {\n  if (!domain.length) domain = [0];\n  if (count == null) count = 10;\n\n  var start = domain[0],\n      stop = domain[domain.length - 1];\n\n  if (stop < start) { error = stop; stop = start; start = error; }\n\n  var span = (stop - start) || (count = 1, start || stop || 1),\n      step = Math.pow(10, Math.floor(Math.log(span / count) / Math.LN10)),\n      error = span / count / step;\n\n  // Filter ticks to get closer to the desired count.\n  if (error >= e10) step *= 10;\n  else if (error >= e5) step *= 5;\n  else if (error >= e2) step *= 2;\n\n  // Round start and stop values to step interval.\n  return [\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  ];\n}\n\nfunction numberAutoFormat(domain, count, f) {\n  var range = intervals(domain, count);\n  if (f == null) {\n    f = ',.' + d3_numberF.precisionFixed(range[2]) + 'f';\n  } else {\n    switch (f = d3_numberF.formatSpecifier(f), f.type) {\n      case 's': {\n        var value = Math.max(Math.abs(range[0]), Math.abs(range[1]));\n        if (f.precision == null) f.precision = d3_numberF.precisionPrefix(range[2], value);\n        return numberF.formatPrefix(f, value);\n      }\n      case '':\n      case 'e':\n      case 'g':\n      case 'p':\n      case 'r': {\n        if (f.precision == null) f.precision = d3_numberF.precisionRound(range[2], Math.max(Math.abs(range[0]), Math.abs(range[1]))) - (f.type === 'e');\n        break;\n      }\n      case 'f':\n      case '%': {\n        if (f.precision == null) f.precision = d3_numberF.precisionFixed(range[2]) - (f.type === '%') * 2;\n        break;\n      }\n    }\n  }\n  return numberF.format(f);\n}\n\nfunction timeAutoFormat() {\n  var f = timeF.format,\n      formatMillisecond = f('.%L'),\n      formatSecond = f(':%S'),\n      formatMinute = f('%I:%M'),\n      formatHour = f('%I %p'),\n      formatDay = f('%a %d'),\n      formatWeek = f('%b %d'),\n      formatMonth = f('%B'),\n      formatYear = f('%Y');\n\n  return function(date) {\n    var d = +date;\n    return (d3_time.second(date) < d ? formatMillisecond\n        : d3_time.minute(date) < d ? formatSecond\n        : d3_time.hour(date) < d ? formatMinute\n        : d3_time.day(date) < d ? formatHour\n        : d3_time.month(date) < d ?\n          (d3_time.week(date) < d ? formatDay : formatWeek)\n        : d3_time.year(date) < d ? formatMonth\n        : formatYear)(date);\n  };\n}\n\nfunction utcAutoFormat() {\n  var f = timeF.utcFormat,\n      formatMillisecond = f('.%L'),\n      formatSecond = f(':%S'),\n      formatMinute = f('%I:%M'),\n      formatHour = f('%I %p'),\n      formatDay = f('%a %d'),\n      formatWeek = f('%b %d'),\n      formatMonth = f('%B'),\n      formatYear = f('%Y');\n\n  return function(date) {\n    var d = +date;\n    return (d3_time.utcSecond(date) < d ? formatMillisecond\n        : d3_time.utcMinute(date) < d ? formatSecond\n        : d3_time.utcHour(date) < d ? formatMinute\n        : d3_time.utcDay(date) < d ? formatHour\n        : d3_time.utcMonth(date) < d ?\n          (d3_time.utcWeek(date) < d ? formatDay : formatWeek)\n        : d3_time.utcYear(date) < d ? formatMonth\n        : formatYear)(date);\n  };\n}\n\n},{\"d3-format\":5,\"d3-time\":9,\"d3-time-format\":8}],17:[function(require,module,exports){\nvar gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min === undefined ? 1 : min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n},{}],18:[function(require,module,exports){\nvar util = require('../../util');\nvar d3_dsv = require('d3-dsv');\n\nfunction dsv(data, format) {\n  if (data) {\n    var h = format.header;\n    data = (h ? h.join(format.delimiter) + '\\n' : '') + data;\n  }\n  return d3_dsv.dsv(format.delimiter).parse(data);\n}\n\ndsv.delimiter = function(delim) {\n  var fmt = {delimiter: delim};\n  return function(data, format) {\n    return dsv(data, format ? util.extend(format, fmt) : fmt);\n  };\n};\n\nmodule.exports = dsv;\n},{\"../../util\":32,\"d3-dsv\":7}],19:[function(require,module,exports){\nvar dsv = require('./dsv');\n\nmodule.exports = {\n  json: require('./json'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson'),\n  dsv: dsv,\n  csv: dsv.delimiter(','),\n  tsv: dsv.delimiter('\\t')\n};\n},{\"./dsv\":18,\"./json\":20,\"./topojson\":21,\"./treejson\":22}],20:[function(require,module,exports){\nvar util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) && !util.isBuffer(data) ?\n    data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n\n},{\"../../util\":32}],21:[function(require,module,exports){\n(function (global){\nvar json = require('./json');\n\nvar reader = function(data, format) {\n  var topojson = reader.topojson;\n  if (topojson == null) { throw Error('TopoJSON library not loaded.'); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if ((obj = t.objects[format.feature])) {\n      return topojson.feature(t, obj).features;\n    } else {\n      throw Error('Invalid TopoJSON object: ' + format.feature);\n    }\n  } else if (format && format.mesh) {\n    if ((obj = t.objects[format.mesh])) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error('Invalid TopoJSON object: ' + format.mesh);\n    }\n  } else {\n    throw Error('Missing TopoJSON feature or mesh parameter.');\n  }\n};\n\nreader.topojson = (typeof window !== \"undefined\" ? window['topojson'] : typeof global !== \"undefined\" ? global['topojson'] : null);\nmodule.exports = reader;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./json\":20}],22:[function(require,module,exports){\nvar json = require('./json');\n\nmodule.exports = function(data, format) {\n  data = json(data, format);\n  return toTable(data, (format && format.children));\n};\n\nfunction toTable(root, childrenField) {\n  childrenField = childrenField || 'children';\n  var table = [];\n  \n  function visit(node) {\n    table.push(node);\n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], node);\n      }\n    }\n  }\n  \n  visit(root, null);\n  return (table.root = root, table);\n}\n},{\"./json\":20}],23:[function(require,module,exports){\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (!load.useXHR && startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (load.useXHR) {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host === '') {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    } else {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function(d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  var error = callback || function(e) { throw e; }, url;\n\n  try {\n    url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + opt.url);\n  } else if (load.useXHR) {\n    // on client, use xhr\n    return xhr(url, callback);\n  } else if (startsWith(url, fileProtocol)) {\n    // on server, if url starts with 'file://', strip it and load from file\n    return file(url.slice(fileProtocol.length), callback);\n  } else if (url.indexOf('://') < 0) { // TODO better protocol check?\n    // on server, if no protocol assume file\n    return file(url, callback);\n  } else {\n    // for regular URLs on server\n    return http(url, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== 'text' ?\n    request.response : // null on error\n    request.responseText; // '' on error\n}\n\nfunction xhr(url, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest();\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (this.XDomainRequest &&\n      !('withCredentials' in request) &&\n      /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    if ('onload' in request) {\n      request.onload = request.onerror = respond;\n    } else {\n      request.onreadystatechange = function() {\n        if (request.readyState > 3) respond();\n      };\n    }\n  }\n  \n  request.open('GET', url, async);\n  request.send();\n  \n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(filename, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(filename, 'utf8');\n  }\n  fs.readFile(filename, callback);\n}\n\nfunction http(url, callback) {\n  if (!callback) {\n    return require('sync-request')('GET', url).getBody();\n  }\n  \n  var options = {url: url, encoding: null, gzip: true};\n  require('request')(options, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      error = error ||\n        'Load failed with response code ' + response.statusCode + '.';\n      callback(error, null);\n    }\n  });\n}\n\nfunction startsWith(string, searchString) {\n  return string == null ? false : string.lastIndexOf(searchString, 0) === 0;\n}\n\nload.sanitizeUrl = sanitizeUrl;\n\nload.useXHR = (typeof XMLHttpRequest !== 'undefined');\n\nmodule.exports = load;\n\n},{\"fs\":1,\"request\":1,\"sync-request\":1,\"url\":1}],24:[function(require,module,exports){\nvar util = require('../util');\nvar type = require('./type');\nvar formats = require('./formats');\n\nfunction read(data, format) {\n  var type = (format && format.type) || 'json';\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  types = (types==='auto') ? type.inferAll(data) : util.duplicate(types);\n  cols = util.keys(types);\n  parsers = cols.map(function(c) { return type.parsers[types[c]]; });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n  type.annotation(data, types);\n}\n\nread.formats = formats;\nmodule.exports = read;\n\n},{\"../util\":32,\"./formats\":19,\"./type\":26}],25:[function(require,module,exports){\nvar util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) { opt = {url: opt}; }\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) { callback(error, null); return; }\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n          callback(null, data);\n        } catch (e) {\n          callback(e, null);\n        }\n      } : undefined);\n      \n      // data loaded, now parse it (sync)\n      if (!callback) return read(data, format);\n    };\n    return out;\n  }, {});\n\n},{\"../util\":32,\"./load\":23,\"./read\":24}],26:[function(require,module,exports){\nvar util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x==='' ? null : x; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction type(values, f) {\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, f), types);\n  }, {});\n}\n\nfunction infer(values, f) {\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields) {\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    types[f] = infer(data, f);\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;\n},{\"../util\":32}],27:[function(require,module,exports){\nvar util = require('./util');\n\nvar dl = {\n  version:    '1.4.6',\n  load:       require('./import/load'),\n  read:       require('./import/read'),\n  type:       require('./import/type'),\n  Aggregator: require('./aggregate/aggregator'),\n  groupby:    require('./aggregate/groupby'),\n  bins:       require('./bins/bins'),\n  $bin:       require('./bins/histogram').$bin,\n  histogram:  require('./bins/histogram').histogram,\n  format:     require('./format'),\n  print:      require('./print'),\n  template:   require('./template'),\n  time:       require('./time')\n};\n\nutil.extend(dl, util);\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\nutil.extend(dl, require('./import/readers'));\n\nmodule.exports = dl;\n},{\"./aggregate/aggregator\":10,\"./aggregate/groupby\":12,\"./bins/bins\":14,\"./bins/histogram\":15,\"./format\":16,\"./generate\":17,\"./import/load\":23,\"./import/read\":24,\"./import/readers\":25,\"./import/type\":26,\"./print\":28,\"./stats\":29,\"./template\":30,\"./time\":31,\"./util\":32}],28:[function(require,module,exports){\nvar util = require('./util');\nvar type = require('./import/type');\nvar stats = require('./stats');\nvar template = require('./template');\n\nvar FMT = {\n  'date':    '|time:\"%m/%d/%Y %H:%M:%S\"',\n  'number':  '|number:\".4f\"',\n  'integer': '|number:\"d\"'\n};\n\nvar POS = {\n  'number':  'left',\n  'integer': 'left'\n};\n\nmodule.exports.table = function(data, opt) {\n  opt = util.extend({separator:' ', minwidth: 8, maxwidth: 15}, opt);\n  var fields = opt.fields || util.keys(data[0]),\n      types = type.all(data);\n\n  if (opt.start || opt.limit) {\n    var a = opt.start || 0,\n        b = opt.limit ? a + opt.limit : data.length;\n    data = data.slice(a, b);\n  }\n\n  // determine char width of fields\n  var lens = fields.map(function(name) {\n    var format = FMT[types[name]] || '',\n        t = template('{{' + name + format + '}}'),\n        l = stats.max(data, function(x) { return t(x).length; });\n    l = Math.max(Math.min(name.length, opt.minwidth), l);\n    return opt.maxwidth > 0 ? Math.min(l, opt.maxwidth) : l;\n  });\n\n  // print header row\n  var head = fields.map(function(name, i) {\n    return util.truncate(util.pad(name, lens[i], 'center'), lens[i]);\n  }).join(opt.separator);\n\n  // build template function for each row\n  var tmpl = template(fields.map(function(name, i) {\n    return '{{' +\n      name +\n      (FMT[types[name]] || '') +\n      ('|pad:' + lens[i] + ',' + (POS[types[name]] || 'right')) +\n      ('|truncate:' + lens[i]) +\n    '}}';\n  }).join(opt.separator));\n\n  // print table\n  return head + \"\\n\" + data.map(tmpl).join('\\n');\n};\n\nmodule.exports.summary = function(s) {\n  s = s ? s.__summary__ ? s : stats.summary(s) : this;\n  var str = [], i, n;\n  for (i=0, n=s.length; i<n; ++i) {\n    str.push('-- ' + s[i].field + ' --');\n    if (s[i].type === 'string' || s[i].distinct < 10) {\n      str.push(printCategoricalProfile(s[i]));\n    } else {\n      str.push(printQuantitativeProfile(s[i]));\n    }\n    str.push('');\n  }\n  return str.join('\\n');\n};\n\nfunction printQuantitativeProfile(p) {\n  return [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'min:      ' + p.min,\n    'max:      ' + p.max,\n    'median:   ' + p.median,\n    'mean:     ' + p.mean,\n    'stdev:    ' + p.stdev,\n    'modeskew: ' + p.modeskew\n  ].join('\\n');\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'top values: '\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return ' \\'' + v + '\\' (' + u[v] + ')'; });\n  return list.concat(top).join('\\n');\n}\n},{\"./import/type\":26,\"./stats\":29,\"./template\":30,\"./util\":32}],29:[function(require,module,exports){\nvar util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\nvar stats = {};\n\n// Collect unique values.\n// Output: an array of unique values, in first-observed order\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    results.push(v);\n  }\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Construct a map from distinct values to occurrence counts.\nstats.count.map = function(values, f) {\n  f = util.$(f);\n  var map = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    map[v] = (v in map) ? map[v] + 1 : 1;\n  }\n  return map;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length < 2) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var x = -1, y = -1, a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (v === v) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (v === v) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, util.$(a)) : stats.rank(values),\n      rb = b ? stats.rank(values, util.$(b)) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance] \n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\nmodule.exports = stats;\n},{\"./generate\":17,\"./import/type\":26,\"./util\":32}],30:[function(require,module,exports){\nvar util = require('./util'),\n    format = require('./format');\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   util.truncate,\n  pad:        util.pad\n};\n\nfunction template(text) {\n  var src = source(text, 'd');\n  src = 'var __t; return ' + src + ';';\n\n  /* jshint evil: true */\n  return (new Function('d', src)).bind(context);\n}\n\ntemplate.source = source;\ntemplate.context = context;\nmodule.exports = template;\n\n// Clear cache of format objects.\n// This can *break* prior template functions, so invoke with care!\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\n// Generate property access code for use within template source.\n// object: the name of the object (variable) containing template data\n// property: the property access string, verbatim from template tag\ntemplate.property = function(object, property) {\n  var src = util.field(property).map(util.str).join('][');\n  return object + '[' + src + ']';\n};\n\n// Generate source code for a template function.\n// text: the template text\n// variable: the name of the data object variable ('obj' by default)\n// properties: optional hash for collecting all accessed properties\nfunction source(text, variable, properties) {\n  variable = variable || 'obj';\n  var index = 0;\n  var src = '\\'';\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += '\\'\\n+((__t=(' +\n        template_var(interpolate, variable, properties) +\n        '))==null?\\'\\':__t)+\\n\\'';\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + '\\'';\n}\n\nfunction template_var(text, variable, properties) {\n  var filters = text.match(filter_re);\n  var prop = filters.shift().trim();\n  var stringCast = true;\n\n  function strcall(fn) {\n    fn = fn || '';\n    if (stringCast) {\n      stringCast = false;\n      src = 'String(' + src + ')' + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n\n  function date() {\n    return '(typeof ' + src + '===\"number\"?new Date('+src+'):'+src+')';\n  }\n\n  function number_format(fmt, key) {\n    a = template_format(args[0], key, fmt);\n    stringCast = false;\n    src = 'this.formats['+a+']('+src+')';\n  }\n  \n  function time_format(fmt, key) {\n    a = template_format(args[0], key, fmt);\n    stringCast = false;\n    src = 'this.formats['+a+']('+date()+')';\n  }\n\n  if (properties) properties[prop] = 1;\n  var src = template.property(variable, prop);\n\n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1)\n        .match(args_re)\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a +\n          (args.length > 1 ? ',' + util.number(args[1]) : '') +\n          ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'pad':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.pad(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'number':\n        number_format(format.number, 'number');\n        break;\n      case 'time':\n        time_format(format.time, 'time');\n        break;\n      case 'time-utc':\n        time_format(format.utc, 'time-utc');\n        break;\n      default:\n        throw Error('Unrecognized template filter: ' + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g,\n    filter_re = /(?:\"[^\"]*\"|\\'[^\\']*\\'|[^\\|\"]+|[^\\|\\']+)+/g,\n    args_re = /(?:\"[^\"]*\"|\\'[^\\']*\\'|[^,\"]+|[^,\\']+)+/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  '\\'':     '\\'',\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n}\n\nfunction template_format(pattern, key, fmt) {\n  if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n      (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n    pattern = pattern.slice(1, -1);\n  } else {\n    throw Error('Format pattern must be quoted: ' + pattern);\n  }\n  key = key + ':' + pattern;\n  if (!context.format_map[key]) {\n    var f = fmt(pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[key] = i;\n  }\n  return context.format_map[key];\n}\n\n},{\"./format\":16,\"./util\":32}],31:[function(require,module,exports){\nvar d3_time = require('d3-time');\n\nvar tempDate = new Date(),\n    baseDate = new Date(0, 0, 1).setFullYear(0), // Jan 1, 0 AD\n    utcBaseDate = new Date(Date.UTC(0, 0, 1)).setUTCFullYear(0);\n\nfunction date(d) {\n  return (tempDate.setTime(+d), tempDate);\n}\n\n// create a time unit entry\nfunction entry(type, date, unit, step, min, max) {\n  var e = {\n    type: type,\n    date: date,\n    unit: unit\n  };\n  if (step) {\n    e.step = step;\n  } else {\n    e.minstep = 1;\n  }\n  if (min != null) e.min = min;\n  if (max != null) e.max = max;\n  return e;\n}\n\nfunction create(type, unit, base, step, min, max) {\n  return entry(type,\n    function(d) { return unit.offset(base, d); },\n    function(d) { return unit.count(base, d); },\n    step, min, max);\n}\n\nvar locale = [\n  create('second', d3_time.second, baseDate),\n  create('minute', d3_time.minute, baseDate),\n  create('hour',   d3_time.hour,   baseDate),\n  create('day',    d3_time.day,    baseDate, [1, 7]),\n  create('month',  d3_time.month,  baseDate, [1, 3, 6]),\n  create('year',   d3_time.year,   baseDate),\n\n  // periodic units\n  entry('seconds',\n    function(d) { return new Date(1970, 0, 1, 0, 0, d); },\n    function(d) { return date(d).getSeconds(); },\n    null, 0, 59\n  ),\n  entry('minutes',\n    function(d) { return new Date(1970, 0, 1, 0, d); },\n    function(d) { return date(d).getMinutes(); },\n    null, 0, 59\n  ),\n  entry('hours',\n    function(d) { return new Date(1970, 0, 1, d); },\n    function(d) { return date(d).getHours(); },\n    null, 0, 23\n  ),\n  entry('weekdays',\n    function(d) { return new Date(1970, 0, 4+d); },\n    function(d) { return date(d).getDay(); },\n    [1], 0, 6\n  ),\n  entry('dates',\n    function(d) { return new Date(1970, 0, d); },\n    function(d) { return date(d).getDate(); },\n    [1], 1, 31\n  ),\n  entry('months',\n    function(d) { return new Date(1970, d % 12, 1); },\n    function(d) { return date(d).getMonth(); },\n    [1], 0, 11\n  )\n];\n\nvar utc = [\n  create('second', d3_time.utcSecond, utcBaseDate),\n  create('minute', d3_time.utcMinute, utcBaseDate),\n  create('hour',   d3_time.utcHour,   utcBaseDate),\n  create('day',    d3_time.utcDay,    utcBaseDate, [1, 7]),\n  create('month',  d3_time.utcMonth,  utcBaseDate, [1, 3, 6]),\n  create('year',   d3_time.utcYear,   utcBaseDate),\n\n  // periodic units\n  entry('seconds',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, 0, 0, d)); },\n    function(d) { return date(d).getUTCSeconds(); },\n    null, 0, 59\n  ),\n  entry('minutes',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, 0, d)); },\n    function(d) { return date(d).getUTCMinutes(); },\n    null, 0, 59\n  ),\n  entry('hours',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, d)); },\n    function(d) { return date(d).getUTCHours(); },\n    null, 0, 23\n  ),\n  entry('weekdays',\n    function(d) { return new Date(Date.UTC(1970, 0, 4+d)); },\n    function(d) { return date(d).getUTCDay(); },\n    [1], 0, 6\n  ),\n  entry('dates',\n    function(d) { return new Date(Date.UTC(1970, 0, d)); },\n    function(d) { return date(d).getUTCDate(); },\n    [1], 1, 31\n  ),\n  entry('months',\n    function(d) { return new Date(Date.UTC(1970, d % 12, 1)); },\n    function(d) { return date(d).getUTCMonth(); },\n    [1], 0, 11\n  )\n];\n\nvar STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction find(units, span, minb, maxb) {\n  var step = STEPS[0], i, n, bins;\n\n  for (i=1, n=STEPS.length; i<n; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return units[STEPS[i-1][1]];\n      }\n      if (bins >= minb) {\n        return units[step[1]];\n      }\n    }\n  }\n  return units[STEPS[n-1][1]];\n}\n\nfunction toUnitMap(units) {\n  var map = {}, i, n;\n  for (i=0, n=units.length; i<n; ++i) {\n    map[units[i].type] = units[i];\n  }\n  map.find = function(span, minb, maxb) {\n    return find(units, span, minb, maxb);\n  };\n  return map;\n}\n\nmodule.exports = toUnitMap(locale);\nmodule.exports.utc = toUnitMap(utc);\n\n},{\"d3-time\":9}],32:[function(require,module,exports){\nvar buffer = require('buffer'),\n    time = require('./time'),\n    utc = time.utc;\n\nvar u = module.exports = {};\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && obj === obj;\n};\n\nu.isBuffer = (buffer.Buffer && buffer.Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\nu.date = function(s) {\n  return s == null || s === '' ? null : Date.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? ('\\''+util_escape_str(x)+'\\'') : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, '$1\\\\\\'');\n}\n\n// data access functions\n\nvar field_re = /\\[(.*?)\\]|[^.\\[]+/g;\n\nu.field = function(f) {\n  return String(f).match(field_re).map(function(d) {\n    return d[0] !== '[' ? d :\n      d[1] !== \"'\" && d[1] !== '\"' ? d.slice(1, -1) :\n      d.slice(2, -2).replace(/\\\\([\"'])/g, '$1');\n  });\n};\n\nu.accessor = function(f) {\n  var s;\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, (s = u.field(f)).length > 1 ?\n      function(x) { return s.reduce(function(x,f) { return x[f]; }, x); } :\n      function(x) { return x[f]; }\n    );\n};\n\n// short-cut for accessor\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\nu.$year   = u.$func('year', time.year.unit);\nu.$month  = u.$func('month', time.months.unit);\nu.$date   = u.$func('date', time.dates.unit);\nu.$day    = u.$func('day', time.weekdays.unit);\nu.$hour   = u.$func('hour', time.hours.unit);\nu.$minute = u.$func('minute', time.minutes.unit);\nu.$second = u.$func('second', time.seconds.unit);\n\nu.$utcYear   = u.$func('utcYear', utc.year.unit);\nu.$utcMonth  = u.$func('utcMonth', utc.months.unit);\nu.$utcDate   = u.$func('utcDate', utc.dates.unit);\nu.$utcDay    = u.$func('utcDay', utc.weekdays.unit);\nu.$utcHour   = u.$func('utcHour', utc.hours.unit);\nu.$utcMinute = u.$func('utcMinute', utc.minutes.unit);\nu.$utcSecond = u.$func('utcSecond', utc.seconds.unit);\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n\n// string functions\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n\n},{\"./time\":31,\"buffer\":1}],33:[function(require,module,exports){\nvar ts = Date.now();\n\nfunction write(msg) {\n  msg = '[Vega Log] ' + msg;\n  console.log(msg);\n}\n\nfunction error(msg) {\n  msg = '[Vega Err] ' + msg;\n  console.error(msg);\n}\n\nfunction debug(input, args) {\n  if (!debug.enable) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  var state = {\n    prevTime:  Date.now() - ts,\n    stamp: input.stamp\n  };\n\n  if (input.add) {\n    state.add = input.add.length;\n    state.mod = input.mod.length;\n    state.rem = input.rem.length;\n    state.reflow = !!input.reflow;\n  }\n\n  log.apply(console, (args.push(JSON.stringify(state)), args));\n  ts = Date.now();\n}\n\nmodule.exports = {\n  log:   write,\n  error: error,\n  debug: (debug.enable = false, debug)\n};\n\n},{}],34:[function(require,module,exports){\nvar DEPS = require('./Dependencies').ALL;\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  b.dirty = a ? a.dirty : [];\n  b.request = a ? a.request : null;\n  for (var d, i=0, n=DEPS.length; i<n; ++i) {\n    b[d=DEPS[i]] = a ? a[d] : {};\n  }\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy\n};\n},{\"./Dependencies\":37}],35:[function(require,module,exports){\nvar log = require('vega-logging'),\n    Tuple = require('./Tuple'),\n    Base = require('./Node').prototype;\n\nfunction Collector(graph) {\n  Base.init.call(this, graph);\n  this._data = [];\n  this.router(true).collector(true);\n}\n\nvar prototype = (Collector.prototype = Object.create(Base));\nprototype.constructor = Collector;\n\nprototype.data = function() {\n  return this._data;\n};\n\nprototype.evaluate = function(input) {\n  log.debug(input, [\"collecting\"]);\n\n  if (input.rem.length) {\n    this._data = Tuple.idFilter(this._data, input.rem);\n  }\n\n  if (input.add.length) {\n    this._data = this._data.length ? this._data.concat(input.add) : input.add;\n  }\n\n  if (input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  if (input.reflow) {\n    input.mod = input.mod.concat(\n      Tuple.idFilter(this._data, input.add, input.mod, input.rem));\n    input.reflow = false;\n  }\n\n  return input;\n};\n\nmodule.exports = Collector;\n},{\"./Node\":40,\"./Tuple\":42,\"vega-logging\":33}],36:[function(require,module,exports){\nvar log = require('vega-logging'),\n    ChangeSet = require('./ChangeSet'), \n    Collector = require('./Collector'),\n    Tuple = require('./Tuple'),\n    Node = require('./Node'); // jshint ignore:line\n\nfunction DataSource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet  = facet;\n  this._input  = ChangeSet.create();\n  this._output = null; // Output changeset\n\n  this._inputNode  = null;\n  this._outputNode = null;\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline.\n  this._mutates = false;  // Does any pipeline operator mutate tuples?\n}\n\nvar prototype = DataSource.prototype;\n\nprototype.name = function(name) {\n  if (!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nprototype.source = function(src) {\n  if (!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nprototype.insert = function(tuples) {\n  this._input.add = this._input.add.concat(tuples.map(Tuple.ingest));\n  return this;\n};\n\nprototype.remove = function(where) {\n  var remove = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(remove);\n  return this;\n};\n\nprototype.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = Tuple.idMap(mod);\n\n  this._input.fields[field] = 1;\n\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      Tuple.set(x, field, next);\n      if (ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n\n  return this;\n};\n\nprototype.values = function(data) {\n  if (!arguments.length) return this._collector.data();\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.insert(data); }\n  return this;\n};\n\nprototype.mutates = function(m) {\n  if (!arguments.length) return this._mutates;\n  this._mutates = this._mutates || m;\n  return this;\n};\n\nprototype.last = function() {\n  return this._output;\n};\n\nprototype.fire = function(input) {\n  if (input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]);\n  return this;\n};\n\nprototype.pipeline = function(pipeline) {\n  if (!arguments.length) return this._pipeline;\n\n  var graph = this._graph,\n      status;\n\n  pipeline.unshift(this._inputNode = DataSourceInput(this));\n  status = graph.preprocess(pipeline);\n\n  if (status.router) {\n    pipeline.push(status.collector = new Collector(graph));\n  }\n\n  pipeline.push(this._outputNode = DataSourceOutput(this));\n  this._collector = status.collector;\n  this._mutates = !!status.mutates;\n  graph.connect(this._pipeline = pipeline);\n\n  return this;\n};\n\nprototype.synchronize = function() {\n  this._graph.synchronize(this._pipeline);\n  return this;\n};\n\nprototype.listener = function() { \n  return DataSourceListener(this).addListener(this._inputNode);\n};\n\nprototype.addListener = function(l) {\n  if (l instanceof DataSource) {\n    this._collector.addListener(l.listener());\n  } else {\n    this._outputNode.addListener(l);      \n  }\n  return this;\n};\n\nprototype.removeListener = function(l) {\n  this._outputNode.removeListener(l);\n};\n\nprototype.listeners = function(ds) {\n  return (ds ? this._collector : this._outputNode).listeners();\n};\n\n// Input node applies the datasource's delta, and propagates it to \n// the rest of the pipeline. It receives touches to reflow data.\nfunction DataSourceInput(ds) {\n  var input = new Node(ds._graph)\n    .router(true)\n    .collector(true);\n\n  input.data = function() {\n    return ds._data;\n  };\n\n  input.evaluate = function(input) {\n    log.debug(input, ['input', ds._name]);\n\n    var delta = ds._input, \n        out = ChangeSet.create(input), f;\n\n    // Delta might contain fields updated through API\n    for (f in delta.fields) {\n      out.fields[f] = 1;\n    }\n\n    // update data\n    if (delta.rem.length) {\n      ds._data = Tuple.idFilter(ds._data, delta.rem);\n    }\n\n    if (delta.add.length) {\n      ds._data = ds._data.concat(delta.add);\n    }\n\n    if (delta.sort) {\n      ds._data.sort(delta.sort);\n    }\n\n    // if reflowing, add any other tuples not currently in changeset\n    if (input.reflow) {\n      delta.mod = delta.mod.concat(\n        Tuple.idFilter(ds._data, delta.add, delta.mod, delta.rem));\n    }\n\n    // reset change list\n    ds._input = ChangeSet.create();\n\n    out.add = delta.add; \n    out.mod = delta.mod;\n    out.rem = delta.rem;\n    out.facet = ds._facet;\n    return out;\n  };\n\n  return input;\n}\n\n// Output node captures the last changeset seen by this datasource\n// (needed for joins and builds) and materializes any nested data.\n// If this datasource is faceted, materializes the values in the facet.\nfunction DataSourceOutput(ds) {\n  var output = new Node(ds._graph)\n    .router(true)\n    .reflows(true)\n    .collector(true);\n\n  output.data = function() {\n    return ds._collector ? ds._collector.data() : ds._data;\n  };\n\n  output.evaluate = function(input) {\n    log.debug(input, ['output', ds._name]);\n\n    var out = ChangeSet.create(input, true);\n\n    if (ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    out.data[ds._name] = 1;\n    return out;\n  };\n\n  return output;\n}\n\nfunction DataSourceListener(ds) {\n  var l = new Node(ds._graph).router(true);\n\n  l.evaluate = function(input) {\n    // Tuple derivation carries a cost. So only derive if the pipeline has\n    // operators that mutate, and thus would override the source data.\n    if (ds.mutates()) {  \n      var map = ds._srcMap || (ds._srcMap = {}), // to propagate tuples correctly\n          output = ChangeSet.create(input);\n\n      output.add = input.add.map(function(t) {\n        return (map[t._id] = Tuple.derive(t));\n      });\n\n      output.mod = input.mod.map(function(t) {\n        return Tuple.rederive(t, map[t._id]);\n      });\n\n      output.rem = input.rem.map(function(t) { \n        var o = map[t._id];\n        return (map[t._id] = null, o);\n      });\n\n      return (ds._input = output);\n    } else {\n      return (ds._input = input);\n    }\n  };\n\n  return l;\n}\n\nmodule.exports = DataSource;\n\n},{\"./ChangeSet\":34,\"./Collector\":35,\"./Node\":40,\"./Tuple\":42,\"vega-logging\":33}],37:[function(require,module,exports){\nvar deps = module.exports = {\n  ALL: ['data', 'fields', 'scales', 'signals']\n};\ndeps.ALL.forEach(function(k) { deps[k.toUpperCase()] = k; });\n\n},{}],38:[function(require,module,exports){\nvar dl = require('datalib'),\n    Heap = require('./Heap'),\n    ChangeSet = require('./ChangeSet'),\n    DataSource = require('./DataSource'),\n    Collector = require('./Collector'),\n    Tuple = require('./Tuple'),\n    Signal = require('./Signal'),\n    Deps = require('./Dependencies');\n\nfunction Graph() {\n}\n\nvar prototype = Graph.prototype;\n\nprototype.init = function() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n\n  this.doNotPropagate = {};\n};\n\nprototype.rank = function() {\n  return ++this._rank;\n};\n\nprototype.values = function(type, names, hash) {\n  var data = (type === Deps.SIGNALS ? this._signals : this._data),\n      n = (names !== undefined ? names : dl.keys(data)),\n      vals, i;\n\n  if (Array.isArray(n)) {\n    vals = hash || {};\n    for (i=0; i<n.length; ++i) {\n      vals[n[i]] = data[n[i]].values();\n    }\n    return vals;\n  } else {\n    return data[n].values();\n  }\n};\n\n// Retain for backwards-compatibility\nprototype.dataValues = function(names) {\n  return this.values(Deps.DATA, names);\n};\n\n// Retain for backwards-compatibility\nprototype.signalValues = function(names) {\n  return this.values(Deps.SIGNALS, names);\n};\n\nprototype.data = function(name, pipeline, facet) {\n  var db = this._data;\n  if (!arguments.length) {\n    var all = [], key;\n    for (key in db) { all.push(db[key]); }\n    return all;\n  } else if (arguments.length === 1) {\n    return db[name];\n  } else {\n    return (db[name] = new DataSource(this, name, facet).pipeline(pipeline));\n  }\n};\n\nprototype.signal = function(name, init) {\n  if (arguments.length === 1) {\n    var m = this;\n    return Array.isArray(name) ?\n      name.map(function(n) { return m._signals[n]; }) :\n      this._signals[name];\n  } else {\n    return (this._signals[name] = new Signal(this, name, init));\n  }\n};\n\nprototype.signalRef = function(ref) {\n  if (!Array.isArray(ref)) {\n    ref = dl.field(ref);\n  }\n\n  var value = this.signal(ref[0]).value();\n  if (ref.length > 1) {\n    for (var i=1, n=ref.length; i<n; ++i) {\n      value = value[ref[i]];\n    }\n  }\n  return value;\n};\n\n// Stamp should be specified with caution. It is necessary for inline datasources,\n// which need to be populated during the same cycle even though propagation has\n// passed that part of the dataflow graph.  \nprototype.propagate = function(pulse, node, stamp) {\n  var pulses = {},\n      listeners, next, nplse, tpls, ntpls, i, len;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(function(a, b) {\n    // Sort on qrank (queue-rank).\n    // Rank can change during propagation due to rewiring.\n    return a._qrank - b._qrank;\n  });\n\n  if (pulse.stamp) throw Error('Pulse already has a non-zero stamp.');\n\n  pulse.stamp = stamp || ++this._stamp;\n  pulses[node._id] = pulse;\n  pq.push(node.qrank(true));\n\n  while (pq.size() > 0) {\n    node  = pq.peek();\n    pulse = pulses[node._id];\n\n    if (node.rank() !== node.qrank()) {\n      // A node's rank might change during a propagation. Re-queue if so.\n      pq.replace(node.qrank(true));\n    } else {\n      // Evaluate node and propagate pulse.\n      pq.pop();\n      pulses[node._id] = null;\n      listeners = node._listeners;\n      pulse = this.evaluate(pulse, node);\n\n      // Propagate the pulse. \n      if (pulse !== this.doNotPropagate) {\n        // Ensure reflow pulses always send reflow pulses even if skipped.\n        if (!pulse.reflow && node.reflows()) {\n          pulse = ChangeSet.create(pulse, true);\n        }\n\n        for (i=0, len=listeners.length; i<len; ++i) {\n          next = listeners[i];\n\n          if ((nplse = pulses[next._id]) !== undefined) {\n            if (nplse === null) throw Error('Already propagated to node.');\n            if (nplse === pulse) continue;  // Re-queueing the same pulse.\n\n            // We've already queued this node. Ensure there should be at most one\n            // pulse with tuples (add/mod/rem), and the remainder will be reflows. \n            tpls  = pulse.add.length || pulse.mod.length || pulse.rem.length;\n            ntpls = nplse.add.length || nplse.mod.length || nplse.rem.length;\n\n            if (tpls && ntpls) throw Error('Multiple changeset pulses to same node');\n\n            // Combine reflow and tuples into a single pulse. \n            pulses[next._id] = tpls ? pulse : nplse;\n            pulses[next._id].reflow = pulse.reflow || nplse.reflow;\n          } else {\n            // First time we're seeing this node, queue it for propagation.\n            pq.push(next.qrank(true));\n            pulses[next._id] = pulse;\n          }\n        }\n      }\n    }\n  }\n};\n\n// Process a new branch of the dataflow graph prior to connection:\n// (1) Insert new Collector nodes as needed. \n// (2) Track + return mutation/routing status of the branch.\nprototype.preprocess = function(branch) {\n  var graph = this,\n      mutates = 0,\n      node, router, collector, collects;\n\n  for (var i=0; i<branch.length; ++i) {\n    node = branch[i];\n\n    // Batch nodes need access to a materialized dataset. \n    if (node.batch() && !node._collector) {\n      if (router || !collector) {\n        node = new Collector(graph);\n        branch.splice(i, 0, node);\n        router = false;\n      } else {\n        node._collector = collector;\n      }\n    }\n\n    if ((collects = node.collector())) collector = node;\n    router  = router  || node.router() && !collects;\n    mutates = mutates || node.mutates();\n\n    // A collector needs to be inserted after tuple-producing\n    // nodes for correct previous value tracking.\n    if (node.produces()) {\n      branch.splice(i+1, 0, new Collector(graph));\n      router = false;\n    }\n  }\n\n  return {router: router, collector: collector, mutates: mutates};\n};\n\nprototype.connect = function(branch) {\n  var collector, node, data, signals, i, n, j, m, x, y;\n\n  // connect the pipeline\n  for (i=0, n=branch.length; i<n; ++i) {\n    node = branch[i];\n    if (node.collector()) collector = node;\n\n    data = node.dependency(Deps.DATA);\n    for (j=0, m=data.length; j<m; ++j) {\n      if (!(x=this.data(y=data[j]))) {\n        throw new Error('Unknown data source ' + dl.str(y));\n      }\n\n      x.addListener(collector);\n    }\n\n    signals = node.dependency(Deps.SIGNALS);\n    for (j=0, m=signals.length; j<m; ++j) {\n      if (!(x=this.signal(y=signals[j]))) {\n        throw new Error('Unknown signal ' + dl.str(y));\n      }\n\n      x.addListener(collector);\n    }\n\n    if (i > 0) branch[i-1].addListener(node);\n  }\n\n  return branch;\n};\n\nprototype.disconnect = function(branch) {\n  var collector, node, data, signals, i, n, j, m;\n\n  for (i=0, n=branch.length; i<n; ++i) {\n    node = branch[i];\n    if (node.collector()) collector = node;\n\n    data = node.dependency(Deps.DATA);\n    for (j=0, m=data.length; j<m; ++j) {\n      this.data(data[j]).removeListener(collector);\n    }\n\n    signals = node.dependency(Deps.SIGNALS);\n    for (j=0, m=signals.length; j<m; ++j) {\n      this.signal(signals[j]).removeListener(collector);\n    }\n\n    node.disconnect();\n  }\n\n  return branch;\n};\n\nprototype.synchronize = function(branch) {\n  var ids = {},\n      node, data, i, n, j, m, d, id;\n\n  for (i=0, n=branch.length; i<n; ++i) {\n    node = branch[i];\n    if (!node.collector()) continue;\n\n    for (j=0, data=node.data(), m=data.length; j<m; ++j) {\n      id = (d = data[j])._id;\n      if (ids[id]) continue; \n      Tuple.prev_update(d);\n      ids[id] = 1; \n    }\n  }\n\n  return this;\n};\n\nprototype.reevaluate = function(pulse, node) {\n  var reflowed = pulse.reflow && node.last() >= pulse.stamp,\n      run = node.router() || pulse.add.length || pulse.rem.length;\n\n  return run || !reflowed || node.reevaluate(pulse);\n};\n\nprototype.evaluate = function(pulse, node) {\n  if (!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse;\n};\n\nmodule.exports = Graph;\n\n},{\"./ChangeSet\":34,\"./Collector\":35,\"./DataSource\":36,\"./Dependencies\":37,\"./Heap\":39,\"./Signal\":41,\"./Tuple\":42,\"datalib\":27}],39:[function(require,module,exports){\nfunction Heap(comparator) {\n  this.cmp = comparator;\n  this.nodes = [];\n}\n\nvar prototype = Heap.prototype;\n\nprototype.size = function() {\n  return this.nodes.length;\n};\n\nprototype.clear = function() {\n  return (this.nodes = [], this);\n};\n\nprototype.peek = function() {\n  return this.nodes[0];\n};\n\nprototype.push = function(x) {\n  var array = this.nodes;\n  array.push(x);\n  return _siftdown(array, 0, array.length-1, this.cmp);\n};\n\nprototype.pop = function() {\n  var array = this.nodes,\n      last = array.pop(),\n      item;\n\n  if (array.length) {\n    item = array[0];\n    array[0] = last;\n    _siftup(array, 0, this.cmp);\n  } else {\n    item = last;\n  }\n  return item;\n};\n\nprototype.replace = function(item) {\n  var array = this.nodes,\n      retval = array[0];\n  array[0] = item;\n  _siftup(array, 0, this.cmp);\n  return retval;\n};\n\nprototype.pushpop = function(item) {\n  var array = this.nodes, ref = array[0];\n  if (array.length && this.cmp(ref, item) < 0) {\n    array[0] = item;\n    item = ref;\n    _siftup(array, 0, this.cmp);\n  }\n  return item;\n};\n\nfunction _siftdown(array, start, idx, cmp) {\n  var item, parent, pidx;\n\n  item = array[idx];\n  while (idx > start) {\n    pidx = (idx - 1) >> 1;\n    parent = array[pidx];\n    if (cmp(item, parent) < 0) {\n      array[idx] = parent;\n      idx = pidx;\n      continue;\n    }\n    break;\n  }\n  return (array[idx] = item);\n}\n\nfunction _siftup(array, idx, cmp) {\n  var start = idx,\n      end = array.length,\n      item = array[idx],\n      cidx = 2 * idx + 1, ridx;\n\n  while (cidx < end) {\n    ridx = cidx + 1;\n    if (ridx < end && cmp(array[cidx], array[ridx]) >= 0) {\n      cidx = ridx;\n    }\n    array[idx] = array[cidx];\n    idx = cidx;\n    cidx = 2 * idx + 1;\n  }\n  array[idx] = item;\n  return _siftdown(array, start, idx, cmp);\n}\n\nmodule.exports = Heap;\n\n},{}],40:[function(require,module,exports){\nvar DEPS = require('./Dependencies').ALL,\n    nodeID = 0;\n\nfunction Node(graph) {\n  if (graph) this.init(graph);\n}\n\nvar Flags = Node.Flags = {\n  Router:     0x01, // Responsible for propagating tuples, cannot be skipped.\n  Collector:  0x02, // Holds a materialized dataset, pulse node to reflow.\n  Produces:   0x04, // Produces new tuples. \n  Mutates:    0x08, // Sets properties of incoming tuples.\n  Reflows:    0x10, // Forwards a reflow pulse.\n  Batch:      0x20  // Performs batch data processing, needs collector.\n};\n\nvar prototype = Node.prototype;\n\nprototype.init = function(graph) {\n  this._id = ++nodeID;\n  this._graph = graph;\n  this._rank  = graph.rank(); // Topological sort by rank\n  this._qrank = null; // Rank when enqueued for propagation\n  this._stamp = 0;    // Last stamp seen\n\n  this._listeners = [];\n  this._listeners._ids = {}; // To prevent duplicate listeners\n\n  // Initialize dependencies.\n  this._deps = {};\n  for (var i=0, n=DEPS.length; i<n; ++i) {\n    this._deps[DEPS[i]] = [];\n  }\n\n  // Initialize status flags.\n  this._flags = 0;\n\n  return this;\n};\n\nprototype.rank = function() {\n  return this._rank;\n};\n\nprototype.qrank = function(/* set */) {\n  if (!arguments.length) return this._qrank;\n  return (this._qrank = this._rank, this);\n};\n\nprototype.last = function(stamp) { \n  if (!arguments.length) return this._stamp;\n  return (this._stamp = stamp, this);\n};\n\n// -- status flags ---\n\nprototype._setf = function(v, b) {\n  if (b) { this._flags |= v; } else { this._flags &= ~v; }\n  return this;\n};\n\nprototype.router = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Router);\n  return this._setf(Flags.Router, state);\n};\n\nprototype.collector = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Collector);\n  return this._setf(Flags.Collector, state);\n};\n\nprototype.produces = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Produces);\n  return this._setf(Flags.Produces, state);\n};\n\nprototype.mutates = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Mutates);\n  return this._setf(Flags.Mutates, state);\n};\n\nprototype.reflows = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Reflows);\n  return this._setf(Flags.Reflows, state);\n};\n\nprototype.batch = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Batch);\n  return this._setf(Flags.Batch, state);\n};\n\nprototype.dependency = function(type, deps) {\n  var d = this._deps[type],\n      n = d._names || (d._names = {});  // To prevent dupe deps\n\n  // Get dependencies of the given type\n  if (arguments.length === 1) {\n    return d;\n  }\n\n  if (deps === null) {\n    // Clear dependencies of the given type\n    d.splice(0, d.length);\n    d._names = {};\n  } else if (!Array.isArray(deps)) {\n    // Separate this case to avoid cost of array creation\n    if (n[deps]) return this;\n    d.push(deps);\n    n[deps] = 1;\n  } else {\n    for (var i=0, len=deps.length, dep; i<len; ++i) {\n      dep = deps[i];\n      if (n[dep]) continue;\n      d.push(dep);\n      n[dep] = 1;\n    }\n  }\n\n  return this;\n};\n\nprototype.listeners = function() {\n  return this._listeners;\n};\n\nprototype.addListener = function(l) {\n  if (!(l instanceof Node)) {\n    throw Error('Listener is not a Node');\n  }\n  if (this._listeners._ids[l._id]) return this;\n\n  this._listeners.push(l);\n  this._listeners._ids[l._id] = 1;\n  if (this._rank > l._rank) {\n    var q = [l],\n        g = this._graph, cur;\n    while (q.length) {\n      cur = q.shift();\n      cur._rank = g.rank();\n      q.unshift.apply(q, cur.listeners());\n    }\n  }\n\n  return this;\n};\n\nprototype.removeListener = function(l) {\n  if (!this._listeners._ids[l._id]) return false;\n  \n  var idx = this._listeners.indexOf(l),\n      b = idx >= 0;\n\n  if (b) {\n    this._listeners.splice(idx, 1);\n    this._listeners._ids[l._id] = null;\n  }\n  return b;\n};\n\nprototype.disconnect = function() {\n  this._listeners = [];\n  this._listeners._ids = {};\n};\n\n// Evaluate this dataflow node for the current pulse.\n// Subclasses should override to perform custom processing.\nprototype.evaluate = function(pulse) {\n  return pulse;\n};\n\n// Should this node be re-evaluated for the current pulse?\n// Searches pulse to see if any dependencies have updated.\nprototype.reevaluate = function(pulse) {\n  var prop, dep, i, n, j, m;\n\n  for (i=0, n=DEPS.length; i<n; ++i) {\n    prop = DEPS[i];\n    dep = this._deps[prop];\n    for (j=0, m=dep.length; j<m; ++j) {\n      if (pulse[prop][dep[j]]) return true;\n    }\n  }\n\n  return false;\n};\n\nNode.reset = function() { nodeID = 0; };\n\nmodule.exports = Node;\n\n},{\"./Dependencies\":37}],41:[function(require,module,exports){\nvar ChangeSet = require('./ChangeSet'),\n    Node = require('./Node'), // jshint ignore:line\n    Base = Node.prototype;\n\nfunction Signal(graph, name, initialValue) {\n  Base.init.call(this, graph);\n  this._name  = name;\n  this._value = initialValue;\n  this._verbose = false; // Verbose signals re-pulse the graph even if prev === val.\n  this._handlers = [];\n  return this;\n}\n\nvar prototype = (Signal.prototype = Object.create(Base));\nprototype.constructor = Signal;\n\nprototype.name = function() {\n  return this._name;\n};\n\nprototype.value = function(val) {\n  if (!arguments.length) return this._value;\n  return (this._value = val, this);\n};\n\n// Alias to value, for shared API with DataSource\nprototype.values = prototype.value;\n\nprototype.verbose = function(v) {\n  if (!arguments.length) return this._verbose;\n  return (this._verbose = !!v, this);\n};\n\nprototype.evaluate = function(input) {\n  return input.signals[this._name] ? input : this._graph.doNotPropagate;\n};\n\nprototype.fire = function(cs) {\n  if (!cs) cs = ChangeSet.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nprototype.on = function(handler) {\n  var signal = this,\n      node = new Node(this._graph);\n\n  node.evaluate = function(input) {\n    handler(signal.name(), signal.value());\n    return input;\n  };\n\n  this._handlers.push({\n    handler: handler,\n    node: node\n  });\n\n  return this.addListener(node);\n};\n\nprototype.off = function(handler) {\n  var h = this._handlers, i, x;\n\n  for (i=h.length; --i>=0;) {\n    if (!handler || h[i].handler === handler) {\n      x = h.splice(i, 1)[0];\n      this.removeListener(x.node);\n    }\n  }\n\n  return this;\n};\n\nmodule.exports = Signal;\n\n},{\"./ChangeSet\":34,\"./Node\":40}],42:[function(require,module,exports){\nvar tupleID = 0;\n\nfunction ingest(datum) {\n  datum = (datum === Object(datum)) ? datum : {data: datum};\n  datum._id = ++tupleID;\n  if (datum._prev) datum._prev = null;\n  return datum;\n}\n\nfunction idMap(a, ids) {\n  ids = ids || {};\n  for (var i=0, n=a.length; i<n; ++i) {\n    ids[a[i]._id] = 1;\n  }\n  return ids;\n}\n\nfunction copy(t, c) {\n  c = c || {};\n  for (var k in t) {\n    if (k !== '_prev' && k !== '_id') c[k] = t[k];\n  }\n  return c;\n}\n\nmodule.exports = {\n  ingest: ingest,\n  idMap: idMap,\n\n  derive: function(d) {\n    return ingest(copy(d));\n  },\n\n  rederive: function(d, t) {\n    return copy(d, t);\n  },\n\n  set: function(t, k, v) {\n    return t[k] === v ? 0 : (t[k] = v, 1);\n  },\n\n  prev: function(t) {\n    return t._prev || t;\n  },\n\n  prev_init: function(t) {\n    if (!t._prev) { t._prev = {_id: t._id}; }\n  },\n\n  prev_update: function(t) {\n    var p = t._prev, k, v;\n    if (p) for (k in t) {\n      if (k !== '_prev' && k !== '_id') {\n        p[k] = ((v=t[k]) instanceof Object && v._prev) ? v._prev : v;\n      }\n    }\n  },\n\n  reset: function() { tupleID = 0; },\n\n  idFilter: function(data) {\n    var ids = {};\n    for (var i=arguments.length; --i>0;) {\n      idMap(arguments[i], ids);\n    }\n    return data.filter(function(x) { return !ids[x._id]; });\n  }\n};\n\n},{}],43:[function(require,module,exports){\nmodule.exports = {\n  ChangeSet:    require('./ChangeSet'),\n  Collector:    require('./Collector'),\n  DataSource:   require('./DataSource'),\n  Dependencies: require('./Dependencies'),\n  Graph:        require('./Graph'),\n  Node:         require('./Node'),\n  Signal:       require('./Signal'),\n  Tuple:        require('./Tuple'),\n  debug:        require('vega-logging').debug\n};\n\n},{\"./ChangeSet\":34,\"./Collector\":35,\"./DataSource\":36,\"./Dependencies\":37,\"./Graph\":38,\"./Node\":40,\"./Signal\":41,\"./Tuple\":42,\"vega-logging\":33}],44:[function(require,module,exports){\nfunction toMap(list) {\n  var map = {}, i, n;\n  for (i=0, n=list.length; i<n; ++i) map[list[i]] = 1;\n  return map;\n}\n\nfunction keys(object) {\n  var list = [], k;\n  for (k in object) list.push(k);\n  return list;\n}\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants'),\n      functions = (opt.functions || require('./functions'))(codegen),\n      idWhiteList = opt.idWhiteList ? toMap(opt.idWhiteList) : null,\n      idBlackList = opt.idBlackList ? toMap(opt.idBlackList) : null,\n      memberDepth = 0,\n      FIELD_VAR = opt.fieldVar || 'datum',\n      GLOBAL_VAR = opt.globalVar || 'signals',\n      globals = {},\n      fields = {};\n\n  function codegen_wrap(ast) {    \n    var retval = {\n      code: codegen(ast),\n      globals: keys(globals),\n      fields: keys(fields)\n    };\n    globals = {};\n    fields = {};\n    return retval;\n  }\n\n  function lookupGlobal(id) {\n    return GLOBAL_VAR + '[\"' + id + '\"]';\n  }\n\n  function codegen(ast) {\n    if (typeof ast === 'string') return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error('Unsupported type: ' + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    'Literal': function(n) {\n        return n.raw;\n      },\n    'Identifier': function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            globals[id] = 1;\n            return lookupGlobal(id);\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error('Illegal identifier: ' + id);\n        }\n        return id;\n      },\n    'Program': function(n) {\n        return n.body.map(codegen).join('\\n');\n      },\n    'MemberExpression': function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === FIELD_VAR) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? '.'+p : '['+p+']');\n      },\n    'CallExpression': function(n) {\n        if (n.callee.type !== 'Identifier') {\n          throw new Error('Illegal callee type: ' + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error('Unrecognized function: ' + callee);\n        return fn instanceof Function ?\n          fn(args) :\n          fn + '(' + args.map(codegen).join(',') + ')';\n      },\n    'ArrayExpression': function(n) {\n        return '[' + n.elements.map(codegen).join(',') + ']';\n      },\n    'BinaryExpression': function(n) {\n        return '(' + codegen(n.left) + n.operator + codegen(n.right) + ')';\n      },\n    'UnaryExpression': function(n) {\n        return '(' + n.operator + codegen(n.argument) + ')';\n      },\n    'ConditionalExpression': function(n) {\n        return '(' + codegen(n.test) +\n          '?' + codegen(n.consequent) +\n          ':' + codegen(n.alternate) +\n          ')';\n      },\n    'LogicalExpression': function(n) {\n        return '(' + codegen(n.left) + n.operator + codegen(n.right) + ')';\n      },\n    'ObjectExpression': function(n) {\n        return '{' + n.properties.map(codegen).join(',') + '}';\n      },\n    'Property': function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + ':' + codegen(n.value);\n      },\n    'ExpressionStatement': function(n) {\n        return codegen(n.expression);\n      }\n  };\n\n  codegen_wrap.functions = functions;\n  codegen_wrap.constants = constants;\n  return codegen_wrap;\n};\n\n},{\"./constants\":45,\"./functions\":46}],45:[function(require,module,exports){\nmodule.exports = {\n  'NaN':     'NaN',\n  'E':       'Math.E',\n  'LN2':     'Math.LN2',\n  'LN10':    'Math.LN10',\n  'LOG2E':   'Math.LOG2E',\n  'LOG10E':  'Math.LOG10E',\n  'PI':      'Math.PI',\n  'SQRT1_2': 'Math.SQRT1_2',\n  'SQRT2':   'Math.SQRT2'\n};\n},{}],46:[function(require,module,exports){\nmodule.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + '(' + obj + ')';\n      if (cast.lastIndexOf('new ', 0) === 0) obj = '(' + obj + ')';\n    }\n    return obj + '.' + name + (type < 0 ? '' : type === 0 ?\n      '()' :\n      '(' + args.slice(1).map(codegen).join(',') + ')');\n  }\n\n  function fn(name, cast, type) {\n    return function(args) {\n      return fncall(name, args, cast, type);\n    };\n  }\n\n  var DATE = 'new Date',\n      STRING = 'String',\n      REGEXP = 'RegExp';\n\n  return {\n    // MATH functions\n    'isNaN':    'isNaN',\n    'isFinite': 'isFinite',\n    'abs':      'Math.abs',\n    'acos':     'Math.acos',\n    'asin':     'Math.asin',\n    'atan':     'Math.atan',\n    'atan2':    'Math.atan2',\n    'ceil':     'Math.ceil',\n    'cos':      'Math.cos',\n    'exp':      'Math.exp',\n    'floor':    'Math.floor',\n    'log':      'Math.log',\n    'max':      'Math.max',\n    'min':      'Math.min',\n    'pow':      'Math.pow',\n    'random':   'Math.random',\n    'round':    'Math.round',\n    'sin':      'Math.sin',\n    'sqrt':     'Math.sqrt',\n    'tan':      'Math.tan',\n\n    'clamp': function(args) {\n      if (args.length < 3)\n        throw new Error('Missing arguments to clamp function.');\n      if (args.length > 3)\n      throw new Error('Too many arguments to clamp function.');\n      var a = args.map(codegen);\n      return 'Math.max('+a[1]+', Math.min('+a[2]+','+a[0]+'))';\n    },\n\n    // DATE functions\n    'now':             'Date.now',\n    'datetime':        DATE,\n    'date':            fn('getDate', DATE, 0),\n    'day':             fn('getDay', DATE, 0),\n    'year':            fn('getFullYear', DATE, 0),\n    'month':           fn('getMonth', DATE, 0),\n    'hours':           fn('getHours', DATE, 0),\n    'minutes':         fn('getMinutes', DATE, 0),\n    'seconds':         fn('getSeconds', DATE, 0),\n    'milliseconds':    fn('getMilliseconds', DATE, 0),\n    'time':            fn('getTime', DATE, 0),\n    'timezoneoffset':  fn('getTimezoneOffset', DATE, 0),\n    'utcdate':         fn('getUTCDate', DATE, 0),\n    'utcday':          fn('getUTCDay', DATE, 0),\n    'utcyear':         fn('getUTCFullYear', DATE, 0),\n    'utcmonth':        fn('getUTCMonth', DATE, 0),\n    'utchours':        fn('getUTCHours', DATE, 0),\n    'utcminutes':      fn('getUTCMinutes', DATE, 0),\n    'utcseconds':      fn('getUTCSeconds', DATE, 0),\n    'utcmilliseconds': fn('getUTCMilliseconds', DATE, 0),\n\n    // shared sequence functions\n    'length':      fn('length', null, -1),\n    'indexof':     fn('indexOf', null),\n    'lastindexof': fn('lastIndexOf', null),\n\n    // STRING functions\n    'parseFloat':  'parseFloat',\n    'parseInt':    'parseInt',\n    'upper':       fn('toUpperCase', STRING, 0),\n    'lower':       fn('toLowerCase', STRING, 0),\n    'slice':       fn('slice', STRING),\n    'substring':   fn('substring', STRING),\n\n    // REGEXP functions\n    'regexp':  REGEXP,\n    'test':    fn('test', REGEXP),\n\n    // Control Flow functions\n    'if': function(args) {\n        if (args.length < 3)\n          throw new Error('Missing arguments to if function.');\n        if (args.length > 3)\n        throw new Error('Too many arguments to if function.');\n        var a = args.map(codegen);\n        return a[0]+'?'+a[1]+':'+a[2];\n      }\n  };\n};\n},{}],47:[function(require,module,exports){\nvar parser = require('./parser'),\n    codegen = require('./codegen');\n    \nvar expr = module.exports = {\n  parse: function(input, opt) {\n      return parser.parse('('+input+')', opt);\n    },\n  code: function(opt) {\n      return codegen(opt);\n    },\n  compiler: function(args, opt) {\n      args = args.slice();\n      var generator = codegen(opt),\n          len = args.length,\n          compile = function(str) {\n            var value = generator(expr.parse(str));\n            args[len] = '\"use strict\"; return (' + value.code + ');';\n            value.fn = Function.apply(null, args);\n            return value;\n          };\n      compile.codegen = generator;\n      return compile;\n    },\n  functions: require('./functions'),\n  constants: require('./constants')\n};\n\n},{\"./codegen\":44,\"./constants\":45,\"./functions\":46,\"./parser\":48}],48:[function(require,module,exports){\n/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/* istanbul ignore next */\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();\n},{}],49:[function(require,module,exports){\nvar expr = require('vega-expression'),\n    args = ['datum', 'event', 'signals'];\n\nmodule.exports = expr.compiler(args, {\n  idWhiteList: args,\n  fieldVar:    args[0],\n  globalVar:   args[2],\n  functions:   function(codegen) {\n    var fn = expr.functions(codegen);\n    fn.eventItem = function() { return 'event.vg.item'; };\n    fn.eventGroup = 'event.vg.getGroup';\n    fn.eventX = 'event.vg.getX';\n    fn.eventY = 'event.vg.getY';\n    fn.open = 'window.open';\n    return fn;\n  }\n});\n},{\"vega-expression\":47}],50:[function(require,module,exports){\nvar dl = require('datalib'),\n    df = require('vega-dataflow'),\n    log = require('vega-logging'),\n    ChangeSet = df.ChangeSet,\n    Tuple = df.Tuple,\n    Deps = df.Dependencies,\n    Transform = require('./Transform'),\n    Facetor = require('./Facetor');\n\nfunction Aggregate(graph) {\n  Transform.prototype.init.call(this, graph);\n\n  Transform.addParameters(this, {\n    groupby: {type: 'array<field>'},\n    summarize: {\n      type: 'custom', \n      set: function(summarize) {\n        var signalDeps = {},\n            tx = this._transform,\n            i, len, f, fields, name, ops;\n\n        if (!dl.isArray(fields = summarize)) { // Object syntax from dl\n          fields = [];\n          for (name in summarize) {\n            ops = dl.array(summarize[name]);\n            fields.push({field: name, ops: ops});\n          }\n        }\n\n        function sg(x) { if (x.signal) signalDeps[x.signal] = 1; }\n\n        for (i=0, len=fields.length; i<len; ++i) {\n          f = fields[i];\n          if (f.field.signal) { signalDeps[f.field.signal] = 1; }\n          dl.array(f.ops).forEach(sg);\n          dl.array(f.as).forEach(sg);\n        }\n\n        tx._fields = fields;\n        tx._aggr = null;\n        tx.dependency(Deps.SIGNALS, dl.keys(signalDeps));\n        return tx;\n      }\n    }\n  });\n\n  this._aggr  = null; // dl.Aggregator\n  this._input = null; // Used by Facetor._on_keep.\n  this._args  = null; // To cull re-computation.\n  this._fields = [];\n  this._out = [];\n\n  this._type = TYPES.TUPLE; \n  this._acc = {groupby: dl.true, value: dl.true};\n\n  return this.router(true).produces(true);\n}\n\nvar prototype = (Aggregate.prototype = Object.create(Transform.prototype));\nprototype.constructor = Aggregate;\n\nvar TYPES = Aggregate.TYPES = {\n  VALUE: 1, \n  TUPLE: 2, \n  MULTI: 3\n};\n\nAggregate.VALID_OPS = [\n  'values', 'count', 'valid', 'missing', 'distinct', \n  'sum', 'mean', 'average', 'variance', 'variancep', 'stdev', \n  'stdevp', 'median', 'q1', 'q3', 'modeskew', 'min', 'max', \n  'argmin', 'argmax'\n];\n\nprototype.type = function(type) { \n  return (this._type = type, this); \n};\n\nprototype.accessors = function(groupby, value) {\n  var acc = this._acc;\n  acc.groupby = dl.$(groupby) || dl.true;\n  acc.value = dl.$(value) || dl.true;\n};\n\nprototype.aggr = function() {\n  if (this._aggr) return this._aggr;\n\n  var g = this._graph,\n      hasGetter = false,\n      args = [],\n      groupby = this.param('groupby').field,\n      value = function(x) { return x.signal ? g.signalRef(x.signal) : x; };\n\n  // Prepare summarize fields.\n  var fields = this._fields.map(function(f) {\n    var field = {\n      name: value(f.field),\n      as:   dl.array(f.as),\n      ops:  dl.array(value(f.ops)).map(value),\n      get:  f.get\n    };\n    hasGetter = hasGetter || field.get != null;\n    args.push(field.name);\n    return field;\n  });\n\n  // If there is an arbitrary getter, all bets are off.\n  // Otherwise, we can check argument fields to cull re-computation.\n  groupby.forEach(function(g) {\n    if (g.get) hasGetter = true;\n    args.push(g.name || g);\n  });\n  this._args = hasGetter || !fields.length ? null : args;\n\n  if (!fields.length) fields = {'*': 'values'};\n\n  // Instatiate our aggregator instance.\n  // Facetor is a special subclass that can facet into data pipelines.\n  var aggr = this._aggr = new Facetor()\n    .groupby(groupby)\n    .stream(true)\n    .summarize(fields);\n\n  // Collect output fields sets by this aggregate.\n  this._out = getFields(aggr);\n\n  // If we are processing tuples, key them by '_id'.\n  if (this._type !== TYPES.VALUE) { aggr.key('_id'); }\n\n  return aggr;\n};\n\nfunction getFields(aggr) {\n  // Collect the output fields set by this aggregate.\n  var f = [], i, n, j, m, dims, vals, meas;\n\n  dims = aggr._dims;\n  for (i=0, n=dims.length; i<n; ++i) {\n    f.push(dims[i].name);\n  }\n\n  vals = aggr._aggr;\n  for (i=0, n=vals.length; i<n; ++i) {\n    meas = vals[i].measures.fields;\n    for (j=0, m=meas.length; j<m; ++j) {\n      f.push(meas[j]);\n    }\n  }\n\n  return f;\n}\n\nprototype.transform = function(input, reset) {\n  log.debug(input, ['aggregate']);\n\n  var output = ChangeSet.create(input),\n      aggr = this.aggr(),\n      out = this._out,\n      args = this._args,\n      reeval = true,\n      p = Tuple.prev,\n      add, rem, mod, i;\n\n  // Upon reset, retract prior tuples and re-initialize.\n  if (reset) {\n    output.rem.push.apply(output.rem, aggr.result());\n    aggr.clear();\n    this._aggr = null;\n    aggr = this.aggr();\n  }\n\n  // Get update methods according to input type.\n  if (this._type === TYPES.TUPLE) {\n    add = function(x) { aggr._add(x); Tuple.prev_init(x); };\n    rem = function(x) { aggr._rem(p(x)); };\n    mod = function(x) { aggr._mod(x, p(x)); };\n  } else {\n    var gby = this._acc.groupby,\n        val = this._acc.value,\n        get = this._type === TYPES.VALUE ? val : function(x) {\n          return { _id: x._id, groupby: gby(x), value: val(x) };\n        };\n    add = function(x) { aggr._add(get(x)); Tuple.prev_init(x); };\n    rem = function(x) { aggr._rem(get(p(x))); };\n    mod = function(x) { aggr._mod(get(x), get(p(x))); };\n  }\n\n  input.add.forEach(add);\n  if (reset) {\n    // A signal change triggered reflow. Add everything.\n    // No need for rem, we cleared the aggregator.\n    input.mod.forEach(add);\n  } else {\n    input.rem.forEach(rem);\n\n    // If possible, check argument fields to see if we need to re-process mods.\n    if (args) for (i=0, reeval=false; i<args.length; ++i) {\n      if (input.fields[args[i]]) { reeval = true; break; }\n    }\n    if (reeval) input.mod.forEach(mod);\n  }\n\n  // Indicate output fields and return aggregate tuples.\n  for (i=0; i<out.length; ++i) {\n    output.fields[out[i]] = 1;\n  }\n  return (aggr._input = input, aggr.changes(output));\n};\n\nmodule.exports = Aggregate;\n},{\"./Facetor\":51,\"./Transform\":53,\"datalib\":27,\"vega-dataflow\":43,\"vega-logging\":33}],51:[function(require,module,exports){\nvar dl = require('datalib'),\n    Aggregator = dl.Aggregator,\n    Base = Aggregator.prototype,\n    df = require('vega-dataflow'),\n    Tuple = df.Tuple,\n    log = require('vega-logging'),\n    facetID = 0;\n\nfunction Facetor() {\n  Aggregator.call(this);\n  this._facet = null;\n  this._facetID = ++facetID;\n}\n\nvar prototype = (Facetor.prototype = Object.create(Base));\nprototype.constructor = Facetor;\n\nprototype.facet = function(f) {\n  return arguments.length ? (this._facet = f, this) : this._facet;\n};\n\nprototype._ingest = function(t) { \n  return Tuple.ingest(t, null);\n};\n\nprototype._assign = Tuple.set;\n\nfunction disconnect_cell(facet) {\n  log.debug({}, ['disconnecting cell', this.tuple._id]);\n  var pipeline = this.ds.pipeline();\n  facet.removeListener(pipeline[0]);\n  facet._graph.removeListener(pipeline[0]);\n  facet._graph.disconnect(pipeline);\n}\n\nprototype._newcell = function(x, key) {\n  var cell  = Base._newcell.call(this, x, key),\n      facet = this._facet;\n\n  if (facet) {\n    var graph = facet._graph,\n        tuple = cell.tuple,\n        pipeline = facet.param('transform');\n    cell.ds = graph.data(tuple._facetID, pipeline, tuple);\n    cell.disconnect = disconnect_cell;\n    facet.addListener(pipeline[0]);\n  }\n\n  return cell;\n};\n\nprototype._newtuple = function(x, key) {\n  var t = Base._newtuple.call(this, x);\n  if (this._facet) {\n    Tuple.set(t, 'key', key);\n    Tuple.set(t, '_facetID', this._facetID + '_' + key);\n  }\n  return t;\n};\n\nprototype.clear = function() {\n  if (this._facet) {\n    for (var k in this._cells) {\n      this._cells[k].disconnect(this._facet);\n    }\n  }\n  return Base.clear.call(this);\n};\n\nprototype._on_add = function(x, cell) {\n  if (this._facet) cell.ds._input.add.push(x);\n};\n\nprototype._on_rem = function(x, cell) {\n  if (this._facet) cell.ds._input.rem.push(x);\n};\n\nprototype._on_mod = function(x, prev, cell0, cell1) {\n  if (this._facet) { // Propagate tuples\n    if (cell0 === cell1) {\n      cell0.ds._input.mod.push(x);\n    } else {\n      cell0.ds._input.rem.push(x);\n      cell1.ds._input.add.push(x);\n    }\n  }\n};\n\nprototype._on_drop = function(cell) {\n  if (this._facet) cell.disconnect(this._facet);\n};\n\nprototype._on_keep = function(cell) {\n  // propagate sort, signals, fields, etc.\n  if (this._facet) df.ChangeSet.copy(this._input, cell.ds._input);\n};\n\nmodule.exports = Facetor;\n},{\"datalib\":27,\"vega-dataflow\":43,\"vega-logging\":33}],52:[function(require,module,exports){\nvar dl = require('datalib'),\n    Deps = require('vega-dataflow').Dependencies,\n    expr = require('../parse/expr');\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i,\n    valType   = /value/i;\n\nfunction Parameter(name, type, transform) {\n  this._name = name;\n  this._type = type;\n  this._transform = transform;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = {};\n}\n\nvar prototype = Parameter.prototype;\n\nfunction get() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  var val = isArray ? this._value : this._value[0],\n      acc = isArray ? this._accessors : this._accessors[0];\n\n  if (!dl.isValid(acc) && valType.test(this._type)) {\n    return val;\n  } else {\n    return isData ? { name: val, source: acc } :\n    isField ? { field: val, accessor: acc } : val;\n  }\n}\n\nprototype.get = function() {\n  var graph = this._transform._graph, \n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      s, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return get.call(this);\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return get.call(this); // TODO: support signal as dataTypes\n  }\n\n  for (s in this._signals) {\n    idx = this._signals[s];\n    val = graph.signalRef(s);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ? \n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return get.call(this);\n};\n\nprototype.set = function(value) {\n  var p = this,\n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  this._value = dl.array(value).map(function(v, i) {\n    if (dl.isString(v)) {\n      if (isExpr) {\n        var e = expr(v);\n        p._transform.dependency(Deps.FIELDS,  e.fields);\n        p._transform.dependency(Deps.SIGNALS, e.globals);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        p._accessors[i] = dl.accessor(v);\n        p._transform.dependency(Deps.FIELDS, dl.field(v));\n      } else if (isData) {\n        p._resolution = true;\n        p._transform.dependency(Deps.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      p._accessors[i] = dl.accessor(v.field);\n      p._transform.dependency(Deps.FIELDS, dl.field(v.field));\n      return v.field;\n    } else if (v.signal !== undefined) {\n      p._resolution = true;\n      p._signals[v.signal] = i;\n      p._transform.dependency(Deps.SIGNALS, v.signal);\n      return v.signal;\n    }\n\n    return v;\n  });\n\n  return p._transform;\n};\n\nmodule.exports = Parameter;\n},{\"../parse/expr\":49,\"datalib\":27,\"vega-dataflow\":43}],53:[function(require,module,exports){\nvar df = require('vega-dataflow'),\n    Base = df.Node.prototype, // jshint ignore:line\n    Deps = df.Dependencies,\n    Parameter = require('./Parameter');\n\nfunction Transform(graph) {\n  if (graph) Base.init.call(this, graph);\n}\n\nTransform.addParameters = function(proto, params) {\n  proto._parameters = proto._parameters || {};\n  for (var name in params) {\n    var p = params[name],\n        param = new Parameter(name, p.type, proto);\n\n    proto._parameters[name] = param;\n\n    if (p.type === 'custom') {\n      if (p.set) param.set = p.set.bind(param);\n      if (p.get) param.get = p.get.bind(param);\n    }\n\n    if (p.hasOwnProperty('default')) param.set(p.default);\n  }\n};\n\nvar prototype = (Transform.prototype = Object.create(Base));\nprototype.constructor = Transform;\n\nprototype.param = function(name, value) {\n  var param = this._parameters[name];\n  return (param === undefined) ? this :\n    (arguments.length === 1) ? param.get() : param.set(value);\n};\n\n// Perform transformation. Subclasses should override.\nprototype.transform = function(input/*, reset */) {\n  return input;\n};\n\nprototype.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed. \n  var reset = this._stamp < input.stamp &&\n    this.dependency(Deps.SIGNALS).reduce(function(c, s) {\n      return c += input.signals[s] ? 1 : 0;\n    }, 0);\n  return this.transform(input, reset);\n};\n\nprototype.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;\n},{\"./Parameter\":52,\"vega-dataflow\":43}],54:[function(require,module,exports){\n'use strict';\n\nrequire('./globals');\n\nvar consts = require('./consts'),\n  util = require('./util'),\n  vlEncDef = require('./encdef'),\n  vlenc = require('./enc'),\n  schema = require('./schema/schema');\n\nmodule.exports = (function() {\n  function Encoding(spec, theme) {\n    var defaults = schema.instantiate(),\n      specExtended = schema.util.merge(defaults, theme || {}, spec) ;\n\n    this._data = specExtended.data;\n    this._marktype = specExtended.marktype;\n    this._enc = specExtended.encoding;\n    this._config = specExtended.config;\n  }\n\n  var proto = Encoding.prototype;\n\n  Encoding.fromShorthand = function(shorthand, data, config, theme) {\n    var c = consts.shorthand,\n        split = shorthand.split(c.delim),\n        marktype = split.shift().split(c.assign)[1].trim(),\n        enc = vlenc.fromShorthand(split);\n\n    return new Encoding({\n      data: data,\n      marktype: marktype,\n      encoding: enc,\n      config: config\n    }, theme);\n  };\n\n  Encoding.fromSpec = function(spec, theme) {\n    return new Encoding(spec, theme);\n  };\n\n  proto.toShorthand = function() {\n    var c = consts.shorthand;\n    return 'mark' + c.assign + this._marktype +\n      c.delim + vlenc.shorthand(this._enc);\n  };\n\n  Encoding.shorthand = function (spec) {\n    var c = consts.shorthand;\n    return 'mark' + c.assign + spec.marktype +\n      c.delim + vlenc.shorthand(spec.encoding);\n  };\n\n  Encoding.specFromShorthand = function(shorthand, data, config, excludeConfig) {\n    return Encoding.fromShorthand(shorthand, data, config).toSpec(excludeConfig);\n  };\n\n  proto.toSpec = function(excludeConfig, excludeData) {\n    var enc = util.duplicate(this._enc),\n      spec;\n\n    spec = {\n      marktype: this._marktype,\n      encoding: enc\n    };\n\n    if (!excludeConfig) {\n      spec.config = util.duplicate(this._config);\n    }\n\n    if (!excludeData) {\n      spec.data = util.duplicate(this._data);\n    }\n\n    // remove defaults\n    var defaults = schema.instantiate();\n    return schema.util.subtract(spec, defaults);\n  };\n\n\n  proto.marktype = function() {\n    return this._marktype;\n  };\n\n  proto.is = function(m) {\n    return this._marktype === m;\n  };\n\n  proto.has = function(encType) {\n    // equivalent to calling vlenc.has(this._enc, encType)\n    return this._enc[encType].name !== undefined;\n  };\n\n  proto.encDef = function(et) {\n    return this._enc[et];\n  };\n\n  // get \"field\" reference for vega\n  proto.fieldRef = function(et, opt) {\n    opt = opt || {};\n    return vlEncDef.fieldRef(this._enc[et], opt);\n  };\n\n  /*\n   * return key-value pairs of field name and list of fields of that field name\n   */\n  proto.fields = function() {\n    return vlenc.fields(this._enc);\n  };\n\n  proto.fieldTitle = function(et) {\n    if (vlEncDef.isCount(this._enc[et])) {\n      return vlEncDef.count.displayName;\n    }\n    var fn = this._enc[et].aggregate || this._enc[et].timeUnit || (this._enc[et].bin && 'bin');\n    if (fn) {\n      return fn.toUpperCase() + '(' + this._enc[et].name + ')';\n    } else {\n      return this._enc[et].name;\n    }\n  };\n\n  proto.scale = function(et) {\n    return this._enc[et].scale || {};\n  };\n\n  proto.axis = function(et) {\n    return this._enc[et].axis || {};\n  };\n\n  proto.bandSize = function(encType, useSmallBand) {\n    useSmallBand = useSmallBand ||\n      //isBandInSmallMultiples\n      (encType === Y && this.has(ROW) && this.has(Y)) ||\n      (encType === X && this.has(COL) && this.has(X));\n\n    // if band.size is explicitly specified, follow the specification, otherwise draw value from config.\n    return this.encDef(encType).band.size ||\n      this.config(useSmallBand ? 'smallBandSize' : 'largeBandSize');\n  };\n\n  // returns false if binning is disabled, otherwise an object with binning properties\n  proto.bin = function(et) {\n    var bin = this._enc[et].bin;\n    if (bin === {})\n      return false;\n    if (bin === true)\n      return {\n        maxbins: schema.MAXBINS_DEFAULT\n      };\n    return bin;\n  };\n\n  proto.value = function(et) {\n    return this._enc[et].value;\n  };\n\n  proto.numberFormat = function(fieldStats) {\n    var formatConfig = fieldStats.max > this.config('maxSmallNumber') ?\n      'largeNumberFormat': 'smallNumberFormat';\n    return this.config(formatConfig);\n  };\n\n  proto.sort = function(et, stats) {\n    var sort = this._enc[et].sort,\n      enc = this._enc,\n      isTypes = vlEncDef.isTypes;\n\n    if ((!sort || sort.length===0) &&\n        // FIXME\n        Encoding.toggleSort.support({encoding:this._enc}, stats, true) && //HACK\n        this.config('toggleSort') === Q\n      ) {\n      var qField = isTypes(enc.x, [N, O]) ? enc.y : enc.x;\n\n      if (isTypes(enc[et], [N, O])) {\n        sort = [{\n          name: qField.name,\n          aggregate: qField.aggregate,\n          type: qField.type,\n          reverse: true\n        }];\n      }\n    }\n\n    return sort;\n  };\n\n  proto.map = function(f) {\n    return vlenc.map(this._enc, f);\n  };\n\n  proto.reduce = function(f, init) {\n    return vlenc.reduce(this._enc, f, init);\n  };\n\n  proto.forEach = function(f) {\n    return vlenc.forEach(this._enc, f);\n  };\n\n  proto.type = function(et) {\n    return this.has(et) ? this._enc[et].type : null;\n  };\n\n  proto.isType = function(et, type) {\n    var encDef = this.encDef(et);\n    return encDef && vlEncDef.isType(encDef, type);\n  };\n\n\n  proto.isTypes = function(et, type) {\n    var encDef = this.encDef(et);\n    return encDef && vlEncDef.isTypes(encDef, type);\n  };\n\n  Encoding.isOrdinalScale = function(encoding, encType) {\n    return vlEncDef.isOrdinalScale(encoding.encDef(encType));\n  };\n\n  Encoding.isDimension = function(encoding, encType) {\n    return vlEncDef.isDimension(encoding.encDef(encType));\n  };\n\n  Encoding.isMeasure = function(encoding, encType) {\n    return vlEncDef.isMeasure(encoding.encDef(encType));\n  };\n\n  proto.isOrdinalScale = function(encType) {\n    return this.has(encType) && Encoding.isOrdinalScale(this, encType);\n  };\n\n  proto.isDimension = function(encType) {\n    return this.has(encType) && Encoding.isDimension(this, encType);\n  };\n\n  proto.isMeasure = function(encType) {\n    return this.has(encType) && Encoding.isMeasure(this, encType);\n  };\n\n  proto.isAggregate = function() {\n    return vlenc.isAggregate(this._enc);\n  };\n\n  proto.dataTable = function() {\n    return this.isAggregate() ? AGGREGATE : RAW;\n  };\n\n  Encoding.isAggregate = function(spec) {\n    return vlenc.isAggregate(spec.encoding);\n  };\n\n  Encoding.alwaysNoOcclusion = function(spec) {\n    // FIXME raw OxQ with # of rows = # of O\n    return vlenc.isAggregate(spec.encoding);\n  };\n\n  Encoding.isStack = function(spec) {\n    // FIXME update this once we have control for stack ...\n    return (spec.marktype === 'bar' || spec.marktype === 'area') &&\n      spec.encoding.color;\n  };\n\n  /**\n   * Check if the encoding should be stacked and return the stack dimenstion and value fields.\n   * @return {Object} An object containing two properties:\n   * - dimension - the dimension field\n   * - value - the value field\n   */\n  proto.stack = function() {\n    var stack = (this.has(COLOR) && this.encDef(COLOR).stack) ? COLOR :\n          (this.has(DETAIL) && this.encDef(DETAIL).stack) ? DETAIL :\n          null;\n\n    var properties = stack && this.encDef(stack).stack !== true ?\n                       this.encDef(stack).stack :\n                       {};\n\n    if ((this.is('bar') || this.is('area')) && stack && this.isAggregate()) {\n\n      var isXMeasure = this.isMeasure(X);\n      var isYMeasure = this.isMeasure(Y);\n\n      if (isXMeasure && !isYMeasure) {\n        return {\n          groupby: Y,\n          value: X,\n          stack: stack,\n          properties: properties\n        };\n      } else if (isYMeasure && !isXMeasure) {\n        return {\n          groupby: X,\n          value: Y,\n          stack: stack,\n          properties: properties\n        };\n      }\n    }\n    return null; // no stack encoding\n  };\n\n\n\n  proto.details = function() {\n    var encoding = this;\n    return this.reduce(function(refs, field, encType) {\n      if (!field.aggregate && (encType !== X && encType !== Y)) {\n        refs.push(encoding.fieldRef(encType));\n      }\n      return refs;\n    }, []);\n  };\n\n  proto.facets = function() {\n    var encoding = this;\n    return this.reduce(function(refs, field, encType) {\n      if (!field.aggregate && (encType == ROW || encType == COL)) {\n        refs.push(encoding.fieldRef(encType));\n      }\n      return refs;\n    }, []);\n  };\n\n  proto.cardinality = function(encType, stats) {\n    return vlEncDef.cardinality(this.encDef(encType), stats, this.config('filterNull'));\n  };\n\n  proto.isRaw = function() {\n    return !this.isAggregate();\n  };\n\n  proto.data = function() {\n    return this._data;\n  };\n\n   // returns whether the encoding has values embedded\n  proto.hasValues = function() {\n    var vals = this.data().values;\n    return vals && vals.length;\n  };\n\n  proto.config = function(name) {\n    return this._config[name];\n  };\n\n  Encoding.transpose = function(spec) {\n    var oldenc = spec.encoding,\n      enc = util.duplicate(spec.encoding);\n    enc.x = oldenc.y;\n    enc.y = oldenc.x;\n    enc.row = oldenc.col;\n    enc.col = oldenc.row;\n    spec.encoding = enc;\n    return spec;\n  };\n\n  return Encoding;\n})();\n\n},{\"./consts\":67,\"./enc\":69,\"./encdef\":70,\"./globals\":71,\"./schema/schema\":73,\"./util\":75}],55:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar util = require('../util'),\n  setter = util.setter,\n  getter = util.getter,\n  time = require('./time');\n\nvar axis = module.exports = {};\n\naxis.def = function(name, encoding, layout, stats, opt) {\n  var isCol = name == COL,\n    isRow = name == ROW,\n    type = isCol ? 'x' : isRow ? 'y' : name;\n\n  // TODO: rename def to axisDef and avoid side effects where possible.\n\n  var def = {\n    type: type,\n    scale: name,\n    properties: {},\n    layer: encoding.encDef(name).axis.layer\n  };\n\n  var orient = axis.orient(encoding, name, stats);\n  if (orient) {\n    def.orient = orient;\n  }\n\n  // Add axis label custom scale (for bin / time)\n  def = axis.labels.scale(def, encoding, name);\n  def = axis.labels.format(def, encoding, name, stats);\n  def = axis.labels.angle(def, encoding, name);\n\n  // for x-axis, set ticks for Q or rotate scale for ordinal scale\n  if (name == X) {\n    if ((encoding.isDimension(X) || encoding.isType(X, T)) &&\n        !('angle' in getter(def, ['properties', 'labels']))) {\n      // TODO(kanitw): Jul 19, 2015 - #506 add condition for rotation\n      def = axis.labels.rotate(def);\n    } else { // Q\n      def.ticks = encoding.encDef(name).axis.ticks;\n    }\n  }\n\n  // TitleOffset depends on labels rotation\n  def.titleOffset = axis.titleOffset(encoding, layout, name);\n\n  //def.offset is used in axis.grid\n  if(isRow) def.offset = axis.titleOffset(encoding, layout, Y) + 20;\n  // FIXME(kanitw): Jul 19, 2015 - offset for column when x is put on top\n\n  def = axis.grid(def, encoding, name, layout);\n  def = axis.title(def, encoding, name, layout, opt);\n\n  if (isRow || isCol) {\n    def = axis.hideTicks(def);\n  }\n\n  return def;\n};\n\naxis.orient = function(encoding, name, stats) {\n  var orient = encoding.encDef(name).axis.orient;\n  if (orient) {\n    return orient;\n  } else if (name === COL) {\n    return 'top';\n  } else if (name === X && encoding.has(Y) && encoding.isOrdinalScale(Y) && encoding.cardinality(Y, stats) > 30) {\n    // x-axis for long y - put on top\n    return 'top';\n  }\n  return undefined;\n};\n\naxis.grid = function(def, encoding, name, layout) {\n  var cellPadding = layout.cellPadding,\n    isCol = name == COL,\n    isRow = name == ROW;\n\n  var _grid = encoding.axis(name).grid;\n\n  // If `grid` is unspecified, the default value is `true` for ROW and COL.\n  // For X and Y, the default value is `true` for (1) quantitative fields that are not binned and (2) time fields.\n  // Otherwise, the default value is `false`.\n  var grid = _grid === undefined ?\n    ( name === ROW || name === COL ||\n      (encoding.isTypes(name, [Q, T]) && !encoding.encDef(name).bin)\n    ) : _grid;\n\n  if (grid) {\n    def.grid = true;\n\n    if (isCol) {\n      // set grid property -- put the lines on the right the cell\n      var yOffset = encoding.config('cellGridOffset');\n\n      // TODO(#677): this should depend on orient\n      def.properties.grid = {\n        x: {\n          offset: layout.cellWidth * (1+ cellPadding/2.0),\n          // default value(s) -- vega doesn't do recursive merge\n          scale: 'col',\n          field: 'data'\n        },\n        y: {\n          value: -yOffset,\n        },\n        y2: {\n          field: {group: 'mark.group.height'},\n          offset: yOffset\n        },\n        stroke: { value: encoding.config('cellGridColor') },\n        strokeOpacity: { value: encoding.config('cellGridOpacity') }\n      };\n    } else if (isRow) {\n      var xOffset = encoding.config('cellGridOffset');\n\n      // TODO(#677): this should depend on orient\n      // set grid property -- put the lines on the top\n      def.properties.grid = {\n        y: {\n          offset: -layout.cellHeight * (cellPadding/2),\n          // default value(s) -- vega doesn't do recursive merge\n          scale: 'row',\n          field: 'data'\n        },\n        x: {\n          value: def.offset - xOffset\n        },\n        x2: {\n          field: {group: 'mark.group.width'},\n          offset: def.offset + xOffset,\n          // default value(s) -- vega doesn't do recursive merge\n          mult: 1\n        },\n        stroke: { value: encoding.config('cellGridColor') },\n        strokeOpacity: { value: encoding.config('cellGridOpacity') }\n      };\n    } else {\n      def.properties.grid = {\n        stroke: { value: encoding.config('gridColor') },\n        strokeOpacity: { value: encoding.config('gridOpacity') }\n      };\n    }\n  }\n  return def;\n};\n\naxis.hideTicks = function(def) {\n  def.properties.ticks = {opacity: {value: 0}};\n  def.properties.majorTicks = {opacity: {value: 0}};\n  def.properties.axis = {opacity: {value: 0}};\n  return def;\n};\n\naxis.title = function (def, encoding, name, layout) {\n  var ax = encoding.encDef(name).axis;\n\n  if (ax.title) {\n    def.title = ax.title;\n  } else {\n    // if not defined, automatically determine axis title from field def\n    var fieldTitle = encoding.fieldTitle(name),\n      maxLength;\n\n    if (ax.titleMaxLength) {\n      maxLength = ax.titleMaxLength;\n    } else if (name===X) {\n      maxLength = layout.cellWidth / encoding.config('characterWidth');\n    } else if (name === Y) {\n      maxLength = layout.cellHeight / encoding.config('characterWidth');\n    }\n\n    def.title = maxLength ? util.truncate(fieldTitle, maxLength) : fieldTitle;\n  }\n\n  if (name === ROW) {\n    def.properties.title = {\n      angle: {value: 0},\n      align: {value: 'right'},\n      baseline: {value: 'middle'},\n      dy: {value: (-layout.height/2) -20}\n    };\n  }\n\n  return def;\n};\n\naxis.labels = {};\n\n/** add custom label for time type and bin */\naxis.labels.scale = function(def, encoding, name) {\n  // time\n  var timeUnit = encoding.encDef(name).timeUnit;\n  if (encoding.isType(name, T) && timeUnit && (time.hasScale(timeUnit))) {\n    setter(def, ['properties','labels','text','scale'], 'time-'+ timeUnit);\n  }\n  // FIXME bin\n  return def;\n};\n\n/**\n * Determine number format or truncate if maxLabel length is presented.\n */\naxis.labels.format = function (def, encoding, name, stats) {\n  var fieldStats = stats[encoding.encDef(name).name];\n\n  if (encoding.axis(name).format) {\n    def.format = encoding.axis(name).format;\n  } else if (encoding.isType(name, Q) || fieldStats.type === 'number') {\n    def.format = encoding.numberFormat(fieldStats);\n  } else if (encoding.isType(name, T)) {\n    var timeUnit = encoding.encDef(name).timeUnit;\n    if (!timeUnit) {\n      def.format = encoding.config('timeFormat');\n    } else if (timeUnit === 'year') {\n      def.format = 'd';\n    }\n  } else if (encoding.isTypes(name, [N, O]) && encoding.axis(name).maxLabelLength) {\n    setter(def,\n      ['properties','labels','text','template'],\n      '{{ datum.data | truncate:' +\n      encoding.axis(name).maxLabelLength + '}}'\n    );\n  }\n\n  return def;\n};\n\naxis.labels.angle = function(def, encoding, name) {\n  var angle = encoding.axis(name).labelAngle;\n  if (typeof angle === 'undefined') return def;\n\n  setter(def, ['properties', 'labels', 'angle', 'value'], angle);\n  return def;\n};\n\naxis.labels.rotate = function(def) {\n var align = def.orient ==='top' ? 'left' : 'right';\n setter(def, ['properties','labels', 'angle', 'value'], 270);\n setter(def, ['properties','labels', 'align', 'value'], align);\n setter(def, ['properties','labels', 'baseline', 'value'], 'middle');\n return def;\n};\n\naxis.titleOffset = function (encoding, layout, name) {\n  // return specified value if specified\n  var value = encoding.axis(name).titleOffset;\n  if (value)  return value;\n\n  switch (name) {\n    //FIXME make this adjustable\n    case ROW: return 0;\n    case COL: return 35;\n  }\n  return getter(layout, [name, 'axisTitleOffset']);\n};\n\n},{\"../globals\":71,\"../util\":75,\"./time\":66}],56:[function(require,module,exports){\n'use strict';\n\nvar summary = module.exports = require('datalib/src/stats').summary;\n\nrequire('../globals');\n\n/**\n * Module for compiling Vega-lite spec into Vega spec.\n */\nvar compiler = module.exports = {};\n\nvar Encoding = require('../Encoding'),\n  axis = compiler.axis = require('./axis'),\n  legend = compiler.legend = require('./legend'),\n  marks = compiler.marks = require('./marks'),\n  scale = compiler.scale = require('./scale');\n\ncompiler.data = require('./data');\ncompiler.facet = require('./facet');\ncompiler.layout = require('./layout');\ncompiler.stack = require('./stack');\ncompiler.style = require('./style');\ncompiler.subfacet = require('./subfacet');\ncompiler.time = require('./time');\n\ncompiler.compile = function (spec, stats, theme) {\n  return compiler.compileEncoding(Encoding.fromSpec(spec, theme), stats);\n};\n\ncompiler.shorthand = function (shorthand, stats, config, theme) {\n  return compiler.compileEncoding(Encoding.fromShorthand(shorthand, config, theme), stats);\n};\n\n/**\n * Create a Vega specification from a Vega-lite Encoding object.\n */\ncompiler.compileEncoding = function (encoding, stats) {\n  // no need to pass stats if you pass in the data\n  if (!stats) {\n    if (encoding.hasValues()) {\n        stats = summary(encoding.data().values).reduce(function(s, p) {\n        s[p.field] = p;\n        return s;\n      }, {});\n    } else {\n      console.error('No stats provided and data is not embedded.');\n    }\n  }\n\n  var layout = compiler.layout(encoding, stats);\n\n  var spec = {\n      width: layout.width,\n      height: layout.height,\n      padding: 'auto',\n      data: compiler.data(encoding),\n      // global scales contains only time unit scales\n      scales: compiler.time.scales(encoding),\n      marks: [{\n        name: 'cell',\n        type: 'group',\n        properties: {\n          enter: {\n            width: layout.cellWidth ?\n                     {value: layout.cellWidth} :\n                     {field: {group: 'width'}},\n            height: layout.cellHeight ?\n                    {value: layout.cellHeight} :\n                    {field: {group: 'height'}}\n          }\n        }\n      }]\n    };\n\n  var group = spec.marks[0];\n\n  // marks\n  var style = compiler.style(encoding, stats),\n    mdefs = group.marks = marks.def(encoding, layout, style, stats),\n    mdef = mdefs[mdefs.length - 1];  // TODO: remove this dirty hack by refactoring the whole flow\n\n  var stack = encoding.stack();\n  if (stack) {\n    // modify mdef.{from,properties}\n    compiler.stack(encoding, mdef, stack);\n  }\n\n  var lineType = marks[encoding.marktype()].line;\n\n  // handle subfacets\n  var details = encoding.details();\n\n  if (details.length > 0 && lineType) {\n    //subfacet to group area / line together in one group\n    compiler.subfacet(group, mdef, details);\n  }\n\n  // auto-sort line/area values\n  if (lineType && encoding.config('autoSortLine')) {\n    var f = (encoding.isMeasure(X) && encoding.isDimension(Y)) ? Y : X;\n    if (!mdef.from) {\n      mdef.from = {};\n    }\n    // TODO: why - ?\n    mdef.from.transform = [{type: 'sort', by: '-' + encoding.fieldRef(f)}];\n  }\n\n  // get a flattened list of all scale names that are used in the vl spec\n  var singleScaleNames = [].concat.apply([], mdefs.map(function(markProps) {\n    return scale.names(markProps.properties.update);\n  }));\n\n  // Small Multiples\n  if (encoding.has(ROW) || encoding.has(COL)) {\n    spec = compiler.facet(group, encoding, layout, spec, singleScaleNames, stats);\n    spec.legends = legend.defs(encoding, style);\n  } else {\n    group.scales = scale.defs(singleScaleNames, encoding, layout, stats);\n    group.axes = [];\n    if (encoding.has(X)) {\n      group.axes.push(axis.def(X, encoding, layout, stats));\n    }\n    if (encoding.has(Y)) {\n      group.axes.push(axis.def(Y, encoding, layout, stats));\n    }\n\n    group.legends = legend.defs(encoding, style);\n  }\n\n  return spec;\n};\n\n},{\"../Encoding\":54,\"../globals\":71,\"./axis\":55,\"./data\":57,\"./facet\":58,\"./layout\":59,\"./legend\":60,\"./marks\":61,\"./scale\":62,\"./stack\":63,\"./style\":64,\"./subfacet\":65,\"./time\":66,\"datalib/src/stats\":29}],57:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nmodule.exports = data;\n\nvar vlEncDef = require('../encdef'),\n  util = require('../util'),\n  time = require('./time');\n\n/**\n * Create Vega's data array from a given encoding.\n *\n * @param  {Encoding} encoding\n * @return {Array} Array of Vega data.\n *                 This always includes a \"raw\" data table.\n *                 If the encoding contains aggregate value, this will also create\n *                 aggregate table as well.\n */\nfunction data(encoding) {\n  var def = [data.raw(encoding)];\n\n  var aggregate = data.aggregate(encoding);\n  if (aggregate) {\n    def.push(data.aggregate(encoding));\n  }\n\n  // TODO add \"having\" filter here\n\n  // append non-positive filter at the end for the data table\n  data.filterNonPositive(def[def.length - 1], encoding);\n\n  // Stack\n  var stack = encoding.stack();\n  if (stack) {\n    def.push(data.stack(encoding, stack));\n  }\n\n  return def;\n}\n\ndata.raw = function(encoding) {\n  var raw = {name: RAW};\n\n  // Data source (url or inline)\n  if (encoding.hasValues()) {\n    raw.values = encoding.data().values;\n    raw.format = {type: 'json'};\n  } else {\n    raw.url = encoding.data().url;\n    raw.format = {type: encoding.data().formatType};\n  }\n\n  // Set data's format.parse if needed\n  var parse = data.raw.formatParse(encoding);\n  if (parse) {\n    raw.format.parse = parse;\n  }\n\n  raw.transform = data.raw.transform(encoding);\n  return raw;\n};\n\ndata.raw.formatParse = function(encoding) {\n  var parse;\n\n  encoding.forEach(function(encDef) {\n    if (encDef.type == T) {\n      parse = parse || {};\n      parse[encDef.name] = 'date';\n    } else if (encDef.type == Q) {\n      if (vlEncDef.isCount(encDef)) return;\n      parse = parse || {};\n      parse[encDef.name] = 'number';\n    }\n  });\n\n  return parse;\n};\n\n/**\n * Generate Vega transforms for the raw data table.  This can include\n * transforms for time unit, binning and filtering.\n */\ndata.raw.transform = function(encoding) {\n  // null filter comes first so transforms are not performed on null values\n  // time and bin should come before filter so we can filter by time and bin\n  return data.raw.transform.nullFilter(encoding).concat(\n    data.raw.transform.formula(encoding),\n    data.raw.transform.time(encoding),\n    data.raw.transform.bin(encoding),\n    data.raw.transform.filter(encoding)\n  );\n};\n\ndata.raw.transform.time = function(encoding) {\n  return encoding.reduce(function(transform, encDef, encType) {\n    if (encDef.type === T && encDef.timeUnit) {\n      var fieldRef = encoding.fieldRef(encType, {nofn: true, datum: true});\n\n      transform.push({\n        type: 'formula',\n        field: encoding.fieldRef(encType),\n        expr: time.formula(encDef.timeUnit, fieldRef)\n      });\n    }\n    return transform;\n  }, []);\n};\n\ndata.raw.transform.bin = function(encoding) {\n  return encoding.reduce(function(transform, encDef, encType) {\n    if (encoding.bin(encType)) {\n      transform.push({\n        type: 'bin',\n        field: encDef.name,\n        output: {\n          start: encoding.fieldRef(encType, {bin_suffix: '_start'}),\n          end: encoding.fieldRef(encType, {bin_suffix: '_end'})\n        },\n        maxbins: encoding.bin(encType).maxbins\n      });\n      // temporary fix for adding missing `bin_mid` from the bin transform\n      transform.push({\n        type: 'formula',\n        field: encoding.fieldRef(encType, {bin_suffix: '_mid'}),\n        expr: '(' + encoding.fieldRef(encType, {datum:1, bin_suffix: '_start'}) + '+' + encoding.fieldRef(encType, {datum:1, bin_suffix: '_end'}) + ')/2'\n      });\n    }\n    return transform;\n  }, []);\n};\n\n/**\n * @return {Array} An array that might contain a filter transform for filtering null value based on filterNul config\n */\ndata.raw.transform.nullFilter = function(encoding) {\n  var filteredFields = util.reduce(encoding.fields(),\n    function(filteredFields, fieldList, fieldName) {\n      if (fieldName === '*') return filteredFields; //count\n\n      // TODO(#597) revise how filterNull is structured.\n      if ((encoding.config('filterNull').Q && fieldList.containsType[Q]) ||\n          (encoding.config('filterNull').T && fieldList.containsType[T]) ||\n          (encoding.config('filterNull').O && fieldList.containsType[O]) ||\n          (encoding.config('filterNull').N && fieldList.containsType[N])) {\n        filteredFields.push(fieldName);\n      }\n      return filteredFields;\n    }, []);\n\n  return filteredFields.length > 0 ?\n    [{\n      type: 'filter',\n      test: filteredFields.map(function(fieldName) {\n        return 'datum.' + fieldName + '!==null';\n      }).join(' && ')\n    }] : [];\n};\n\ndata.raw.transform.filter = function(encoding) {\n  var filter = encoding.data().filter;\n  return filter ? [{\n      type: 'filter',\n      test: filter\n  }] : [];\n};\n\ndata.raw.transform.formula = function(encoding) {\n  var formulas = encoding.data().formulas;\n  if (formulas === undefined) {\n    return [];\n  }\n\n  return formulas.reduce(function(transform, formula) {\n    formula.type = 'formula';\n    transform.push(formula);\n    return transform;\n  }, []);\n};\n\ndata.aggregate = function(encoding) {\n  /* dict set for dimensions */\n  var dims = {};\n\n  /* dictionary mapping field name => dict set of aggregation functions */\n  var meas = {};\n\n  var hasAggregate = false;\n\n  encoding.forEach(function(encDef, encType) {\n    if (encDef.aggregate) {\n      hasAggregate = true;\n      if (encDef.aggregate === 'count') {\n        meas['*'] = meas['*'] || {};\n        meas['*'].count = true;\n      } else {\n        meas[encDef.name] = meas[encDef.name] || {};\n        meas[encDef.name][encDef.aggregate] = true;\n      }\n    } else {\n      if (encDef.bin) {\n        // TODO(#694) only add dimension for the required ones.\n        dims[encoding.fieldRef(encType, {bin_suffix: '_start'})] = encoding.fieldRef(encType, {bin_suffix: '_start'});\n        dims[encoding.fieldRef(encType, {bin_suffix: '_mid'})] = encoding.fieldRef(encType, {bin_suffix: '_mid'});\n        dims[encoding.fieldRef(encType, {bin_suffix: '_end'})] = encoding.fieldRef(encType, {bin_suffix: '_end'});\n      } else {\n        dims[encDef.name] = encoding.fieldRef(encType);\n      }\n\n    }\n  });\n\n  var groupby = util.vals(dims);\n\n  // short-format summarize object for Vega's aggregate transform\n  // https://github.com/vega/vega/wiki/Data-Transforms#-aggregate\n  var summarize = util.reduce(meas, function(summarize, fnDictSet, field) {\n    summarize[field] = util.keys(fnDictSet);\n    return summarize;\n  }, {});\n\n  if (hasAggregate) {\n    return {\n      name: AGGREGATE,\n      source: RAW,\n      transform: [{\n        type: 'aggregate',\n        groupby: groupby,\n        summarize: summarize\n      }]\n    };\n  }\n\n  return null;\n};\n\n/**\n * Add stacked data source, for feeding the shared scale.\n */\ndata.stack = function(encoding, stack) {\n  var dim = stack.groupby;\n  var val = stack.value;\n  var facets = encoding.facets();\n\n  var stacked = {\n    name: STACKED,\n    source: encoding.dataTable(),\n    transform: [{\n      type: 'aggregate',\n      groupby: [encoding.fieldRef(dim)].concat(facets), // dim and other facets\n      summarize: [{ops: ['sum'], field: encoding.fieldRef(val)}]\n    }]\n  };\n\n  if (facets && facets.length > 0) {\n    stacked.transform.push({ //calculate max for each facet\n      type: 'aggregate',\n      groupby: facets,\n      summarize: [{\n        ops: ['max'],\n        // we want max of sum from above transform\n        field: encoding.fieldRef(val, {prefn: 'sum_'})\n      }]\n    });\n  }\n  return stacked;\n};\n\ndata.filterNonPositive = function(dataTable, encoding) {\n  encoding.forEach(function(encDef, encType) {\n    if (encoding.scale(encType).type === 'log') {\n      dataTable.transform.push({\n        type: 'filter',\n        test: encoding.fieldRef(encType, {datum: 1}) + ' > 0'\n      });\n    }\n  });\n};\n\n},{\"../encdef\":70,\"../globals\":71,\"../util\":75,\"./time\":66}],58:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar util = require('../util');\n\nvar axis = require('./axis'),\n  scale = require('./scale');\n\nmodule.exports = faceting;\n\nfunction groupdef(name, opt) {\n  opt = opt || {};\n  var group = {\n    name: name || undefined,\n    type: 'group',\n    properties: {\n      enter: {\n        width: opt.width || {field: {group: 'width'}},\n        height: opt.height || {field: {group: 'height'}}\n      }\n    }\n  };\n\n  if (opt.from) {\n    group.from = opt.from;\n  }\n  if (opt.x) {\n    group.properties.enter.x = opt.x;\n  }\n  if (opt.y) {\n    group.properties.enter.y = opt.y;\n  }\n  if (opt.axes) {\n    group.axes = opt.axes;\n  }\n\n  return group;\n}\n\nfunction faceting(group, encoding, layout, spec, singleScaleNames, stats) {\n  var enter = group.properties.enter;\n  var facetKeys = [], cellAxes = [], from, axesGrp;\n\n  var hasRow = encoding.has(ROW), hasCol = encoding.has(COL);\n\n  enter.fill = {value: encoding.config('cellBackgroundColor')};\n\n  //move \"from\" to cell level and add facet transform\n  group.from = {data: group.marks[0].from.data};\n\n  // Hack, this needs to be refactored\n  for (var i = 0; i < group.marks.length; i++) {\n    var mark = group.marks[i];\n    if (mark.from.transform) {\n      delete mark.from.data; //need to keep transform for subfacetting case\n    } else {\n      delete mark.from;\n    }\n  }\n\n  if (hasRow) {\n    if (!encoding.isDimension(ROW)) {\n      util.error('Row encoding should be ordinal.');\n    }\n    enter.y = {scale: ROW, field: encoding.fieldRef(ROW)};\n    enter.height = {'value': layout.cellHeight}; // HACK\n\n    facetKeys.push(encoding.fieldRef(ROW));\n\n    if (hasCol) {\n      from = util.duplicate(group.from);\n      from.transform = from.transform || [];\n      from.transform.unshift({type: 'facet', groupby: [encoding.fieldRef(COL)]});\n    }\n\n    axesGrp = groupdef('x-axes', {\n        axes: encoding.has(X) ? [axis.def(X, encoding, layout, stats)] : undefined,\n        x: hasCol ? {scale: COL, field: encoding.fieldRef(COL)} : {value: 0},\n        width: hasCol && {'value': layout.cellWidth}, //HACK?\n        from: from\n      });\n\n    spec.marks.unshift(axesGrp); // need to prepend so it appears under the plots\n    (spec.axes = spec.axes || []);\n    spec.axes.push(axis.def(ROW, encoding, layout, stats));\n  } else { // doesn't have row\n    if (encoding.has(X)) {\n      //keep x axis in the cell\n      cellAxes.push(axis.def(X, encoding, layout, stats));\n    }\n  }\n\n  if (hasCol) {\n    if (!encoding.isDimension(COL)) {\n      util.error('Col encoding should be ordinal.');\n    }\n    enter.x = {scale: COL, field: encoding.fieldRef(COL)};\n    enter.width = {'value': layout.cellWidth}; // HACK\n\n    facetKeys.push(encoding.fieldRef(COL));\n\n    if (hasRow) {\n      from = util.duplicate(group.from);\n      from.transform = from.transform || [];\n      from.transform.unshift({type: 'facet', groupby: [encoding.fieldRef(ROW)]});\n    }\n\n    axesGrp = groupdef('y-axes', {\n      axes: encoding.has(Y) ? [axis.def(Y, encoding, layout, stats)] : undefined,\n      y: hasRow && {scale: ROW, field: encoding.fieldRef(ROW)},\n      x: hasRow && {value: 0},\n      height: hasRow && {'value': layout.cellHeight}, //HACK?\n      from: from\n    });\n\n    spec.marks.unshift(axesGrp); // need to prepend so it appears under the plots\n    (spec.axes = spec.axes || []);\n    spec.axes.push(axis.def(COL, encoding, layout, stats));\n  } else { // doesn't have col\n    if (encoding.has(Y)) {\n      cellAxes.push(axis.def(Y, encoding, layout, stats));\n    }\n  }\n\n  // assuming equal cellWidth here\n  // TODO: support heterogenous cellWidth (maybe by using multiple scales?)\n  spec.scales = (spec.scales || []).concat(scale.defs(\n    scale.names(enter).concat(singleScaleNames),\n    encoding,\n    layout,\n    stats,\n    true\n  )); // row/col scales + cell scales\n\n  if (cellAxes.length > 0) {\n    group.axes = cellAxes;\n  }\n\n  // add facet transform\n  var trans = (group.from.transform || (group.from.transform = []));\n  trans.unshift({type: 'facet', groupby: facetKeys});\n\n  return spec;\n}\n\n},{\"../globals\":71,\"../util\":75,\"./axis\":55,\"./scale\":62}],59:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar util = require('../util'),\n  setter = util.setter,\n  time = require('./time'),\n  d3_format = require('d3-format');\n\nmodule.exports = vllayout;\n\nfunction vllayout(encoding, stats) {\n  var layout = box(encoding, stats);\n  layout = offset(encoding, stats, layout);\n  return layout;\n}\n\n/*\n  HACK to set chart size\n  NOTE: this fails for plots driven by derived values (e.g., aggregates)\n  One solution is to update Vega to support auto-sizing\n  In the meantime, auto-padding (mostly) does the trick\n */\nfunction box(encoding, stats) {\n  var hasRow = encoding.has(ROW),\n      hasCol = encoding.has(COL),\n      hasX = encoding.has(X),\n      hasY = encoding.has(Y),\n      marktype = encoding.marktype();\n\n  // FIXME/HACK we need to take filter into account\n  var xCardinality = hasX && encoding.isDimension(X) ? encoding.cardinality(X, stats) : 1,\n    yCardinality = hasY && encoding.isDimension(Y) ? encoding.cardinality(Y, stats) : 1;\n\n  var useSmallBand = xCardinality > encoding.config('largeBandMaxCardinality') ||\n    yCardinality > encoding.config('largeBandMaxCardinality');\n\n  var cellWidth, cellHeight, cellPadding = encoding.config('cellPadding');\n\n  // set cellWidth\n  if (hasX) {\n    if (encoding.isOrdinalScale(X)) {\n      // for ordinal, hasCol or not doesn't matter -- we scale based on cardinality\n      cellWidth = (xCardinality + encoding.encDef(X).band.padding) * encoding.bandSize(X, useSmallBand);\n    } else {\n      cellWidth = hasCol || hasRow ? encoding.encDef(COL).width :  encoding.config('singleWidth');\n    }\n  } else {\n    if (marktype === TEXT) {\n      cellWidth = encoding.config('textCellWidth');\n    } else {\n      cellWidth = encoding.bandSize(X);\n    }\n  }\n\n  // set cellHeight\n  if (hasY) {\n    if (encoding.isOrdinalScale(Y)) {\n      // for ordinal, hasCol or not doesn't matter -- we scale based on cardinality\n      cellHeight = (yCardinality + encoding.encDef(Y).band.padding) * encoding.bandSize(Y, useSmallBand);\n    } else {\n      cellHeight = hasCol || hasRow ? encoding.encDef(ROW).height :  encoding.config('singleHeight');\n    }\n  } else {\n    cellHeight = encoding.bandSize(Y);\n  }\n\n  // Cell bands use rangeBands(). There are n-1 padding.  Outerpadding = 0 for cells\n\n  var width = cellWidth, height = cellHeight;\n  if (hasCol) {\n    var colCardinality = encoding.cardinality(COL, stats);\n    width = cellWidth * ((1 + cellPadding) * (colCardinality - 1) + 1);\n  }\n  if (hasRow) {\n    var rowCardinality =  encoding.cardinality(ROW, stats);\n    height = cellHeight * ((1 + cellPadding) * (rowCardinality - 1) + 1);\n  }\n\n  return {\n    // width and height of the whole cell\n    cellWidth: cellWidth,\n    cellHeight: cellHeight,\n    cellPadding: cellPadding,\n    // width and height of the chart\n    width: width,\n    height: height,\n    // information about x and y, such as band size\n    x: {useSmallBand: useSmallBand},\n    y: {useSmallBand: useSmallBand}\n  };\n}\n\n\n// FIXME fieldStats.max isn't always the longest\nfunction getMaxNumberLength(encoding, et, fieldStats) {\n  var format = encoding.numberFormat(et, fieldStats);\n\n  return d3_format.format(format)(fieldStats.max).length;\n}\n\n// TODO(#600) revise this\nfunction getMaxLength(encoding, stats, et) {\n  var encDef = encoding.encDef(et),\n    fieldStats = stats[encDef.name];\n\n  if (encDef.bin) {\n    // TODO once bin support range, need to update this\n    return getMaxNumberLength(encoding, et, fieldStats);\n  } if (encoding.isType(et, Q)) {\n    return getMaxNumberLength(encoding, et, fieldStats);\n  } else if (encoding.isType(et, T)) {\n    return time.maxLength(encoding.encDef(et).timeUnit, encoding);\n  } else if (encoding.isTypes(et, [N, O])) {\n    if(fieldStats.type === 'number') {\n      return getMaxNumberLength(encoding, et, fieldStats);\n    } else {\n      return Math.min(fieldStats.max, encoding.axis(et).maxLabelLength || Infinity);\n    }\n  }\n}\n\nfunction offset(encoding, stats, layout) {\n  [X, Y].forEach(function (et) {\n    // TODO(kanitw): Jul 19, 2015 - create a set of visual test for extraOffset\n    var extraOffset = et === X ? 20 : 22,\n      maxLength;\n    if (encoding.isDimension(et) || encoding.isType(et, T)) {\n      maxLength = getMaxLength(encoding, stats, et);\n    } else if (\n      // TODO once we have #512 (allow using inferred type)\n      // Need to adjust condition here.\n      encoding.isType(et, Q) ||\n      encoding.encDef(et).aggregate === 'count'\n    ) {\n      if (\n        et===Y\n        // || (et===X && false)\n        // FIXME determine when X would rotate, but should move this to axis.js first #506\n      ) {\n        maxLength = getMaxLength(encoding, stats, et);\n      }\n    } else {\n      // nothing\n    }\n\n    if (maxLength) {\n      setter(layout,[et, 'axisTitleOffset'], encoding.config('characterWidth') *  maxLength + extraOffset);\n    } else {\n      // if no max length (no rotation case), use maxLength = 3\n      setter(layout,[et, 'axisTitleOffset'], encoding.config('characterWidth') * 3 + extraOffset);\n    }\n\n  });\n  return layout;\n}\n\n},{\"../globals\":71,\"../util\":75,\"./time\":66,\"d3-format\":5}],60:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar time = require('./time'),\n  util = require('../util'),\n  setter = util.setter,\n  getter = util.getter;\n\nvar legend = module.exports = {};\n\nlegend.defs = function(encoding, style) {\n  var defs = [];\n\n  if (encoding.has(COLOR) && encoding.encDef(COLOR).legend) {\n    defs.push(legend.def(COLOR, encoding, {\n      fill: COLOR\n    }, style));\n  }\n\n  if (encoding.has(SIZE) && encoding.encDef(SIZE).legend) {\n    defs.push(legend.def(SIZE, encoding, {\n      size: SIZE\n    }, style));\n  }\n\n  if (encoding.has(SHAPE) && encoding.encDef(SHAPE).legend) {\n    defs.push(legend.def(SHAPE, encoding, {\n      shape: SHAPE\n    }, style));\n  }\n  return defs;\n};\n\nlegend.def = function(name, encoding, def, style) {\n  var timeUnit = encoding.encDef(name).timeUnit;\n\n  def.title = legend.title(name, encoding);\n  def.orient = encoding.encDef(name).legend.orient;\n\n  def = legend.style(name, encoding, def, style);\n\n  if (encoding.isType(name, T) &&\n    timeUnit &&\n    time.hasScale(timeUnit)\n  ) {\n    setter(def, ['properties', 'labels', 'text', 'scale'], 'time-'+ timeUnit);\n  }\n\n  return def;\n};\n\nlegend.style = function(name, e, def, style) {\n  var symbols = getter(def, ['properties', 'symbols']),\n    marktype = e.marktype();\n\n  switch (marktype) {\n    case 'bar':\n    case 'tick':\n    case 'text':\n      symbols.stroke = {value: 'transparent'};\n      symbols.shape = {value: 'square'};\n      break;\n\n    case 'circle':\n    case 'square':\n      symbols.shape = {value: marktype};\n      /* fall through */\n    case 'point':\n      // fill or stroke\n      if (e.encDef(SHAPE).filled) {\n        if (e.has(COLOR) && name === COLOR) {\n          symbols.fill = {scale: COLOR, field: 'data'};\n        } else {\n          symbols.fill = {value: e.value(COLOR)};\n        }\n        symbols.stroke = {value: 'transparent'};\n      } else {\n        if (e.has(COLOR) && name === COLOR) {\n          symbols.stroke = {scale: COLOR, field: 'data'};\n        } else {\n          symbols.stroke = {value: e.value(COLOR)};\n        }\n        symbols.fill = {value: 'transparent'};\n        symbols.strokeWidth = {value: e.config('strokeWidth')};\n      }\n\n      break;\n    case 'line':\n    case 'area':\n      // TODO use shape here after implementing #508\n      break;\n  }\n\n  var opacity = e.encDef(COLOR).opacity || style.opacity;\n  if (opacity) {\n    symbols.opacity = {value: opacity};\n  }\n  return def;\n};\n\nlegend.title = function(name, encoding) {\n  var leg = encoding.encDef(name).legend;\n\n  if (leg.title) return leg.title;\n\n  return encoding.fieldTitle(name);\n};\n\n},{\"../globals\":71,\"../util\":75,\"./time\":66}],61:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar marks = module.exports = {};\n\nmarks.def = function(encoding, layout, style, stats) {\n\n  var defs = [],\n    mark = marks[encoding.marktype()],\n    from = encoding.dataTable();\n\n  // to add a background to text, we need to add it before the text\n  if (encoding.marktype() === TEXT && encoding.has(COLOR)) {\n    var bg = {\n      x: {value: 0},\n      y: {value: 0},\n      x2: {value: layout.cellWidth},\n      y2: {value: layout.cellHeight},\n      fill: {scale: COLOR, field: encoding.fieldRef(COLOR)}\n    };\n    defs.push({\n      type: 'rect',\n      from: {data: from},\n      properties: {enter: bg, update: bg}\n    });\n  }\n\n  // add the mark def for the main thing\n  var p = mark.prop(encoding, layout, style, stats);\n  defs.push({\n    type: mark.type,\n    from: {data: from},\n    properties: {enter: p, update: p}\n  });\n\n  return defs;\n};\n\nmarks.bar = {\n  type: 'rect',\n  prop: bar_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, size: 1, color: 1}\n};\n\nmarks.line = {\n  type: 'line',\n  line: true,\n  prop: line_props,\n  requiredEncoding: ['x', 'y'],\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, color: 1, detail:1}\n};\n\nmarks.area = {\n  type: 'area',\n  line: true,\n  requiredEncoding: ['x', 'y'],\n  prop: area_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, color: 1}\n};\n\nmarks.tick = {\n  type: 'rect',\n  prop: tick_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, color: 1, detail: 1}\n};\n\nmarks.circle = {\n  type: 'symbol',\n  prop: filled_point_props('circle'),\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, size: 1, color: 1, detail: 1}\n};\n\nmarks.square = {\n  type: 'symbol',\n  prop: filled_point_props('square'),\n  supportedEncoding: marks.circle.supportedEncoding\n};\n\nmarks.point = {\n  type: 'symbol',\n  prop: point_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, size: 1, color: 1, shape: 1, detail: 1}\n};\n\nmarks.text = {\n  type: 'text',\n  prop: text_props,\n  requiredEncoding: ['text'],\n  supportedEncoding: {row: 1, col: 1, size: 1, color: 1, text: 1}\n};\n\nfunction bar_props(e, layout, style) {\n  // jshint unused:false\n\n  var p = {};\n\n  // x's and width\n  if (e.encDef(X).bin) {\n    p.x = {scale: X, field: e.fieldRef(X, {bin_suffix: '_start'}), offset: 1};\n    p.x2 = {scale: X, field: e.fieldRef(X, {bin_suffix: '_end'})};\n  } else if (e.isMeasure(X)) {\n    p.x = {scale: X, field: e.fieldRef(X)};\n    if (!e.has(Y) || e.isDimension(Y)) {\n      p.x2 = {value: 0};\n    }\n  } else {\n    if (e.has(X)) { // is ordinal\n       p.xc = {scale: X, field: e.fieldRef(X)};\n    } else {\n       p.x = {value: 0, offset: e.config('singleBarOffset')};\n    }\n  }\n\n  // width\n  if (!p.x2) {\n    if (!e.has(X) || e.isOrdinalScale(X)) { // no X or X is ordinal\n      if (e.has(SIZE)) {\n        p.width = {scale: SIZE, field: e.fieldRef(SIZE)};\n      } else {\n        p.width = {\n          value: e.bandSize(X, layout.x.useSmallBand),\n          offset: -1\n        };\n      }\n    } else { // X is Quant or Time Scale\n      p.width = {value: 2};\n    }\n  }\n\n  // y's & height\n  if (e.encDef(Y).bin) {\n    p.y = {scale: Y, field: e.fieldRef(Y, {bin_suffix: '_start'})};\n    p.y2 = {scale: Y, field: e.fieldRef(Y, {bin_suffix: '_end'}), offset: 1};\n  } else if (e.isMeasure(Y)) {\n    p.y = {scale: Y, field: e.fieldRef(Y)};\n    p.y2 = {field: {group: 'height'}};\n  } else {\n    if (e.has(Y)) { // is ordinal\n      p.yc = {scale: Y, field: e.fieldRef(Y)};\n    } else {\n      p.y2 = {\n        field: {group: 'height'},\n        offset: -e.config('singleBarOffset')\n      };\n    }\n\n    if (e.has(SIZE)) {\n      p.height = {scale: SIZE, field: e.fieldRef(SIZE)};\n    } else {\n      p.height = {\n        value: e.bandSize(Y, layout.y.useSmallBand),\n        offset: -1\n      };\n    }\n  }\n\n  // fill\n  if (e.has(COLOR)) {\n    p.fill = {scale: COLOR, field: e.fieldRef(COLOR)};\n  } else {\n    p.fill = {value: e.value(COLOR)};\n  }\n\n  // opacity\n  var opacity = e.encDef(COLOR).opacity;\n  if (opacity) p.opacity = {value: opacity};\n\n  return p;\n}\n\nfunction point_props(e, layout, style) {\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.fieldRef(X, {bin_suffix: '_mid'})};\n  } else if (!e.has(X)) {\n    p.x = {value: e.bandSize(X, layout.x.useSmallBand) / 2};\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.fieldRef(Y, {bin_suffix: '_mid'})};\n  } else if (!e.has(Y)) {\n    p.y = {value: e.bandSize(Y, layout.y.useSmallBand) / 2};\n  }\n\n  // size\n  if (e.has(SIZE)) {\n    p.size = {scale: SIZE, field: e.fieldRef(SIZE)};\n  } else if (!e.has(SIZE)) {\n    p.size = {value: e.value(SIZE)};\n  }\n\n  // shape\n  if (e.has(SHAPE)) {\n    p.shape = {scale: SHAPE, field: e.fieldRef(SHAPE)};\n  } else if (!e.has(SHAPE)) {\n    p.shape = {value: e.value(SHAPE)};\n  }\n\n  // fill or stroke\n  if (e.encDef(SHAPE).filled) {\n    if (e.has(COLOR)) {\n      p.fill = {scale: COLOR, field: e.fieldRef(COLOR)};\n    } else if (!e.has(COLOR)) {\n      p.fill = {value: e.value(COLOR)};\n    }\n  } else {\n    if (e.has(COLOR)) {\n      p.stroke = {scale: COLOR, field: e.fieldRef(COLOR)};\n    } else if (!e.has(COLOR)) {\n      p.stroke = {value: e.value(COLOR)};\n    }\n    p.strokeWidth = {value: e.config('strokeWidth')};\n  }\n\n  // opacity\n  var opacity = e.encDef(COLOR).opacity || style.opacity;\n  if (opacity) p.opacity = {value: opacity};\n\n  return p;\n}\n\nfunction line_props(e,layout, style) {\n  // jshint unused:false\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.fieldRef(X, {bin_suffix: '_mid'})};\n  } else if (!e.has(X)) {\n    p.x = {value: 0};\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.fieldRef(Y, {bin_suffix: '_mid'})};\n  } else if (!e.has(Y)) {\n    p.y = {field: {group: 'height'}};\n  }\n\n  // stroke\n  if (e.has(COLOR)) {\n    p.stroke = {scale: COLOR, field: e.fieldRef(COLOR)};\n  } else if (!e.has(COLOR)) {\n    p.stroke = {value: e.value(COLOR)};\n  }\n\n  var opacity = e.encDef(COLOR).opacity;\n  if (opacity) p.opacity = {value: opacity};\n\n  p.strokeWidth = {value: e.config('strokeWidth')};\n\n  return p;\n}\n\n// TODO(#694): optimize area's usage with bin\nfunction area_props(e, layout, style) {\n  // jshint unused:false\n  var p = {};\n\n  // x\n  if (e.isMeasure(X)) {\n    p.x = {scale: X, field: e.fieldRef(X)};\n    if (e.isDimension(Y)) {\n      p.x2 = {scale: X, value: 0};\n      p.orient = {value: 'horizontal'};\n    }\n  } else if (e.has(X)) {\n    p.x = {scale: X, field: e.fieldRef(X, {bin_suffix: '_mid'})};\n  } else {\n    p.x = {value: 0};\n  }\n\n  // y\n  if (e.isMeasure(Y)) {\n    p.y = {scale: Y, field: e.fieldRef(Y)};\n    p.y2 = {scale: Y, value: 0};\n  } else if (e.has(Y)) {\n    p.y = {scale: Y, field: e.fieldRef(Y, {bin_suffix: '_mid'})};\n  } else {\n    p.y = {field: {group: 'height'}};\n  }\n\n  // fill\n  if (e.has(COLOR)) {\n    p.fill = {scale: COLOR, field: e.fieldRef(COLOR)};\n  } else if (!e.has(COLOR)) {\n    p.fill = {value: e.value(COLOR)};\n  }\n\n  var opacity = e.encDef(COLOR).opacity;\n  if (opacity) p.opacity = {value: opacity};\n\n  return p;\n}\n\nfunction tick_props(e, layout, style) {\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.fieldRef(X, {bin_suffix: '_mid'})};\n    if (e.isDimension(X)) {\n      p.x.offset = -e.bandSize(X, layout.x.useSmallBand) / 3;\n    }\n  } else if (!e.has(X)) {\n    p.x = {value: 0};\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.fieldRef(Y, {bin_suffix: '_mid'})};\n    if (e.isDimension(Y)) {\n      p.y.offset = -e.bandSize(Y, layout.y.useSmallBand) / 3;\n    }\n  } else if (!e.has(Y)) {\n    p.y = {value: 0};\n  }\n\n  // width\n  if (!e.has(X) || e.isDimension(X)) {\n    // TODO(#694): optimize tick's width for bin\n    p.width = {value: e.bandSize(X, layout.y.useSmallBand) / 1.5};\n  } else {\n    p.width = {value: 1};\n  }\n\n  // height\n  if (!e.has(Y) || e.isDimension(Y)) {\n    // TODO(#694): optimize tick's height for bin\n    p.height = {value: e.bandSize(Y, layout.y.useSmallBand) / 1.5};\n  } else {\n    p.height = {value: 1};\n  }\n\n  // fill\n  if (e.has(COLOR)) {\n    p.fill = {scale: COLOR, field: e.fieldRef(COLOR)};\n  } else {\n    p.fill = {value: e.value(COLOR)};\n  }\n\n  var opacity = e.encDef(COLOR).opacity  || style.opacity;\n  if(opacity) p.opacity = {value: opacity};\n\n  return p;\n}\n\nfunction filled_point_props(shape) {\n  return function(e, layout, style) {\n    var p = {};\n\n    // x\n    if (e.has(X)) {\n      p.x = {scale: X, field: e.fieldRef(X, {bin_suffix: '_mid'})};\n    } else if (!e.has(X)) {\n      p.x = {value: e.bandSize(X, layout.x.useSmallBand) / 2};\n    }\n\n    // y\n    if (e.has(Y)) {\n      p.y = {scale: Y, field: e.fieldRef(Y, {bin_suffix: '_mid'})};\n    } else if (!e.has(Y)) {\n      p.y = {value: e.bandSize(Y, layout.y.useSmallBand) / 2};\n    }\n\n    // size\n    if (e.has(SIZE)) {\n      p.size = {scale: SIZE, field: e.fieldRef(SIZE)};\n    } else if (!e.has(X)) {\n      p.size = {value: e.value(SIZE)};\n    }\n\n    // shape\n    p.shape = {value: shape};\n\n    // fill\n    if (e.has(COLOR)) {\n      p.fill = {scale: COLOR, field: e.fieldRef(COLOR)};\n    } else if (!e.has(COLOR)) {\n      p.fill = {value: e.value(COLOR)};\n    }\n\n    var opacity = e.encDef(COLOR).opacity  || style.opacity;\n    if(opacity) p.opacity = {value: opacity};\n\n    return p;\n  };\n}\n\nfunction text_props(e, layout, style, stats) {\n  var p = {},\n    encDef = e.encDef(TEXT);\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.fieldRef(X, {bin_suffix: '_mid'})};\n  } else if (!e.has(X)) {\n    if (e.has(TEXT) && e.isType(TEXT, Q)) {\n      p.x = {value: layout.cellWidth-5};\n    } else {\n      p.x = {value: e.bandSize(X, layout.x.useSmallBand) / 2};\n    }\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.fieldRef(Y, {bin_suffix: '_mid'})};\n  } else if (!e.has(Y)) {\n    p.y = {value: e.bandSize(Y, layout.y.useSmallBand) / 2};\n  }\n\n  // size\n  if (e.has(SIZE)) {\n    p.fontSize = {scale: SIZE, field: e.fieldRef(SIZE)};\n  } else if (!e.has(SIZE)) {\n    p.fontSize = {value: encDef.font.size};\n  }\n\n  // fill\n  // color should be set to background\n  p.fill = {value: encDef.color};\n\n  var opacity = e.encDef(COLOR).opacity  || style.opacity;\n  if(opacity) p.opacity = {value: opacity};\n\n  // text\n  if (e.has(TEXT)) {\n    if (e.isType(TEXT, Q)) {\n      var fieldStats = stats[e.encDef(TEXT).name],\n        numberFormat = encDef.format || e.numberFormat(fieldStats);\n\n      p.text = {template: '{{' + e.fieldRef(TEXT, {datum: true}) + ' | number:\\'' +\n        numberFormat +'\\'}}'};\n      p.align = {value: encDef.align};\n    } else {\n      p.text = {field: e.fieldRef(TEXT)};\n    }\n  } else {\n    p.text = {value: encDef.placeholder};\n  }\n\n  p.font = {value: encDef.font.family};\n  p.fontWeight = {value: encDef.font.weight};\n  p.fontStyle = {value: encDef.font.style};\n  p.baseline = {value: encDef.baseline};\n\n  return p;\n}\n\n},{\"../globals\":71}],62:[function(require,module,exports){\n'use strict';\nrequire('../globals');\nvar util = require('../util'),\n  time = require('./time'),\n  colorbrewer = require('colorbrewer'),\n  interpolate = require('d3-color').interpolateHsl;\n\nvar scale = module.exports = {};\n\nscale.names = function(props) {\n  return util.keys(util.keys(props).reduce(function(a, x) {\n    if (props[x] && props[x].scale) a[props[x].scale] = 1;\n    return a;\n  }, {}));\n};\n\nscale.defs = function(names, encoding, layout, stats, facet) {\n  return names.reduce(function(a, name) {\n    var scaleDef = {};\n\n    scaleDef.name = name;\n    scaleDef.type = scale.type(name, encoding);\n    scaleDef.domain = scale.domain(encoding, name, scaleDef.type, facet);\n\n    // Add optional properties\n    var reverse = scale.reverse(encoding, name);\n    if (reverse) {\n      scaleDef.reverse = reverse;\n    }\n\n    var zero = scale.zero(encoding, name);\n    if (zero !== undefined) {\n      scaleDef.zero = zero;\n    }\n\n    // TODO split scale.range into methods for each properties\n    scaleDef = scale.range(scaleDef, encoding, layout, stats);\n\n    return (a.push(scaleDef), a);\n  }, []);\n};\n\nscale.type = function(name, encoding) {\n  switch (encoding.type(name)) {\n    case N: //fall through\n    case O: return 'ordinal';\n    case T:\n      var timeUnit = encoding.encDef(name).timeUnit;\n      return timeUnit ? time.scale.type(timeUnit, name) : 'time';\n    case Q:\n      if (encoding.bin(name)) {\n        return 'linear';\n      }\n      return encoding.scale(name).type;\n  }\n};\n\nscale.domain = function (encoding, name, type, facet) {\n  var encDef = encoding.encDef(name);\n\n  // special case for temporal scale\n  if (encoding.isType(name, T)) {\n    var range = time.scale.domain(encDef.timeUnit, name);\n    if (range) return range;\n  }\n\n  // For stack, use STACKED data.\n  var stack = encoding.stack();\n  if (stack && name === stack.value) {\n    return {\n      data: STACKED,\n      field: encoding.fieldRef(name, {\n        // If faceted, scale is determined by the max of sum in each facet.\n        prefn: (facet ? 'max_' : '') + 'sum_'\n      })\n    };\n  }\n\n  var useRawDomain = scale._useRawDomain(encoding, name);\n  var sort = scale.sort(encoding, name, type);\n\n  if (useRawDomain) { // useRawDomain - only Q/T\n    return {\n      data: RAW,\n      field: encoding.fieldRef(name, {noAggregate:true})\n    };\n  } else if (encDef.bin) { // bin -- need to merge both bin_start and bin_end\n    return {\n      data: encoding.dataTable(),\n      field: [\n        encoding.fieldRef(name, {bin_suffix:'_start'}),\n        encoding.fieldRef(name, {bin_suffix:'_end'})\n      ]\n    };\n  } else if (sort) { // have sort -- only for ordinal\n    return {\n      // If sort by aggregation of a specified sort field, we need to use RAW table,\n      // so we can aggregate values for the scale independently from the main aggregation.\n      data: sort.op ? RAW : encoding.dataTable(),\n      field: encoding.fieldRef(name),\n      sort: sort\n    };\n  } else {\n    return {\n      data: encoding.dataTable(),\n      field: encoding.fieldRef(name)\n    };\n  }\n};\n\nscale.sort = function(encoding, name, type) {\n  var sort = encoding.encDef(name).sort;\n  if (sort === 'ascending' || sort === 'descending') {\n    return true;\n  }\n\n  // Sorted based on an aggregate calculation over a specified sort field (only for ordinal scale)\n  if (type === 'ordinal' && util.isObject(sort)) {\n    return {\n      op: sort.op,\n      field: sort.field\n    };\n  }\n  return undefined;\n};\n\nscale.reverse = function(encoding, name) {\n  var sort = encoding.encDef(name).sort;\n  return sort && (sort === 'descending' || (sort.order === 'descending'));\n};\n\n/**\n * Determine if useRawDomain should be activated for this scale.\n * @return {Boolean} Returns true if all of the following conditons applies:\n * 1. `useRawDomain` is enabled either through scale or config\n * 2. Aggregation function is not `count` or `sum`\n * 3. The scale is quantitative or time scale.\n */\nscale._useRawDomain = function (encoding, name) {\n  var encDef = encoding.encDef(name);\n\n  // scale value\n  var scaleUseRawDomain = encoding.scale(name).useRawDomain;\n\n  // Determine if useRawDomain is enabled. If scale value is specified, use scale value.\n  // Otherwise, use config value.\n  var useRawDomainEnabled = scaleUseRawDomain !== undefined ?\n      scaleUseRawDomain : encoding.config('useRawDomain');\n\n  var notCountOrSum = !encDef.aggregate ||\n    (encDef.aggregate !=='count' && encDef.aggregate !== 'sum');\n\n  return  useRawDomainEnabled &&\n    notCountOrSum && (\n      // Q always uses quantitative scale except when it's binned and thus uses ordinal scale.\n      (\n        encoding.isType(name, Q) &&\n        !encDef.bin // TODO(#614): this must be changed once bin is reimplemented\n      ) ||\n      // TODO: revise this\n      // T uses non-ordinal scale when there's no unit or when the unit is not ordinal.\n      (\n        encoding.isType(name, T) &&\n        (!encDef.timeUnit || !time.isOrdinalFn(encDef.timeUnit))\n      )\n    );\n};\n\n// FIXME revise if we should produce undefined for shorter spec (and just use vega's default value.)\n// However, let's ignore it for now as it is unclear what is Vega's default value.\nscale.zero = function(encoding, name) {\n  var spec = encoding.scale(name);\n  var encDef = encoding.encDef(name);\n  var timeUnit = encDef.timeUnit;\n\n  if (spec.zero) {\n    return spec.zero; // return explicit value if defined\n  }\n\n  if (encoding.isType(name, T) && (!timeUnit || timeUnit === 'year')) { // FIXME revise this\n    // Returns false (undefined)  by default for time scale\n    return false;\n  }\n  if (encDef.bin) {\n    // Returns false (undefined) by default of bin\n    return false;\n  }\n  // if not bin / temporal, returns true by default\n  return name === X || name === Y || name === SIZE;\n};\n\nscale.range = function (scaleDef, encoding, layout, stats) {\n  var encDef = encoding.encDef(scaleDef.name);\n  var timeUnit = encDef.timeUnit;\n\n  switch (scaleDef.name) {\n    case X:\n      scaleDef.range = layout.cellWidth ? [0, layout.cellWidth] : 'width';\n      if (scaleDef.type === 'ordinal') {\n        scaleDef.bandWidth = encoding.bandSize(X, layout.x.useSmallBand);\n      }\n      scaleDef.round = true;\n      if (scaleDef.type === 'time') {\n        scaleDef.nice = timeUnit || encoding.config('timeScaleNice');\n      }else {\n        scaleDef.nice = true;\n      }\n      break;\n    case Y:\n      if (scaleDef.type === 'ordinal') {\n        scaleDef.range = layout.cellHeight ?\n          (encDef.bin ? [layout.cellHeight, 0] : [0, layout.cellHeight]) :\n          'height';\n        scaleDef.bandWidth = encoding.bandSize(Y, layout.y.useSmallBand);\n      } else {\n        scaleDef.range = layout.cellHeight ? [layout.cellHeight, 0] : 'height';\n      }\n\n      scaleDef.round = true;\n\n      if (scaleDef.type === 'time') {\n        scaleDef.nice = timeUnit || encoding.config('timeScaleNice');\n      }else {\n        scaleDef.nice = true;\n      }\n      break;\n    case ROW: // support only ordinal\n      scaleDef.bandWidth = layout.cellHeight;\n      scaleDef.round = true;\n      scaleDef.nice = true;\n      break;\n    case COL: // support only ordinal\n      scaleDef.bandWidth = layout.cellWidth;\n      scaleDef.round = true;\n      scaleDef.nice = true;\n      break;\n    case SIZE:\n      if (encoding.is('bar')) {\n        // FIXME this is definitely incorrect\n        // but let's fix it later since bar size is a bad encoding anyway\n        scaleDef.range = [3, Math.max(encoding.bandSize(X), encoding.bandSize(Y))];\n      } else if (encoding.is(TEXT)) {\n        scaleDef.range = [8, 40];\n      } else { //point\n        var bandSize = Math.min(encoding.bandSize(X), encoding.bandSize(Y)) - 1;\n        scaleDef.range = [10, 0.8 * bandSize*bandSize];\n      }\n      scaleDef.round = true;\n      break;\n    case SHAPE:\n      scaleDef.range = 'shapes';\n      break;\n    case COLOR:\n      scaleDef.range = scale.color(scaleDef, encoding, stats);\n      break;\n    default:\n      throw new Error('Unknown encoding name: '+ scaleDef.name);\n  }\n\n  // FIXME(kanitw): Jul 29, 2015 - consolidate this with above\n  switch (scaleDef.name) {\n    case ROW:\n    case COL:\n      scaleDef.padding = encoding.config('cellPadding');\n      scaleDef.outerPadding = 0;\n      break;\n    case X:\n    case Y:\n      if (scaleDef.type === 'ordinal') { //&& !s.bandWidth\n        scaleDef.points = true;\n        scaleDef.padding = encoding.encDef(scaleDef.name).band.padding;\n      }\n  }\n\n  return scaleDef;\n};\n\nscale.color = function(s, encoding, stats) {\n  var colorScale = encoding.scale(COLOR),\n    range = colorScale.range,\n    cardinality = encoding.cardinality(COLOR, stats),\n    type = encoding.type(COLOR);\n\n  if (range === undefined) {\n    var ordinalPalette = colorScale.ordinalPalette,\n      quantitativeRange = colorScale.quantitativeRange;\n\n    if (s.type === 'ordinal') {\n      if (type === N) {\n        // use categorical color scale\n        if (cardinality <= 10) {\n          range = colorScale.c10palette;\n        } else {\n          range = colorScale.c20palette;\n        }\n        return scale.color.palette(range, cardinality, type);\n      } else {\n        if (ordinalPalette) {\n          return scale.color.palette(ordinalPalette, cardinality, type);\n        }\n        return scale.color.interpolate(quantitativeRange[0], quantitativeRange[1], cardinality);\n      }\n    } else { //time or quantitative\n      return [quantitativeRange[0], quantitativeRange[1]];\n    }\n  }\n};\n\nscale.color.palette = function(range, cardinality, type) {\n  // FIXME(kanitw): Jul 29, 2015 - check range is string\n  switch (range) {\n    case 'category10k':\n      // tableau's category 10, ordered by perceptual kernel study results\n      // https://github.com/uwdata/perceptual-kernels\n      return ['#2ca02c', '#e377c2', '#7f7f7f', '#17becf', '#8c564b', '#d62728', '#bcbd22', '#9467bd', '#ff7f0e', '#1f77b4'];\n\n    // d3/tableau category10/20/20b/20c\n    case 'category10':\n      return ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf'];\n\n    case 'category20':\n      return ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\n\n    case 'category20b':\n      return ['#393b79', '#5254a3', '#6b6ecf', '#9c9ede', '#637939', '#8ca252', '#b5cf6b', '#cedb9c', '#8c6d31', '#bd9e39', '#e7ba52', '#e7cb94', '#843c39', '#ad494a', '#d6616b', '#e7969c', '#7b4173', '#a55194', '#ce6dbd', '#de9ed6'];\n\n    case 'category20c':\n      return ['#3182bd', '#6baed6', '#9ecae1', '#c6dbef', '#e6550d', '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354', '#74c476', '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc', '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\n  }\n\n  // TODO add our own set of custom ordinal color palette\n\n  if (range in colorbrewer) {\n    var palette = colorbrewer[range];\n\n    // if cardinality pre-defined, use it.\n    if (cardinality in palette) return palette[cardinality];\n\n    // if not, use the highest cardinality one for nominal\n    if (type === N) {\n      return palette[Math.max.apply(null, util.keys(palette))];\n    }\n\n    // otherwise, interpolate\n    var ps = cardinality < 3 ? 3 : Math.max.apply(null, util.keys(palette)),\n      from = 0 , to = ps - 1;\n    // FIXME add config for from / to\n\n    return scale.color.interpolate(palette[ps][from], palette[ps][to], cardinality);\n  }\n\n  return range;\n};\n\nscale.color.interpolate = function (start, end, cardinality) {\n\n  var interpolator = interpolate(start, end);\n  return util.range(cardinality).map(function(i) { return interpolator(i*1.0/(cardinality-1)); });\n};\n\n},{\"../globals\":71,\"../util\":75,\"./time\":66,\"colorbrewer\":3,\"d3-color\":4}],63:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nmodule.exports = stacking;\n\nfunction stacking(encoding, mdef, stack) {\n  var groupby = stack.groupby;\n  var field = stack.value;\n\n  var valName = encoding.fieldRef(field);\n  var startField = valName + '_start';\n  var endField = valName + '_end';\n\n  var transforms = [];\n\n  if (encoding.marktype() === 'area') {\n    // Add impute transform to ensure we have all values for each series\n    transforms.push({\n      type: 'impute',\n      field: encoding.fieldRef(field),\n      groupby: [encoding.fieldRef(stack.stack)],\n      orderby: [encoding.fieldRef(groupby)],\n      method: 'value',\n      value: 0\n    });\n  }\n\n\n  // add stack transform to mark\n  var stackTransform = {\n    type: 'stack',\n    groupby: [encoding.fieldRef(groupby)],\n    field: encoding.fieldRef(field),\n    sortby: [(stack.properties.reverse ? '-' : '') + encoding.fieldRef(stack.stack)],\n    output: {start: startField, end: endField}\n  };\n\n  if (stack.properties.offset) {\n    stackTransform.offset = stack.properties.offset;\n  }\n\n  transforms.push(stackTransform)\n\n  mdef.from.transform = transforms;\n\n  // TODO(#276): This is super hack-ish -- consolidate into modular mark properties?\n  mdef.properties.update[field] = mdef.properties.enter[field] = {\n    scale: field,\n    field: startField\n  };\n  mdef.properties.update[field + '2'] = mdef.properties.enter[field + '2'] = {\n    scale: field,\n    field: endField\n  };\n\n  return field; //return stack encoding\n}\n\n},{\"../globals\":71}],64:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar vlEncDef = require('../encdef');\n\nmodule.exports = function(encoding, stats) {\n  return {\n    opacity: estimateOpacity(encoding, stats),\n  };\n};\n\nfunction estimateOpacity(encoding,stats) {\n  if (!stats) {\n    return 1;\n  }\n\n  var numPoints = 0;\n\n  if (encoding.isAggregate()) { // aggregate plot\n    numPoints = 1;\n\n    //  get number of points in each \"cell\"\n    //  by calculating product of cardinality\n    //  for each non faceting and non-ordinal X / Y fields\n    //  note that ordinal x,y are not include since we can\n    //  consider that ordinal x are subdividing the cell into subcells anyway\n    encoding.forEach(function(encDef, encType) {\n\n      if (encType !== ROW && encType !== COL &&\n          !((encType === X || encType === Y) &&\n          vlEncDef.isOrdinalScale(encDef))\n        ) {\n        numPoints *= encoding.cardinality(encType, stats);\n      }\n    });\n\n  } else { // raw plot\n\n    // TODO: error handling\n    if (!stats['*'])\n      return 1;\n\n    numPoints = stats['*'].max;  // count\n\n    // small multiples divide number of points\n    var numMultiples = 1;\n    if (encoding.has(ROW)) {\n      numMultiples *= encoding.cardinality(ROW, stats);\n    }\n    if (encoding.has(COL)) {\n      numMultiples *= encoding.cardinality(COL, stats);\n    }\n    numPoints /= numMultiples;\n  }\n\n  var opacity = 0;\n  if (numPoints <= 25) {\n    opacity = 1;\n  } else if (numPoints < 200) {\n    opacity = 0.8;\n  } else if (numPoints < 1000 || encoding.is('tick')) {\n    opacity = 0.7;\n  } else {\n    opacity = 0.3;\n  }\n\n  return opacity;\n}\n\n\n},{\"../encdef\":70,\"../globals\":71}],65:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nmodule.exports = subfaceting;\n\nfunction subfaceting(group, mdef, details, encoding) {\n  var m = group.marks;\n  var g = {\n    name: 'subfacet',\n    type: 'group',\n    from: mdef.from,\n    properties: {\n      enter: {\n        width: {field: {group: 'width'}},\n        height: {field: {group: 'height'}}\n      }\n    },\n    marks: m\n  };\n\n  group.marks = [g];\n  delete mdef.from; // (move to the new g)\n\n  //TODO test LOD -- we should support stack / line without color (LOD) field\n  var trans = (g.from.transform || (g.from.transform = []));\n  trans.push({type: 'facet', groupby: details});\n}\n\n},{\"../globals\":71}],66:[function(require,module,exports){\n'use strict';\n\nvar util = require('../util'),\n  d3_time_format = require('d3-time-format');\n\nvar time = module.exports = {};\n\n// 'Wednesday September 17 04:00:00 2014'\n// Wednesday is the longest date\n// September is the longest month (8 in javascript as it is zero-indexed).\nvar LONG_DATE = new Date(Date.UTC(2014, 8, 17));\n\ntime.cardinality = function(encDef, stats, filterNull, type) {\n  var timeUnit = encDef.timeUnit;\n  switch (timeUnit) {\n    case 'seconds': return 60;\n    case 'minutes': return 60;\n    case 'hours': return 24;\n    case 'day': return 7;\n    case 'date': return 31;\n    case 'month': return 12;\n    case 'year':\n      var stat = stats[encDef.name],\n        yearstat = stats['year_' + encDef.name];\n\n      if (!yearstat) { return null; }\n\n      return yearstat.distinct -\n        (stat.missing > 0 && filterNull[type] ? 1 : 0);\n  }\n\n  return null;\n};\n\ntime.formula = function(timeUnit, fieldRef) {\n  // TODO(kanitw): add formula to other time format\n  var fn = 'utc' + timeUnit;\n  return fn + '(' + fieldRef + ')';\n};\n\ntime.maxLength = function(timeUnit, encoding) {\n  switch (timeUnit) {\n    case 'seconds':\n    case 'minutes':\n    case 'hours':\n    case 'date':\n      return 2;\n    case 'month':\n    case 'day':\n      var range = time.range(timeUnit, encoding);\n      if (range) {\n        // return the longest name in the range\n        return Math.max.apply(null, range.map(function(r) {return r.length;}));\n      }\n      return 2;\n    case 'year':\n      return 4; //'1998'\n  }\n  // TODO(#600) revise this\n  // no time unit\n  var timeFormat = encoding.config('timeFormat');\n  return d3_time_format.utcFormat(timeFormat)(LONG_DATE).length;\n};\n\ntime.range = function(timeUnit, encoding) {\n  var labelLength = encoding.config('timeScaleLabelLength'),\n    scaleLabel;\n  switch (timeUnit) {\n    case 'day':\n      scaleLabel = encoding.config('dayScaleLabel');\n      break;\n    case 'month':\n      scaleLabel = encoding.config('monthScaleLabel');\n      break;\n  }\n  if (scaleLabel) {\n    return labelLength ? scaleLabel.map(\n        function(s) { return s.substr(0, labelLength);}\n      ) : scaleLabel;\n  }\n  return;\n};\n\n\n/**\n * @param  {Object} encoding\n * @return {Array}  scales for time unit names\n */\ntime.scales = function(encoding) {\n  var scales = encoding.reduce(function(scales, encDef) {\n    var timeUnit = encDef.timeUnit;\n    if (encDef.type === T && timeUnit && !scales[timeUnit]) {\n      var scale = time.scale.def(encDef.timeUnit, encoding);\n      if (scale) scales[timeUnit] = scale;\n    }\n    return scales;\n  }, {});\n\n  return util.vals(scales);\n};\n\n\ntime.scale = {};\n\n/** append custom time scales for axis label */\ntime.scale.def = function(timeUnit, encoding) {\n  var range = time.range(timeUnit, encoding);\n\n  if (range) {\n    return {\n      name: 'time-'+timeUnit,\n      type: 'ordinal',\n      domain: time.scale.domain(timeUnit),\n      range: range\n    };\n  }\n  return null;\n};\n\ntime.isOrdinalFn = function(timeUnit) {\n  switch (timeUnit) {\n    case 'seconds':\n    case 'minutes':\n    case 'hours':\n    case 'day':\n    case 'date':\n    case 'month':\n      return true;\n  }\n  return false;\n};\n\ntime.scale.type = function(timeUnit, name) {\n  if (name === COLOR) {\n    return 'linear'; // time has order, so use interpolated ordinal color scale.\n  }\n\n  // FIXME revise this -- should 'year' be linear too?\n  return time.isOrdinalFn(timeUnit) || name === COL || name === ROW ? 'ordinal' : 'linear';\n};\n\ntime.scale.domain = function(timeUnit, name) {\n  var isColor = name === COLOR;\n  switch (timeUnit) {\n    case 'seconds':\n    case 'minutes': return isColor ? [0,59] : util.range(0, 60);\n    case 'hours': return isColor ? [0,23] : util.range(0, 24);\n    case 'day': return isColor ? [0,6] : util.range(0, 7);\n    case 'date': return isColor ? [1,31] : util.range(1, 32);\n    case 'month': return isColor ? [0,11] : util.range(0, 12);\n  }\n  return null;\n};\n\n/** whether a particular time function has custom scale for labels implemented in time.scale */\ntime.hasScale = function(timeUnit) {\n  switch (timeUnit) {\n    case 'day':\n    case 'month':\n      return true;\n  }\n  return false;\n};\n\n},{\"../util\":75,\"d3-time-format\":6}],67:[function(require,module,exports){\n'use strict';\n\nrequire('./globals');\n\nvar consts = module.exports = {};\n\nconsts.encodingTypes = [X, Y, ROW, COL, SIZE, SHAPE, COLOR, TEXT, DETAIL];\n\nconsts.shorthand = {\n  delim:  '|',\n  assign: '=',\n  type:   ',',\n  func:   '_'\n};\n\n},{\"./globals\":71}],68:[function(require,module,exports){\n'use strict';\n\nrequire('./globals');\n\nvar stats = require('datalib/src/stats');\n\nvar vldata = module.exports = {};\n\n/** Mapping from datalib's inferred type to Vega-lite's type */\nvldata.types = {\n  'boolean': N,\n  'number': Q,\n  'integer': Q,\n  'date': T,\n  'string': N\n};\n\nvldata.stats = function(data) {\n  var summary = stats.summary(data);\n\n  return summary.reduce(function(s, profile) {\n    s[profile.field] = profile;\n    return s;\n  }, {\n    '*': {\n      max: data.length,\n      min: 0\n    }\n  });\n};\n},{\"./globals\":71,\"datalib/src/stats\":29}],69:[function(require,module,exports){\n// utility for enc\n\n'use strict';\n\nvar consts = require('./consts'),\n  c = consts.shorthand,\n  vlEncDef = require('./encdef'),\n  util = require('./util'),\n  schema = require('./schema/schema'),\n  encTypes = schema.encTypes;\n\nvar vlenc = module.exports = {};\n\nvlenc.countRetinal = function(enc) {\n  var count = 0;\n  if (enc.color) count++;\n  if (enc.size) count++;\n  if (enc.shape) count++;\n  return count;\n};\n\nvlenc.has = function(enc, encType) {\n  var fieldDef = enc && enc[encType];\n  return fieldDef && fieldDef.name;\n};\n\nvlenc.isAggregate = function(enc) {\n  for (var k in enc) {\n    if (vlenc.has(enc, k) && enc[k].aggregate) {\n      return true;\n    }\n  }\n  return false;\n};\n\nvlenc.forEach = function(enc, f) {\n  var i = 0;\n  encTypes.forEach(function(k) {\n    if (vlenc.has(enc, k)) {\n      f(enc[k], k, i++);\n    }\n  });\n};\n\nvlenc.map = function(enc, f) {\n  var arr = [];\n  encTypes.forEach(function(k) {\n    if (vlenc.has(enc, k)) {\n      arr.push(f(enc[k], k, enc));\n    }\n  });\n  return arr;\n};\n\nvlenc.reduce = function(enc, f, init) {\n  var r = init;\n  encTypes.forEach(function(k) {\n    if (vlenc.has(enc, k)) {\n      r = f(r, enc[k], k,  enc);\n    }\n  });\n  return r;\n};\n\n/*\n * return key-value pairs of field name and list of fields of that field name\n */\nvlenc.fields = function(enc) {\n  return vlenc.reduce(enc, function (m, field) {\n    var fieldList = m[field.name] = m[field.name] || [],\n      containsType = fieldList.containsType = fieldList.containsType || {};\n\n    if (fieldList.indexOf(field) === -1) {\n      fieldList.push(field);\n      // augment the array with containsType.Q / O / N / T\n      containsType[field.type] = true;\n    }\n    return m;\n  }, {});\n};\n\nvlenc.shorthand = function(enc) {\n  return vlenc.map(enc, function(field, et) {\n    return et + c.assign + vlEncDef.shorthand(field);\n  }).join(c.delim);\n};\n\nvlenc.fromShorthand = function(shorthand) {\n  var enc = util.isArray(shorthand) ? shorthand : shorthand.split(c.delim);\n  return enc.reduce(function(m, e) {\n    var split = e.split(c.assign),\n        enctype = split[0].trim(),\n        field = split[1];\n\n    m[enctype] = vlEncDef.fromShorthand(field);\n    return m;\n  }, {});\n};\n\n},{\"./consts\":67,\"./encdef\":70,\"./schema/schema\":73,\"./util\":75}],70:[function(require,module,exports){\n'use strict';\n\n// utility for field\n\nrequire('./globals');\n\nvar consts = require('./consts'),\n  c = consts.shorthand,\n  time = require('./compiler/time'),\n  util = require('./util'),\n  schema = require('./schema/schema');\n\nvar vlfield = module.exports = {};\n\n/**\n * @param field\n * @param opt\n *   opt.nofn -- exclude bin, aggregate, timeUnit\n *   opt.noAggregate -- exclude aggregation function\n *   opt.datum - include 'datum.'\n *   opt.fn - replace fn with custom function prefix\n *   opt.prefn - prepend fn with custom function prefix\n *   opt.bin_suffix - append suffix to the field ref for bin (default='_start')\n\n * @return {[type]}       [description]\n */\nvlfield.fieldRef = function(field, opt) {\n  opt = opt || {};\n\n  var f = (opt.datum ? 'datum.' : '') + (opt.prefn || ''),\n    name = field.name;\n\n  if (vlfield.isCount(field)) {\n    return f + 'count';\n  } else if (opt.fn) {\n    return f + opt.fn + '_' + name;\n  } else if (!opt.nofn && field.bin) {\n    var bin_suffix = opt.bin_suffix || '_start';\n    return f + 'bin_' + name + bin_suffix;\n  } else if (!opt.nofn && !opt.noAggregate && field.aggregate) {\n    return f + field.aggregate + '_' + name;\n  } else if (!opt.nofn && field.timeUnit) {\n    return f + field.timeUnit + '_' + name;\n  }  else {\n    return f + name;\n  }\n};\n\nvlfield.shorthand = function(f) {\n  var c = consts.shorthand;\n  return (f.aggregate ? f.aggregate + c.func : '') +\n    (f.timeUnit ? f.timeUnit + c.func : '') +\n    (f.bin ? 'bin' + c.func : '') +\n    (f.name || '') + c.type + f.type;\n};\n\nvlfield.shorthands = function(fields, delim) {\n  delim = delim || c.delim;\n  return fields.map(vlfield.shorthand).join(delim);\n};\n\nvlfield.fromShorthand = function(shorthand) {\n  var split = shorthand.split(c.type), i;\n  var o = {\n    name: split[0].trim(),\n    type: split[1].trim()\n  };\n\n  // check aggregate type\n  for (i in schema.aggregate.enum) {\n    var a = schema.aggregate.enum[i];\n    if (o.name.indexOf(a + '_') === 0) {\n      o.name = o.name.substr(a.length + 1);\n      if (a == 'count' && o.name.length === 0) o.name = '*';\n      o.aggregate = a;\n      break;\n    }\n  }\n\n  // check time timeUnit\n  for (i in schema.timefns) {\n    var tu = schema.timefns[i];\n    if (o.name && o.name.indexOf(tu + '_') === 0) {\n      o.name = o.name.substr(o.length + 1);\n      o.timeUnit = tu;\n      break;\n    }\n  }\n\n  // check bin\n  if (o.name && o.name.indexOf('bin_') === 0) {\n    o.name = o.name.substr(4);\n    o.bin = true;\n  }\n\n  return o;\n};\n\nvar isType = vlfield.isType = function (fieldDef, type) {\n  return fieldDef.type === type;\n};\n\nvar isTypes = vlfield.isTypes = function (fieldDef, types) {\n  for (var t=0; t<types.length; t++) {\n    if(fieldDef.type === types[t]) return true;\n  }\n  return false;\n};\n\n/*\n * Most fields that use ordinal scale are dimensions.\n * However, YEAR(T), YEARMONTH(T) use time scale, not ordinal but are dimensions too.\n */\nvlfield.isOrdinalScale = function(field) {\n  return  isTypes(field, [N, O]) ||\n    ( isType(field, T) && field.timeUnit && time.isOrdinalFn(field.timeUnit) );\n};\n\nfunction isDimension(field) {\n  return  isTypes(field, [N, O]) || !!field.bin ||\n    ( isType(field, T) && !!field.timeUnit );\n}\n\n/**\n * For encoding, use encoding.isDimension() to avoid confusion.\n * Or use Encoding.isType if your field is from Encoding (and thus have numeric data type).\n * otherwise, do not specific isType so we can use the default isTypeName here.\n */\nvlfield.isDimension = function(field) {\n  return field && isDimension(field);\n};\n\nvlfield.isMeasure = function(field) {\n  return field && !isDimension(field);\n};\n\nvlfield.count = function() {\n  return {name:'*', aggregate: 'count', type: Q, displayName: vlfield.count.displayName};\n};\n\nvlfield.count.displayName = 'Number of Records';\n\nvlfield.isCount = function(field) {\n  return field.aggregate === 'count';\n};\n\n/**\n * For encoding, use encoding.cardinality() to avoid confusion.  Or use Encoding.isType if your field is from Encoding (and thus have numeric data type).\n * otherwise, do not specific isType so we can use the default isTypeName here.\n */\nvlfield.cardinality = function(field, stats, filterNull) {\n  // FIXME need to take filter into account\n\n  var stat = stats[field.name];\n  var type = field.type;\n\n  filterNull = filterNull || {};\n\n  if (field.bin) {\n    var bins = util.getbins(stat, field.bin.maxbins || schema.MAXBINS_DEFAULT);\n    return (bins.stop - bins.start) / bins.step;\n  }\n  if (isType(field, T)) {\n    var cardinality = time.cardinality(field, stats, filterNull, type);\n    if(cardinality !== null) return cardinality;\n    //otherwise use calculation below\n  }\n  if (field.aggregate) {\n    return 1;\n  }\n\n  // remove null\n  return stat.distinct -\n    (stat.missing > 0 && filterNull[type] ? 1 : 0);\n};\n\n},{\"./compiler/time\":66,\"./consts\":67,\"./globals\":71,\"./schema/schema\":73,\"./util\":75}],71:[function(require,module,exports){\n(function (global){\n'use strict';\n\n// declare global constant\nvar g = global || window;\n\ng.AGGREGATE = 'aggregate';\ng.RAW = 'raw';\ng.STACKED = 'stacked';\ng.INDEX = 'index';\n\ng.X = 'x';\ng.Y = 'y';\ng.ROW = 'row';\ng.COL = 'col';\ng.SIZE = 'size';\ng.SHAPE = 'shape';\ng.COLOR = 'color';\ng.TEXT = 'text';\ng.DETAIL = 'detail';\n\ng.N = 'N';\ng.O = 'O';\ng.Q = 'Q';\ng.T = 'T';\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],72:[function(require,module,exports){\n'use strict';\n\n// TODO(kanitw): chat with Vega team and possibly move this to vega-logging\nmodule.exports = function(prefix) {\n  // Borrowed some ideas from http://stackoverflow.com/a/15653260/866989\n  // and https://github.com/patik/console.log-wrapper/blob/master/consolelog.js\n  var METHODS = ['error', 'info', 'debug', 'warn', 'log'];\n\n  return METHODS.reduce(function(logger, fn) {\n    var cfn = console[fn] ? fn : 'log';\n    if (console[cfn].bind === 'undefined') { // IE < 10\n        logger[fn] = Function.prototype.bind.call(console[cfn], console, prefix);\n    }\n    else {\n        logger[fn] = console[cfn].bind(console, prefix);\n    }\n    return logger;\n  }, {});\n};\n},{}],73:[function(require,module,exports){\n// Package of defining Vega-lite Specification's json schema\n'use strict';\n\nrequire('../globals');\n\nvar schema = module.exports = {},\n  util = require('../util'),\n  toMap = util.toMap,\n  colorbrewer = require('colorbrewer');\n\nvar VALID_AGG_OPS = require('vega/src/transforms/Aggregate').VALID_OPS;\n\n// TODO(#620) refer to vega schema\n// var vgStackSchema = require('vega/src/transforms/Stack').schema;\n\n\nschema.util = require('./schemautil');\n\nschema.marktype = {\n  type: 'string',\n  enum: ['point', 'tick', 'bar', 'line', 'area', 'circle', 'square', 'text']\n};\n\nschema.aggregate = {\n  type: 'string',\n  enum: VALID_AGG_OPS,\n  supportedEnums: {\n    Q: VALID_AGG_OPS,\n    O: ['median','min','max'],\n    N: [],\n    T: ['mean', 'median', 'min', 'max'],\n    '': ['count']\n  },\n  supportedTypes: toMap([Q, N, O, T, ''])\n};\n\nschema.getSupportedRole = function(encType) {\n  return schema.schema.properties.encoding.properties[encType].supportedRole;\n};\n\nschema.timeUnits = ['year', 'month', 'day', 'date', 'hours', 'minutes', 'seconds'];\n\nschema.defaultTimeFn = 'month';\n\nschema.timeUnit = {\n  type: 'string',\n  enum: schema.timeUnits,\n  supportedTypes: toMap([T])\n};\n\nschema.scale_type = {\n  type: 'string',\n  // TODO(kanitw) read vega's schema here, add description\n  enum: ['linear', 'log', 'pow', 'sqrt', 'quantile'],\n  default: 'linear',\n  supportedTypes: toMap([Q])\n};\n\nschema.field = {\n  type: 'object',\n  properties: {\n    name: {\n      type: 'string'\n    }\n  }\n};\n\nvar clone = util.duplicate;\nvar merge = schema.util.merge;\n\nschema.MAXBINS_DEFAULT = 15;\n\nvar bin = {\n  type: ['boolean', 'object'],\n  default: false,\n  properties: {\n    maxbins: {\n      type: 'integer',\n      default: schema.MAXBINS_DEFAULT,\n      minimum: 2,\n      description: 'Maximum number of bins.'\n    }\n  },\n  supportedTypes: toMap([Q]) // TODO: add O after finishing #81\n};\n\nvar typicalField = merge(clone(schema.field), {\n  type: 'object',\n  properties: {\n    type: {\n      type: 'string',\n      enum: [N, O, Q, T]\n    },\n    aggregate: schema.aggregate,\n    timeUnit: schema.timeUnit,\n    bin: bin,\n    scale: {\n      type: 'object',\n      properties: {\n        /* Common Scale Properties */\n        type: schema.scale_type,\n\n        /* Quantitative Scale Properties */\n        nice: {\n          type: 'string',\n          enum: ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'],\n          supportedTypes: toMap([T])\n        },\n        zero: {\n          type: 'boolean',\n          description: 'Include zero',\n          default: undefined,\n          supportedTypes: toMap([Q, T])\n        },\n\n        /* Vega-lite only Properties */\n        useRawDomain: {\n          type: 'boolean',\n          default: undefined,\n          description: 'Use the raw data range as scale domain instead of ' +\n                       'aggregated data for aggregate axis. ' +\n                       'This option does not work with sum or count aggregate' +\n                       'as they might have a substantially larger scale range.' +\n                       'By default, use value from config.useRawDomain.'\n        }\n      }\n    }\n  }\n});\n\nvar onlyOrdinalField = merge(clone(schema.field), {\n  type: 'object',\n  supportedRole: {\n    dimension: true\n  },\n  properties: {\n    type: {\n      type: 'string',\n      enum: [N, O, Q, T] // ordinal-only field supports Q when bin is applied and T when time unit is applied.\n    },\n    timeUnit: schema.timeUnit,\n    bin: bin,\n    aggregate: {\n      type: 'string',\n      enum: ['count'],\n      supportedTypes: toMap([N, O]) // FIXME this looks weird to me\n    }\n  }\n});\n\nvar axisMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true},\n  properties: {\n    axis: {\n      type: 'object',\n      properties: {\n        /* Vega Axis Properties */\n        format: {\n          type: 'string',\n          default: undefined,  // auto\n          description: 'The formatting pattern for axis labels. '+\n                       'If not undefined, this will be determined by ' +\n                       'small/largeNumberFormat and the max value ' +\n                       'of the field.'\n        },\n        grid: {\n          type: 'boolean',\n          default: undefined,\n          description: 'A flag indicate if gridlines should be created in addition to ticks. If `grid` is unspecified, the default value is `true` for ROW and COL. For X and Y, the default value is `true` for quantitative and time fields and `false` otherwise.'\n        },\n        layer: {\n          type: 'string',\n          default: 'back',\n          description: 'A string indicating if the axis (and any gridlines) should be placed above or below the data marks. One of \"front\" (default) or \"back\".'\n        },\n        orient: {\n          type: 'string',\n          default: undefined,\n          enum: ['top', 'right', 'left', 'bottom'],\n          description: 'The orientation of the axis. One of top, bottom, left or right. The orientation can be used to further specialize the axis type (e.g., a y axis oriented for the right edge of the chart).'\n        },\n        ticks: {\n          type: 'integer',\n          default: 5,\n          minimum: 0,\n          description: 'A desired number of ticks, for axes visualizing quantitative scales. The resulting number may be different so that values are \"nice\" (multiples of 2, 5, 10) and lie within the underlying scale\\'s range.'\n        },\n        /* Vega Axis Properties that are automatically populated by Vega-lite */\n        title: {\n          type: 'string',\n          default: undefined,\n          description: 'A title for the axis. (Shows field name and its function by default.)'\n        },\n        /* Vega-lite only */\n        maxLabelLength: {\n          type: 'integer',\n          default: 25,\n          minimum: 0,\n          description: 'Truncate labels that are too long.'\n        },\n        labelAngle: {\n          type: 'integer',\n          default: undefined, // auto\n          minimum: 0,\n          maximum: 360,\n          description: 'Angle by which to rotate labels. Set to 0 to force horizontal.'\n        },\n        titleMaxLength: {\n          type: 'integer',\n          default: undefined,\n          minimum: 0,\n          description: 'Max length for axis title if the title is automatically generated from the field\\'s description'\n        },\n        titleOffset: {\n          type: 'integer',\n          default: undefined,  // auto\n          description: 'A title offset value for the axis.'\n        },\n      }\n    }\n  }\n};\n\nvar sortMixin = {\n  type: 'object',\n  properties: {\n    sort: {\n      default: 'ascending',\n      supportedTypes: toMap([N, O]),\n      oneOf: [\n        {\n          type: 'string',\n          enum: ['ascending', 'descending', 'unsorted']\n        },\n        { // sort by aggregation of another field\n          type: 'object',\n          required: ['field', 'op'],\n          properties: {\n            field: {\n              type: 'string',\n              description: 'The field name to aggregate over.'\n            },\n            op: {\n              type: 'string',\n              enum: VALID_AGG_OPS,\n              description: 'The field name to aggregate over.'\n            },\n            order: {\n              type: 'string',\n              enum: ['ascending', 'descending']\n            }\n          }\n        }\n      ]\n\n    }\n  }\n};\n\nvar bandMixin = {\n  type: 'object',\n  properties: {\n    band: {\n      type: 'object',\n      properties: {\n        size: {\n          type: 'integer',\n          minimum: 0,\n          default: undefined\n        },\n        padding: {\n          type: 'integer',\n          minimum: 0,\n          default: 1\n        }\n      }\n    }\n  }\n};\n\nvar legendMixin = {\n  type: 'object',\n  properties: {\n    legend: {\n      type: 'object',\n      description: 'Properties of a legend.',\n      properties: {\n        title: {\n          type: 'string',\n          default: undefined,\n          description: 'A title for the legend. (Shows field name and its function by default.)'\n        },\n        orient: {\n          type: 'string',\n          default: 'right',\n          description: 'The orientation of the legend. One of \"left\" or \"right\". This determines how the legend is positioned within the scene. The default is \"right\".'\n        }\n      }\n    }\n  }\n};\n\nvar textMixin = {\n  type: 'object',\n  supportedMarktypes: {'text': true},\n  properties: {\n    align: {\n      type: 'string',\n      default: 'right'\n    },\n    baseline: {\n      type: 'string',\n      default: 'middle'\n    },\n    color: {\n      type: 'string',\n      role: 'color',\n      default: '#000000'\n    },\n    margin: {\n      type: 'integer',\n      default: 4,\n      minimum: 0\n    },\n    placeholder: {\n      type: 'string',\n      default: 'Abc'\n    },\n    font: {\n      type: 'object',\n      properties: {\n        weight: {\n          type: 'string',\n          enum: ['normal', 'bold'],\n          default: 'normal'\n        },\n        size: {\n          type: 'integer',\n          default: 10,\n          minimum: 0\n        },\n        family: {\n          type: 'string',\n          default: 'Helvetica Neue'\n        },\n        style: {\n          type: 'string',\n          default: 'normal',\n          enum: ['normal', 'italic']\n        }\n      }\n    },\n    format: {\n      type: 'string',\n      default: undefined,  // auto\n      description: 'The formatting pattern for text value. '+\n                   'If not undefined, this will be determined by ' +\n                   'small/largeNumberFormat and the max value ' +\n                   'of the field.'\n    },\n  }\n};\n\nvar sizeMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, bar: true, circle: true, square: true, text: true},\n  properties: {\n    value: {\n      type: 'integer',\n      default: 30,\n      minimum: 0,\n      description: 'Size of marks.'\n    }\n  }\n};\n\nvar colorMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, 'text': true},\n  properties: {\n    value: {\n      type: 'string',\n      role: 'color',\n      default: '#4682b4',\n      description: 'Color to be used for marks.'\n    },\n    opacity: {\n      type: 'number',\n      default: undefined,  // auto\n      minimum: 0,\n      maximum: 1\n    },\n    scale: {\n      type: 'object',\n      properties: {\n        range: {\n          type: ['string', 'array'],\n          default: undefined,\n          description:\n            'Color palette, if undefined vega-lite will use data property' +\n            'to pick one from c10palette, c20palette, or ordinalPalette.'\n            //FIXME\n        },\n        c10palette: {\n          type: 'string',\n          default: 'category10',\n          enum: [\n            // Tableau\n            'category10', 'category10k',\n            // Color Brewer\n            'Pastel1', 'Pastel2', 'Set1', 'Set2', 'Set3'\n          ]\n        },\n        c20palette: {\n          type: 'string',\n          default: 'category20',\n          enum: ['category20', 'category20b', 'category20c']\n        },\n        ordinalPalette: {\n          type: 'string',\n          default: undefined,\n          description: 'Color palette to encode ordinal variables.',\n          enum: util.keys(colorbrewer)\n        },\n        quantitativeRange: {\n          type: 'array',\n          default: ['#AFC6A3', '#09622A'], // tableau greens\n          // default: ['#ccece6', '#00441b'], // BuGn.9 [2-8]\n          description: 'Color range to encode quantitative variables.',\n          minItems: 2,\n          maxItems: 2,\n          items: {\n            type: 'string',\n            role: 'color'\n          }\n        }\n      }\n    }\n  }\n};\n\nvar stackMixin = {\n  type: 'object',\n  properties: {\n    stack: {\n      type: ['boolean', 'object'],\n      default: true,\n      description: 'Enable stacking (for bar and area marks only).',\n      properties: {\n        reverse: {\n          type: 'boolean',\n          default: false,\n          description: 'Whether to reverse the stack\\'s sortby.'\n        },\n        offset: {\n          type: 'string',\n          default: undefined,\n          enum: ['zero', 'center', 'normalize']\n          // TODO(#620) refer to Vega spec once it doesn't throw error\n          // enum: vgStackSchema.properties.offset.oneOf[0].enum\n        }\n      }\n    }\n  }\n};\n\nvar shapeMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, circle: true, square: true},\n  properties: {\n    value: {\n      type: 'string',\n      enum: ['circle', 'square', 'cross', 'diamond', 'triangle-up', 'triangle-down'],\n      default: 'circle',\n      description: 'Mark to be used.'\n    },\n    filled: {\n      type: 'boolean',\n      default: false,\n      description: 'Whether the shape\\'s color should be used as fill color instead of stroke color.'\n    }\n  }\n};\n\nvar detailMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, line: true, circle: true, square: true}\n};\n\nvar rowMixin = {\n  properties: {\n    height: {\n      type: 'number',\n      minimum: 0,\n      default: 150\n    }\n  }\n};\n\nvar colMixin = {\n  properties: {\n    width: {\n      type: 'number',\n      minimum: 0,\n      default: 150\n    },\n    axis: {\n      properties: {\n        maxLabelLength: {\n          type: 'integer',\n          default: 12,\n          minimum: 0,\n          description: 'Truncate labels that are too long.'\n        }\n      }\n    }\n  }\n};\n\nvar facetMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, text: true},\n  properties: {\n    padding: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.1\n    }\n  }\n};\n\nvar requiredNameType = {\n  required: ['name', 'type']\n};\n\nvar multiRoleField = merge(clone(typicalField), {\n  supportedRole: {\n    measure: true,\n    dimension: true\n  }\n});\n\nvar quantitativeField = merge(clone(typicalField), {\n  supportedRole: {\n    measure: true,\n    dimension: 'ordinal-only' // using size to encoding category lead to order interpretation\n  }\n});\n\nvar onlyQuantitativeField = merge(clone(typicalField), {\n  supportedRole: {\n    measure: true\n  }\n});\n\nvar x = merge(clone(multiRoleField), axisMixin, bandMixin, requiredNameType, sortMixin);\nvar y = clone(x);\n\nvar facet = merge(clone(onlyOrdinalField), requiredNameType, facetMixin, sortMixin);\nvar row = merge(clone(facet), axisMixin, rowMixin);\nvar col = merge(clone(facet), axisMixin, colMixin);\n\nvar size = merge(clone(quantitativeField), legendMixin, sizeMixin, sortMixin);\nvar color = merge(clone(multiRoleField), legendMixin, colorMixin, stackMixin, sortMixin);\n\nvar shape = merge(clone(onlyOrdinalField), legendMixin, shapeMixin, sortMixin);\nvar detail = merge(clone(onlyOrdinalField), detailMixin, stackMixin, sortMixin);\n\n// we only put aggregated measure in pivot table\nvar text = merge(clone(onlyQuantitativeField), textMixin, sortMixin);\n\n// TODO add label\n\nvar data = {\n  type: 'object',\n  properties: {\n    // data source\n    formatType: {\n      type: 'string',\n      enum: ['json', 'csv'],\n      default: 'json'\n    },\n    url: {\n      type: 'string',\n      default: undefined\n    },\n    values: {\n      type: 'array',\n      default: undefined,\n      description: 'Pass array of objects instead of a url to a file.',\n      items: {\n        type: 'object',\n        additionalProperties: true\n      }\n    },\n    // we generate a vega filter transform\n    filter: {\n      type: 'string',\n      default: undefined,\n      description: 'A string containing the filter Vega expression. Use `datum` to refer to the current data object.'\n    },\n    // we generate a vega formula transform\n    formulas: {\n      type: 'array',\n      default: undefined,\n      description: 'Array of formula transforms. Formulas are applied before filter.',\n      items: {\n        type: 'object',\n        properties: {\n          field: {\n            type: 'string',\n            description: 'The property name in which to store the computed formula value.'\n          },\n          expr: {\n            type: 'string',\n            description: 'A string containing an expression for the formula. Use the variable `datum` to to refer to the current data object.'\n          }\n        }\n      }\n    }\n  }\n};\n\nvar config = {\n  type: 'object',\n  properties: {\n    // template\n    width: {\n      type: 'integer',\n      default: undefined\n    },\n    height: {\n      type: 'integer',\n      default: undefined\n    },\n    viewport: {\n      type: 'array',\n      items: {\n        type: 'integer'\n      },\n      default: undefined\n    },\n    gridColor: {\n      type: 'string',\n      role: 'color',\n      default: '#000000'\n    },\n    gridOpacity: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.08\n    },\n\n    // filter null\n    // TODO(#597) revise this config\n    filterNull: {\n      type: 'object',\n      properties: {\n        N: {type:'boolean', default: false},\n        O: {type:'boolean', default: false},\n        Q: {type:'boolean', default: true},\n        T: {type:'boolean', default: true}\n      }\n    },\n    autoSortLine: {\n      type: 'boolean',\n      default: true\n    },\n\n    // single plot\n    singleHeight: {\n      // will be overwritten by bandWidth * (cardinality + padding)\n      type: 'integer',\n      default: 200,\n      minimum: 0\n    },\n    singleWidth: {\n      // will be overwritten by bandWidth * (cardinality + padding)\n      type: 'integer',\n      default: 200,\n      minimum: 0\n    },\n    // band size\n    largeBandSize: {\n      type: 'integer',\n      default: 21,\n      minimum: 0\n    },\n    smallBandSize: {\n      //small multiples or single plot with high cardinality\n      type: 'integer',\n      default: 12,\n      minimum: 0\n    },\n    largeBandMaxCardinality: {\n      type: 'integer',\n      default: 10\n    },\n    // small multiples\n    cellPadding: {\n      type: 'number',\n      default: 0.1\n    },\n    cellGridColor: {\n      type: 'string',\n      role: 'color',\n      default: '#000000'\n    },\n    cellGridOpacity: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.25\n    },\n    cellGridOffset: {\n      type: 'number',\n      default: 6 // equal to tickSize\n    },\n    cellBackgroundColor: {\n      type: 'string',\n      role: 'color',\n      default: 'rgba(0,0,0,0)'\n    },\n    textCellWidth: {\n      type: 'integer',\n      default: 90,\n      minimum: 0\n    },\n\n    // marks\n    strokeWidth: {\n      type: 'integer',\n      default: 2,\n      minimum: 0\n    },\n    singleBarOffset: {\n      type: 'integer',\n      default: 5,\n      minimum: 0\n    },\n    // scales\n    timeScaleLabelLength: {\n      type: 'integer',\n      default: 3,\n      minimum: 0,\n      description: 'Max length for values in dayScaleLabel and monthScaleLabel.  Zero means using full names in dayScaleLabel/monthScaleLabel.'\n    },\n    dayScaleLabel: {\n      type: 'array',\n      items: {\n        type: 'string'\n      },\n      default: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n      description: 'Axis labels for day of week, starting from Sunday.' +\n        '(Consistent with Javascript -- See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getDay.'\n    },\n    monthScaleLabel: {\n      type: 'array',\n      items: {\n        type: 'string'\n      },\n      default: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n      description: 'Axis labels for month.'\n    },\n    // other\n    characterWidth: {\n      type: 'integer',\n      default: 6\n    },\n    maxSmallNumber: {\n      type: 'number',\n      default: 10000,\n      description: 'maximum number that a field will be considered smallNumber.'+\n                   'Used for axis labelling.'\n    },\n    smallNumberFormat: {\n      type: 'string',\n      default: '',\n      description: 'D3 Number format for axis labels and text tables '+\n                   'for number <= maxSmallNumber. Used for axis labelling.'\n    },\n    largeNumberFormat: {\n      type: 'string',\n      default: '.3s',\n      description: 'D3 Number format for axis labels and text tables ' +\n                   'for number > maxSmallNumber.'\n    },\n    timeFormat: {\n      type: 'string',\n      default: '%Y-%m-%d',\n      description: 'Date format for axis labels.'\n    },\n    useRawDomain: {\n      type: 'boolean',\n      default: false,\n      description: 'Use the raw data range as scale domain instead of ' +\n                   'aggregated data for aggregate axis. ' +\n                   'This option does not work with sum or count aggregate' +\n                   'as they might have a substantially larger scale range.' +\n                   'By default, use value from config.useRawDomain.'\n    }\n  }\n};\n\n/** @type Object Schema of a vega-lite specification */\nschema.schema = {\n  $schema: 'http://json-schema.org/draft-04/schema#',\n  description: 'Schema for Vega-lite specification',\n  type: 'object',\n  required: ['marktype', 'encoding', 'data'],\n  properties: {\n    data: data,\n    marktype: schema.marktype,\n    encoding: {\n      type: 'object',\n      properties: {\n        x: x,\n        y: y,\n        row: row,\n        col: col,\n        size: size,\n        color: color,\n        shape: shape,\n        text: text,\n        detail: detail\n      }\n    },\n    config: config\n  }\n};\n\nschema.encTypes = util.keys(schema.schema.properties.encoding.properties);\n\n/** Instantiate a verbose vl spec from the schema */\nschema.instantiate = function() {\n  return schema.util.instantiate(schema.schema);\n};\n\n},{\"../globals\":71,\"../util\":75,\"./schemautil\":74,\"colorbrewer\":3,\"vega/src/transforms/Aggregate\":50}],74:[function(require,module,exports){\n'use strict';\n\nvar schemautil = module.exports = {},\n  util = require('../util');\n\nvar isEmpty = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\nschemautil.extend = function(instance, schema) {\n  return schemautil.merge(schemautil.instantiate(schema), instance);\n};\n\n// instantiate a schema\nschemautil.instantiate = function(schema) {\n  var val;\n  if (schema === undefined) {\n    return undefined;\n  } else if ('default' in schema) {\n    val = schema.default;\n    return util.isObject(val) ? util.duplicate(val) : val;\n  } else if (schema.type === 'object') {\n    var instance = {};\n    for (var name in schema.properties) {\n      val = schemautil.instantiate(schema.properties[name]);\n      if (val !== undefined) {\n        instance[name] = val;\n      }\n    }\n    return instance;\n  } else if (schema.type === 'array') {\n    return [];\n  }\n  return undefined;\n};\n\n// remove all defaults from an instance\nschemautil.subtract = function(instance, defaults) {\n  var changes = {};\n  for (var prop in instance) {\n    var def = defaults[prop];\n    var ins = instance[prop];\n    // Note: does not properly subtract arrays\n    if (!defaults || def !== ins) {\n      if (typeof ins === 'object' && !util.isArray(ins) && def) {\n        var c = schemautil.subtract(ins, def);\n        if (!isEmpty(c))\n          changes[prop] = c;\n      } else if (!util.isArray(ins) || ins.length > 0) {\n        changes[prop] = ins;\n      }\n    }\n  }\n  return changes;\n};\n\nschemautil.merge = function(/*dest*, src0, src1, ...*/){\n  var dest = arguments[0];\n  for (var i=1 ; i<arguments.length; i++) {\n    dest = merge(dest, arguments[i]);\n  }\n  return dest;\n};\n\n// recursively merges src into dest\nfunction merge(dest, src) {\n  if (typeof src !== 'object' || src === null) {\n    return dest;\n  }\n\n  for (var p in src) {\n    if (!src.hasOwnProperty(p)) {\n      continue;\n    }\n    if (src[p] === undefined) {\n      continue;\n    }\n    if (typeof src[p] !== 'object' || src[p] === null) {\n      dest[p] = src[p];\n    } else if (typeof dest[p] !== 'object' || dest[p] === null) {\n      dest[p] = merge(src[p].constructor === Array ? [] : {}, src[p]);\n    } else {\n      merge(dest[p], src[p]);\n    }\n  }\n  return dest;\n}\n},{\"../util\":75}],75:[function(require,module,exports){\n'use strict';\n\nvar util = module.exports = require('datalib/src/util');\n\nutil.extend(util, require('datalib/src/generate'));\nutil.extend(util, require('datalib/src/stats'));\nutil.extend(util, require('./logger')('[VL Error]'));\nutil.bin = require('datalib/src/bins/bins');\n\nutil.isin = function(item, array) {\n  return array.indexOf(item) !== -1;\n};\n\nutil.forEach = function(obj, f, thisArg) {\n  if (obj.forEach) {\n    obj.forEach.call(thisArg, f);\n  } else {\n    for (var k in obj) {\n      f.call(thisArg, obj[k], k , obj);\n    }\n  }\n};\n\nutil.reduce = function(obj, f, init, thisArg) {\n  if (obj.reduce) {\n    return obj.reduce.call(thisArg, f, init);\n  } else {\n    for (var k in obj) {\n      init = f.call(thisArg, init, obj[k], k, obj);\n    }\n    return init;\n  }\n};\n\nutil.map = function(obj, f, thisArg) {\n  if (obj.map) {\n    return obj.map.call(thisArg, f);\n  } else {\n    var output = [];\n    for (var k in obj) {\n      output.push( f.call(thisArg, obj[k], k, obj));\n    }\n  }\n};\n\nutil.any = function(arr, f) {\n  var i = 0, k;\n  for (k in arr) {\n    if (f(arr[k], k, i++)) return true;\n  }\n  return false;\n};\n\nutil.all = function(arr, f) {\n  var i = 0, k;\n  for (k in arr) {\n    if (!f(arr[k], k, i++)) return false;\n  }\n  return true;\n};\n\nutil.getbins = function(stats, maxbins) {\n  return util.bin({\n    min: stats.min,\n    max: stats.max,\n    maxbins: maxbins\n  });\n};\n\n/**\n * x[p[0]]...[p[n]] = val\n * @param noaugment determine whether new object should be added f\n * or non-existing properties along the path\n */\nutil.setter = function(x, p, val, noaugment) {\n  for (var i=0; i<p.length-1; ++i) {\n    if (!noaugment && !(p[i] in x)){\n      x = x[p[i]] = {};\n    } else {\n      x = x[p[i]];\n    }\n  }\n  x[p[i]] = val;\n};\n\n\n/**\n * returns x[p[0]]...[p[n]]\n * @param augment determine whether new object should be added f\n * or non-existing properties along the path\n */\nutil.getter = function(x, p, noaugment) {\n  for (var i=0; i<p.length; ++i) {\n    if (!noaugment && !(p[i] in x)){\n      x = x[p[i]] = {};\n    } else {\n      x = x[p[i]];\n    }\n  }\n  return x;\n};\n\n\n},{\"./logger\":72,\"datalib/src/bins/bins\":14,\"datalib/src/generate\":17,\"datalib/src/stats\":29,\"datalib/src/util\":32}],76:[function(require,module,exports){\n'use strict';\n\nrequire('./globals');\n\nvar util = require('./util'),\n    consts = require('./consts');\n\nvar vl = {};\n\nutil.extend(vl, consts, util);\n\nvl.Encoding = require('./Encoding');\nvl.compiler = require('./compiler/compiler');\nvl.compile = vl.compiler.compile;\nvl.data = require('./data');\nvl.enc = require('./enc');\nvl.encDef = require('./encdef');\nvl.schema = require('./schema/schema');\nvl.toShorthand = vl.Encoding.shorthand;\nvl.format = require('d3-format').format;\n\nmodule.exports = vl;\n},{\"./Encoding\":54,\"./compiler/compiler\":56,\"./consts\":67,\"./data\":68,\"./enc\":69,\"./encdef\":70,\"./globals\":71,\"./schema/schema\":73,\"./util\":75,\"d3-format\":5}]},{},[76])(76)\n});\n//# sourceMappingURL=data:application/json;charset:utf-8;base64,\n","// This product includes color specifications and designs developed by Cynthia Brewer (http://colorbrewer.org/).\n// JavaScript specs as packaged in the D3 library (d3js.org). Please see license at http://colorbrewer.org/export/LICENSE.txt\n!function() {\n\nvar colorbrewer = {YlGn: {\n3: [\"#f7fcb9\",\"#addd8e\",\"#31a354\"],\n4: [\"#ffffcc\",\"#c2e699\",\"#78c679\",\"#238443\"],\n5: [\"#ffffcc\",\"#c2e699\",\"#78c679\",\"#31a354\",\"#006837\"],\n6: [\"#ffffcc\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#31a354\",\"#006837\"],\n7: [\"#ffffcc\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#005a32\"],\n8: [\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#005a32\"],\n9: [\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#006837\",\"#004529\"]\n},YlGnBu: {\n3: [\"#edf8b1\",\"#7fcdbb\",\"#2c7fb8\"],\n4: [\"#ffffcc\",\"#a1dab4\",\"#41b6c4\",\"#225ea8\"],\n5: [\"#ffffcc\",\"#a1dab4\",\"#41b6c4\",\"#2c7fb8\",\"#253494\"],\n6: [\"#ffffcc\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#2c7fb8\",\"#253494\"],\n7: [\"#ffffcc\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#0c2c84\"],\n8: [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#0c2c84\"],\n9: [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#253494\",\"#081d58\"]\n},GnBu: {\n3: [\"#e0f3db\",\"#a8ddb5\",\"#43a2ca\"],\n4: [\"#f0f9e8\",\"#bae4bc\",\"#7bccc4\",\"#2b8cbe\"],\n5: [\"#f0f9e8\",\"#bae4bc\",\"#7bccc4\",\"#43a2ca\",\"#0868ac\"],\n6: [\"#f0f9e8\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#43a2ca\",\"#0868ac\"],\n7: [\"#f0f9e8\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#08589e\"],\n8: [\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#08589e\"],\n9: [\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#0868ac\",\"#084081\"]\n},BuGn: {\n3: [\"#e5f5f9\",\"#99d8c9\",\"#2ca25f\"],\n4: [\"#edf8fb\",\"#b2e2e2\",\"#66c2a4\",\"#238b45\"],\n5: [\"#edf8fb\",\"#b2e2e2\",\"#66c2a4\",\"#2ca25f\",\"#006d2c\"],\n6: [\"#edf8fb\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#2ca25f\",\"#006d2c\"],\n7: [\"#edf8fb\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#005824\"],\n8: [\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#005824\"],\n9: [\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#006d2c\",\"#00441b\"]\n},PuBuGn: {\n3: [\"#ece2f0\",\"#a6bddb\",\"#1c9099\"],\n4: [\"#f6eff7\",\"#bdc9e1\",\"#67a9cf\",\"#02818a\"],\n5: [\"#f6eff7\",\"#bdc9e1\",\"#67a9cf\",\"#1c9099\",\"#016c59\"],\n6: [\"#f6eff7\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#1c9099\",\"#016c59\"],\n7: [\"#f6eff7\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016450\"],\n8: [\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016450\"],\n9: [\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016c59\",\"#014636\"]\n},PuBu: {\n3: [\"#ece7f2\",\"#a6bddb\",\"#2b8cbe\"],\n4: [\"#f1eef6\",\"#bdc9e1\",\"#74a9cf\",\"#0570b0\"],\n5: [\"#f1eef6\",\"#bdc9e1\",\"#74a9cf\",\"#2b8cbe\",\"#045a8d\"],\n6: [\"#f1eef6\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#2b8cbe\",\"#045a8d\"],\n7: [\"#f1eef6\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#034e7b\"],\n8: [\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#034e7b\"],\n9: [\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#045a8d\",\"#023858\"]\n},BuPu: {\n3: [\"#e0ecf4\",\"#9ebcda\",\"#8856a7\"],\n4: [\"#edf8fb\",\"#b3cde3\",\"#8c96c6\",\"#88419d\"],\n5: [\"#edf8fb\",\"#b3cde3\",\"#8c96c6\",\"#8856a7\",\"#810f7c\"],\n6: [\"#edf8fb\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8856a7\",\"#810f7c\"],\n7: [\"#edf8fb\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#6e016b\"],\n8: [\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#6e016b\"],\n9: [\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#810f7c\",\"#4d004b\"]\n},RdPu: {\n3: [\"#fde0dd\",\"#fa9fb5\",\"#c51b8a\"],\n4: [\"#feebe2\",\"#fbb4b9\",\"#f768a1\",\"#ae017e\"],\n5: [\"#feebe2\",\"#fbb4b9\",\"#f768a1\",\"#c51b8a\",\"#7a0177\"],\n6: [\"#feebe2\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#c51b8a\",\"#7a0177\"],\n7: [\"#feebe2\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\"],\n8: [\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\"],\n9: [\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\",\"#49006a\"]\n},PuRd: {\n3: [\"#e7e1ef\",\"#c994c7\",\"#dd1c77\"],\n4: [\"#f1eef6\",\"#d7b5d8\",\"#df65b0\",\"#ce1256\"],\n5: [\"#f1eef6\",\"#d7b5d8\",\"#df65b0\",\"#dd1c77\",\"#980043\"],\n6: [\"#f1eef6\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#dd1c77\",\"#980043\"],\n7: [\"#f1eef6\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#91003f\"],\n8: [\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#91003f\"],\n9: [\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#980043\",\"#67001f\"]\n},OrRd: {\n3: [\"#fee8c8\",\"#fdbb84\",\"#e34a33\"],\n4: [\"#fef0d9\",\"#fdcc8a\",\"#fc8d59\",\"#d7301f\"],\n5: [\"#fef0d9\",\"#fdcc8a\",\"#fc8d59\",\"#e34a33\",\"#b30000\"],\n6: [\"#fef0d9\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#e34a33\",\"#b30000\"],\n7: [\"#fef0d9\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#990000\"],\n8: [\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#990000\"],\n9: [\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#b30000\",\"#7f0000\"]\n},YlOrRd: {\n3: [\"#ffeda0\",\"#feb24c\",\"#f03b20\"],\n4: [\"#ffffb2\",\"#fecc5c\",\"#fd8d3c\",\"#e31a1c\"],\n5: [\"#ffffb2\",\"#fecc5c\",\"#fd8d3c\",\"#f03b20\",\"#bd0026\"],\n6: [\"#ffffb2\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#f03b20\",\"#bd0026\"],\n7: [\"#ffffb2\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#b10026\"],\n8: [\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#b10026\"],\n9: [\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#bd0026\",\"#800026\"]\n},YlOrBr: {\n3: [\"#fff7bc\",\"#fec44f\",\"#d95f0e\"],\n4: [\"#ffffd4\",\"#fed98e\",\"#fe9929\",\"#cc4c02\"],\n5: [\"#ffffd4\",\"#fed98e\",\"#fe9929\",\"#d95f0e\",\"#993404\"],\n6: [\"#ffffd4\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#d95f0e\",\"#993404\"],\n7: [\"#ffffd4\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#8c2d04\"],\n8: [\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#8c2d04\"],\n9: [\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#993404\",\"#662506\"]\n},Purples: {\n3: [\"#efedf5\",\"#bcbddc\",\"#756bb1\"],\n4: [\"#f2f0f7\",\"#cbc9e2\",\"#9e9ac8\",\"#6a51a3\"],\n5: [\"#f2f0f7\",\"#cbc9e2\",\"#9e9ac8\",\"#756bb1\",\"#54278f\"],\n6: [\"#f2f0f7\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#756bb1\",\"#54278f\"],\n7: [\"#f2f0f7\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#4a1486\"],\n8: [\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#4a1486\"],\n9: [\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#54278f\",\"#3f007d\"]\n},Blues: {\n3: [\"#deebf7\",\"#9ecae1\",\"#3182bd\"],\n4: [\"#eff3ff\",\"#bdd7e7\",\"#6baed6\",\"#2171b5\"],\n5: [\"#eff3ff\",\"#bdd7e7\",\"#6baed6\",\"#3182bd\",\"#08519c\"],\n6: [\"#eff3ff\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#3182bd\",\"#08519c\"],\n7: [\"#eff3ff\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#084594\"],\n8: [\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#084594\"],\n9: [\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#08519c\",\"#08306b\"]\n},Greens: {\n3: [\"#e5f5e0\",\"#a1d99b\",\"#31a354\"],\n4: [\"#edf8e9\",\"#bae4b3\",\"#74c476\",\"#238b45\"],\n5: [\"#edf8e9\",\"#bae4b3\",\"#74c476\",\"#31a354\",\"#006d2c\"],\n6: [\"#edf8e9\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#31a354\",\"#006d2c\"],\n7: [\"#edf8e9\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#005a32\"],\n8: [\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#005a32\"],\n9: [\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#006d2c\",\"#00441b\"]\n},Oranges: {\n3: [\"#fee6ce\",\"#fdae6b\",\"#e6550d\"],\n4: [\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#d94701\"],\n5: [\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"],\n6: [\"#feedde\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"],\n7: [\"#feedde\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#8c2d04\"],\n8: [\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#8c2d04\"],\n9: [\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#a63603\",\"#7f2704\"]\n},Reds: {\n3: [\"#fee0d2\",\"#fc9272\",\"#de2d26\"],\n4: [\"#fee5d9\",\"#fcae91\",\"#fb6a4a\",\"#cb181d\"],\n5: [\"#fee5d9\",\"#fcae91\",\"#fb6a4a\",\"#de2d26\",\"#a50f15\"],\n6: [\"#fee5d9\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#de2d26\",\"#a50f15\"],\n7: [\"#fee5d9\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#99000d\"],\n8: [\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#99000d\"],\n9: [\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#a50f15\",\"#67000d\"]\n},Greys: {\n3: [\"#f0f0f0\",\"#bdbdbd\",\"#636363\"],\n4: [\"#f7f7f7\",\"#cccccc\",\"#969696\",\"#525252\"],\n5: [\"#f7f7f7\",\"#cccccc\",\"#969696\",\"#636363\",\"#252525\"],\n6: [\"#f7f7f7\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#636363\",\"#252525\"],\n7: [\"#f7f7f7\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"],\n8: [\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"],\n9: [\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\",\"#000000\"]\n},PuOr: {\n3: [\"#f1a340\",\"#f7f7f7\",\"#998ec3\"],\n4: [\"#e66101\",\"#fdb863\",\"#b2abd2\",\"#5e3c99\"],\n5: [\"#e66101\",\"#fdb863\",\"#f7f7f7\",\"#b2abd2\",\"#5e3c99\"],\n6: [\"#b35806\",\"#f1a340\",\"#fee0b6\",\"#d8daeb\",\"#998ec3\",\"#542788\"],\n7: [\"#b35806\",\"#f1a340\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#998ec3\",\"#542788\"],\n8: [\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\"],\n9: [\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\"],\n10: [\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"],\n11: [\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"]\n},BrBG: {\n3: [\"#d8b365\",\"#f5f5f5\",\"#5ab4ac\"],\n4: [\"#a6611a\",\"#dfc27d\",\"#80cdc1\",\"#018571\"],\n5: [\"#a6611a\",\"#dfc27d\",\"#f5f5f5\",\"#80cdc1\",\"#018571\"],\n6: [\"#8c510a\",\"#d8b365\",\"#f6e8c3\",\"#c7eae5\",\"#5ab4ac\",\"#01665e\"],\n7: [\"#8c510a\",\"#d8b365\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#5ab4ac\",\"#01665e\"],\n8: [\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\"],\n9: [\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\"],\n10: [\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"],\n11: [\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"]\n},PRGn: {\n3: [\"#af8dc3\",\"#f7f7f7\",\"#7fbf7b\"],\n4: [\"#7b3294\",\"#c2a5cf\",\"#a6dba0\",\"#008837\"],\n5: [\"#7b3294\",\"#c2a5cf\",\"#f7f7f7\",\"#a6dba0\",\"#008837\"],\n6: [\"#762a83\",\"#af8dc3\",\"#e7d4e8\",\"#d9f0d3\",\"#7fbf7b\",\"#1b7837\"],\n7: [\"#762a83\",\"#af8dc3\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#7fbf7b\",\"#1b7837\"],\n8: [\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\"],\n9: [\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\"],\n10: [\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"],\n11: [\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"]\n},PiYG: {\n3: [\"#e9a3c9\",\"#f7f7f7\",\"#a1d76a\"],\n4: [\"#d01c8b\",\"#f1b6da\",\"#b8e186\",\"#4dac26\"],\n5: [\"#d01c8b\",\"#f1b6da\",\"#f7f7f7\",\"#b8e186\",\"#4dac26\"],\n6: [\"#c51b7d\",\"#e9a3c9\",\"#fde0ef\",\"#e6f5d0\",\"#a1d76a\",\"#4d9221\"],\n7: [\"#c51b7d\",\"#e9a3c9\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#a1d76a\",\"#4d9221\"],\n8: [\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\"],\n9: [\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\"],\n10: [\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"],\n11: [\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"]\n},RdBu: {\n3: [\"#ef8a62\",\"#f7f7f7\",\"#67a9cf\"],\n4: [\"#ca0020\",\"#f4a582\",\"#92c5de\",\"#0571b0\"],\n5: [\"#ca0020\",\"#f4a582\",\"#f7f7f7\",\"#92c5de\",\"#0571b0\"],\n6: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#d1e5f0\",\"#67a9cf\",\"#2166ac\"],\n7: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#67a9cf\",\"#2166ac\"],\n8: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\"],\n9: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\"],\n10: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"],\n11: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"]\n},RdGy: {\n3: [\"#ef8a62\",\"#ffffff\",\"#999999\"],\n4: [\"#ca0020\",\"#f4a582\",\"#bababa\",\"#404040\"],\n5: [\"#ca0020\",\"#f4a582\",\"#ffffff\",\"#bababa\",\"#404040\"],\n6: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#e0e0e0\",\"#999999\",\"#4d4d4d\"],\n7: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#999999\",\"#4d4d4d\"],\n8: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\"],\n9: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\"],\n10: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"],\n11: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"]\n},RdYlBu: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#91bfdb\"],\n4: [\"#d7191c\",\"#fdae61\",\"#abd9e9\",\"#2c7bb6\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#abd9e9\",\"#2c7bb6\"],\n6: [\"#d73027\",\"#fc8d59\",\"#fee090\",\"#e0f3f8\",\"#91bfdb\",\"#4575b4\"],\n7: [\"#d73027\",\"#fc8d59\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#91bfdb\",\"#4575b4\"],\n8: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\"],\n9: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\"],\n10: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"],\n11: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"]\n},Spectral: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#99d594\"],\n4: [\"#d7191c\",\"#fdae61\",\"#abdda4\",\"#2b83ba\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#abdda4\",\"#2b83ba\"],\n6: [\"#d53e4f\",\"#fc8d59\",\"#fee08b\",\"#e6f598\",\"#99d594\",\"#3288bd\"],\n7: [\"#d53e4f\",\"#fc8d59\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#99d594\",\"#3288bd\"],\n8: [\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\"],\n9: [\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\"],\n10: [\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"],\n11: [\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"]\n},RdYlGn: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#91cf60\"],\n4: [\"#d7191c\",\"#fdae61\",\"#a6d96a\",\"#1a9641\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#a6d96a\",\"#1a9641\"],\n6: [\"#d73027\",\"#fc8d59\",\"#fee08b\",\"#d9ef8b\",\"#91cf60\",\"#1a9850\"],\n7: [\"#d73027\",\"#fc8d59\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#91cf60\",\"#1a9850\"],\n8: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\"],\n9: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\"],\n10: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"],\n11: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"]\n},Accent: {\n3: [\"#7fc97f\",\"#beaed4\",\"#fdc086\"],\n4: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\"],\n5: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\"],\n6: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\"],\n7: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\"],\n8: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\",\"#666666\"]\n},Dark2: {\n3: [\"#1b9e77\",\"#d95f02\",\"#7570b3\"],\n4: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\"],\n5: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\"],\n6: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\"],\n7: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\"],\n8: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\",\"#666666\"]\n},Paired: {\n3: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\"],\n4: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\"],\n5: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\"],\n6: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\"],\n7: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\"],\n8: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\"],\n9: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\"],\n10: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\"],\n11: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\"],\n12: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\",\"#b15928\"]\n},Pastel1: {\n3: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\"],\n4: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\"],\n5: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\"],\n6: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\"],\n7: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\"],\n8: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\"],\n9: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\",\"#f2f2f2\"]\n},Pastel2: {\n3: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\"],\n4: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\"],\n5: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\"],\n6: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\"],\n7: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\"],\n8: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\",\"#cccccc\"]\n},Set1: {\n3: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\"],\n4: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\"],\n5: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\"],\n6: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\"],\n7: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\"],\n8: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\"],\n9: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\",\"#999999\"]\n},Set2: {\n3: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\"],\n4: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\"],\n5: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\"],\n6: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\"],\n7: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\"],\n8: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\",\"#b3b3b3\"]\n},Set3: {\n3: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\"],\n4: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\"],\n5: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\"],\n6: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\"],\n7: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\"],\n8: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\"],\n9: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\"],\n10: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\"],\n11: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\"],\n12: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"]\n}};\n\nif (typeof define === \"function\" && define.amd) {\n    define(colorbrewer);\n} else if (typeof module === \"object\" && module.exports) {\n    module.exports = colorbrewer;\n} else {\n    this.colorbrewer = colorbrewer;\n}\n\n}();\n","module.exports = require('./colorbrewer.js');\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  factory((global.color = {}));\n}(this, function (exports) { 'use strict';\n\n  function deltaHue(h1, h0) {\n    var delta = h1 - h0;\n    return delta > 180 || delta < -180\n        ? delta - 360 * Math.round(delta / 360)\n        : delta;\n  }\n\n  function Color() {}\n\n  var reHex3 = /^#([0-9a-f]{3})$/;\n  var reHex6 = /^#([0-9a-f]{6})$/;\n  var reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n  var reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\n  color.prototype = Color.prototype = {\n    displayable: function() {\n      return this.rgb().displayable();\n    },\n    toString: function() {\n      return this.rgb() + \"\";\n    }\n  };\n\n  function color(format) {\n    var m;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf))) // #f00\n        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n        : (m = reRgbInteger.exec(format)) ? rgb(m[1], m[2], m[3]) // rgb(255,0,0)\n        : (m = reRgbPercent.exec(format)) ? rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100) // rgb(100%,0%,0%)\n        : (m = reHslPercent.exec(format)) ? hsl(m[1], m[2] / 100, m[3] / 100) // hsl(120,50%,50%)\n        : named.hasOwnProperty(format) ? rgbn(named[format])\n        : null;\n  }\n\n  function rgbn(n) {\n    return rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff);\n  }\n\n  var named = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n  };\n\n  var darker = .7;\n  var brighter = 1 / darker;\n\n  function rgb(r, g, b) {\n    if (arguments.length === 1) {\n      if (!(r instanceof Color)) r = color(r);\n      if (r) {\n        r = r.rgb();\n        b = r.b;\n        g = r.g;\n        r = r.r;\n      } else {\n        r = g = b = NaN;\n      }\n    }\n    return new Rgb(r, g, b);\n  }\n\n  function Rgb(r, g, b) {\n    this.r = +r;\n    this.g = +g;\n    this.b = +b;\n  }\n\n  var _prototype = rgb.prototype = Rgb.prototype = new Color;\n\n  _prototype.brighter = function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k);\n  };\n\n  _prototype.darker = function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k);\n  };\n\n  _prototype.rgb = function() {\n    return this;\n  };\n\n  _prototype.displayable = function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255);\n  };\n\n  _prototype.toString = function() {\n    return format(this.r, this.g, this.b);\n  };\n\n  function format(r, g, b) {\n    return \"#\"\n        + (isNaN(r) ? \"00\" : (r = Math.round(r)) < 16 ? \"0\" + Math.max(0, r).toString(16) : Math.min(255, r).toString(16))\n        + (isNaN(g) ? \"00\" : (g = Math.round(g)) < 16 ? \"0\" + Math.max(0, g).toString(16) : Math.min(255, g).toString(16))\n        + (isNaN(b) ? \"00\" : (b = Math.round(b)) < 16 ? \"0\" + Math.max(0, b).toString(16) : Math.min(255, b).toString(16));\n  }\n\n  function hsl(h, s, l) {\n    if (arguments.length === 1) {\n      if (h instanceof Hsl) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n      } else {\n        if (!(h instanceof Color)) h = color(h);\n        if (h) {\n          if (h instanceof Hsl) return h;\n          h = h.rgb();\n          var r = h.r / 255,\n              g = h.g / 255,\n              b = h.b / 255,\n              min = Math.min(r, g, b),\n              max = Math.max(r, g, b),\n              range = max - min;\n          l = (max + min) / 2;\n          if (range) {\n            s = l < .5 ? range / (max + min) : range / (2 - max - min);\n            if (r === max) h = (g - b) / range + (g < b) * 6;\n            else if (g === max) h = (b - r) / range + 2;\n            else h = (r - g) / range + 4;\n            h *= 60;\n          } else {\n            h = NaN;\n            s = l > 0 && l < 1 ? 0 : h;\n          }\n        } else {\n          h = s = l = NaN;\n        }\n      }\n    }\n    return new Hsl(h, s, l);\n  }\n\n  function Hsl(h, s, l) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n  }\n\n  var __prototype = hsl.prototype = Hsl.prototype = new Color;\n\n  __prototype.brighter = function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k);\n  };\n\n  __prototype.darker = function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k);\n  };\n\n  __prototype.rgb = function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < .5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2)\n    );\n  };\n\n  __prototype.displayable = function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1);\n  };\n\n  /* From FvD 13.37, CSS Color Module Level 3 */\n  function hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60\n        : h < 180 ? m2\n        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n        : m1) * 255;\n  }\n\n  var Kn = 18;\n\n  var Xn = 0.950470;\n  var Yn = 1;\n  var Zn = 1.088830;\n  var t0 = 4 / 29;\n  var t1 = 6 / 29;\n  var t2 = 3 * t1 * t1;\n  var t3 = t1 * t1 * t1;\n\n  function lab(l, a, b) {\n    if (arguments.length === 1) {\n      if (l instanceof Lab) {\n        b = l.b;\n        a = l.a;\n        l = l.l;\n      } else if (l instanceof Hcl) {\n        var h = l.h * deg2rad;\n        b = Math.sin(h) * l.c;\n        a = Math.cos(h) * l.c;\n        l = l.l;\n      } else {\n        if (!(l instanceof Rgb)) l = rgb(l);\n        var r = rgb2xyz(l.r),\n            g = rgb2xyz(l.g),\n            b = rgb2xyz(l.b),\n            x = xyz2lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / Xn),\n            y = xyz2lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / Yn),\n            z = xyz2lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / Zn);\n        b = 200 * (y - z);\n        a = 500 * (x - y);\n        l = 116 * y - 16;\n      }\n    }\n    return new Lab(l, a, b);\n  }\n\n  function Lab(l, a, b) {\n    this.l = +l;\n    this.a = +a;\n    this.b = +b;\n  }\n\n  var ___prototype = lab.prototype = Lab.prototype = new Color;\n\n  ___prototype.brighter = function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b);\n  };\n\n  ___prototype.darker = function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b);\n  };\n\n  ___prototype.rgb = function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z)\n    );\n  };\n\n  function xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n  }\n\n  function lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n  }\n\n  function xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n  }\n\n  function rgb2xyz(x) {\n    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  }\n\n  var deg2rad = Math.PI / 180;\n  var rad2deg = 180 / Math.PI;\n\n  function hcl(h, c, l) {\n    if (arguments.length === 1) {\n      if (h instanceof Hcl) {\n        l = h.l;\n        c = h.c;\n        h = h.h;\n      } else {\n        if (!(h instanceof Lab)) h = lab(h);\n        l = h.l;\n        c = Math.sqrt(h.a * h.a + h.b * h.b);\n        h = Math.atan2(h.b, h.a) * rad2deg;\n        if (h < 0) h += 360;\n      }\n    }\n    return new Hcl(h, c, l);\n  }\n\n  function Hcl(h, c, l) {\n    this.h = +h;\n    this.c = +c;\n    this.l = +l;\n  }\n\n  var ____prototype = hcl.prototype = Hcl.prototype = new Color;\n\n  ____prototype.brighter = function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k));\n  };\n\n  ____prototype.darker = function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k));\n  };\n\n  ____prototype.rgb = function() {\n    return lab(this).rgb();\n  };\n\n  var A = -0.14861;\n  var B = +1.78277;\n  var C = -0.29227;\n  var D = -0.90649;\n  var E = +1.97294;\n  var ED = E * D;\n  var EB = E * B;\n  var BC_DA = B * C - D * A;\n\n  function cubehelix(h, s, l) {\n    if (arguments.length === 1) {\n      if (h instanceof Cubehelix) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n      } else {\n        if (!(h instanceof Rgb)) h = rgb(h);\n        var r = h.r / 255, g = h.g / 255, b = h.b / 255;\n        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB);\n        var bl = b - l, k = (E * (g - l) - C * bl) / D;\n        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)); // NaN if l=0 or l=1\n        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n        if (h < 0) h += 360;\n      }\n    }\n    return new Cubehelix(h, s, l);\n  }\n\n  function Cubehelix(h, s, l) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n  }\n\n  var prototype = cubehelix.prototype = Cubehelix.prototype = new Color;\n\n  prototype.brighter = function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k);\n  };\n\n  prototype.darker = function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k);\n  };\n\n  prototype.rgb = function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh))\n    );\n  };\n\n  function interpolateCubehelixGamma(gamma) {\n    return function(a, b) {\n      a = cubehelix(a);\n      b = cubehelix(b);\n      var ah = isNaN(a.h) ? b.h : a.h,\n          as = isNaN(a.s) ? b.s : a.s,\n          al = a.l,\n          bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n          bs = isNaN(b.s) ? 0 : b.s - as,\n          bl = b.l - al;\n      return function(t) {\n        a.h = ah + bh * t;\n        a.s = as + bs * t;\n        a.l = al + bl * Math.pow(t, gamma);\n        return a + \"\";\n      };\n    };\n  }\n\n  function interpolateCubehelixGammaLong(gamma) {\n    return function(a, b) {\n      a = cubehelix(a);\n      b = cubehelix(b);\n      var ah = isNaN(a.h) ? b.h : a.h,\n          as = isNaN(a.s) ? b.s : a.s,\n          al = a.l,\n          bh = isNaN(b.h) ? 0 : b.h - ah,\n          bs = isNaN(b.s) ? 0 : b.s - as,\n          bl = b.l - al;\n      return function(t) {\n        a.h = ah + bh * t;\n        a.s = as + bs * t;\n        a.l = al + bl * Math.pow(t, gamma);\n        return a + \"\";\n      };\n    };\n  }\n\n  function interpolateHclLong(a, b) {\n    a = hcl(a);\n    b = hcl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        ac = isNaN(a.c) ? b.c : a.c,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : b.h - ah,\n        bc = isNaN(b.c) ? 0 : b.c - ac,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.c = ac + bc * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n\n  function interpolateHcl(a, b) {\n    a = hcl(a);\n    b = hcl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        ac = isNaN(a.c) ? b.c : a.c,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n        bc = isNaN(b.c) ? 0 : b.c - ac,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.c = ac + bc * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n\n  function interpolateLab(a, b) {\n    a = lab(a);\n    b = lab(b);\n    var al = a.l,\n        aa = a.a,\n        ab = a.b,\n        bl = b.l - al,\n        ba = b.a - aa,\n        bb = b.b - ab;\n    return function(t) {\n      a.l = al + bl * t;\n      a.a = aa + ba * t;\n      a.b = ab + bb * t;\n      return a + \"\";\n    };\n  }\n\n  function interpolateHslLong(a, b) {\n    a = hsl(a);\n    b = hsl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        as = isNaN(a.s) ? b.s : a.s,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : b.h - ah,\n        bs = isNaN(b.s) ? 0 : b.s - as,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.s = as + bs * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n\n  function interpolateHsl(a, b) {\n    a = hsl(a);\n    b = hsl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        as = isNaN(a.s) ? b.s : a.s,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n        bs = isNaN(b.s) ? 0 : b.s - as,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.s = as + bs * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n\n  function interpolateRgb(a, b) {\n    a = rgb(a);\n    b = rgb(b);\n    var ar = a.r,\n        ag = a.g,\n        ab = a.b,\n        br = b.r - ar,\n        bg = b.g - ag,\n        bb = b.b - ab;\n    return function(t) {\n      return format(Math.round(ar + br * t), Math.round(ag + bg * t), Math.round(ab + bb * t));\n    };\n  }\n\n  exports.interpolateCubehelix = interpolateCubehelixGamma(1);\n  exports.interpolateCubehelixLong = interpolateCubehelixGammaLong(1);\n\n  exports.color = color;\n  exports.rgb = rgb;\n  exports.hsl = hsl;\n  exports.lab = lab;\n  exports.hcl = hcl;\n  exports.cubehelix = cubehelix;\n  exports.interpolateRgb = interpolateRgb;\n  exports.interpolateHsl = interpolateHsl;\n  exports.interpolateHslLong = interpolateHslLong;\n  exports.interpolateLab = interpolateLab;\n  exports.interpolateHcl = interpolateHcl;\n  exports.interpolateHclLong = interpolateHclLong;\n  exports.interpolateCubehelixGamma = interpolateCubehelixGamma;\n  exports.interpolateCubehelixGammaLong = interpolateCubehelixGammaLong;\n\n}));","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  factory((global.format = {}));\n}(this, function (exports) { 'use strict';\n\n  var zhCn = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"¥\", \"\"]\n  };\n\n  var ruRu = {\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0руб.\"]\n  };\n\n  var ptBr = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"R$\", \"\"]\n  };\n\n  var plPl = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"zł\"]\n  };\n\n  var nlNl = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"€\\xa0\", \"\"]\n  };\n\n  var mkMk = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0ден.\"]\n  };\n\n  var jaJp = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"\", \"円\"]\n  };\n\n  var itIt = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"€\", \"\"]\n  };\n\n  var heIl = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"₪\", \"\"]\n  };\n\n  var frFr = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n  var frCa = {\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"$\"]\n  };\n\n  var fiFi = {\n    decimal: \",\",\n    thousands: \"\\xa0\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n  var esEs = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n  var enUs = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  };\n\n  var enGb = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"£\", \"\"]\n  };\n\n  var enCa = {\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  };\n\n  var deDe = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n  var caEs = {\n    decimal: \",\",\n    thousands: \".\",\n    grouping: [3],\n    currency: [\"\", \"\\xa0€\"]\n  };\n\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  }\n\n  function exponent(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  }\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, p + i - 1)[0]; // less than 1y!\n  }\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  }\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  }\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  }\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  }\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity(x) {\n    return x;\n  }\n\n  function locale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function format(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      return function(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            var i = -1, n = value.length, c;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      };\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = format((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: format,\n      formatPrefix: formatPrefix\n    };\n  }\n\n  function precisionRound(step, max) {\n    return Math.max(0, exponent(Math.abs(max)) - exponent(Math.abs(step))) + 1;\n  }\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n  }\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent(Math.abs(step)));\n  }\n\n  var localeDefinitions = {\n    \"ca-ES\": caEs,\n    \"de-DE\": deDe,\n    \"en-CA\": enCa,\n    \"en-GB\": enGb,\n    \"en-US\": enUs,\n    \"es-ES\": esEs,\n    \"fi-FI\": fiFi,\n    \"fr-CA\": frCa,\n    \"fr-FR\": frFr,\n    \"he-IL\": heIl,\n    \"it-IT\": itIt,\n    \"ja-JP\": jaJp,\n    \"mk-MK\": mkMk,\n    \"nl-NL\": nlNl,\n    \"pl-PL\": plPl,\n    \"pt-BR\": ptBr,\n    \"ru-RU\": ruRu,\n    \"zh-CN\": zhCn\n  };\n\n  var defaultLocale = locale(enUs);\n  exports.format = defaultLocale.format;\n  exports.formatPrefix = defaultLocale.formatPrefix;\n\n  function localeFormat(definition) {\n    if (typeof definition === \"string\") {\n      if (!localeDefinitions.hasOwnProperty(definition)) return null;\n      definition = localeDefinitions[definition];\n    }\n    return locale(definition);\n  }\n  ;\n\n  exports.localeFormat = localeFormat;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n\n}));","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  factory((global.timeFormat = {}));\n}(this, function (exports) { 'use strict';\n\n  var zhCn = {\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%Y/%-m/%-d\",\n    time: \"%H:%M:%S\",\n    periods: [\"上午\", \"下午\"],\n    days: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n    shortDays: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n    months: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\n    shortMonths: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"]\n  };\n\n  var ruRu = {\n    dateTime: \"%A, %e %B %Y г. %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"воскресенье\", \"понедельник\", \"вторник\", \"среда\", \"четверг\", \"пятница\", \"суббота\"],\n    shortDays: [\"вс\", \"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\"],\n    months: [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"],\n    shortMonths: [\"янв\", \"фев\", \"мар\", \"апр\", \"май\", \"июн\", \"июл\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"]\n  };\n\n  var ptBr = {\n    dateTime: \"%A, %e de %B de %Y. %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\n    shortDays: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\n    months: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n    shortMonths: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"]\n  };\n\n  var plPl = {\n    dateTime: \"%A, %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Niedziela\", \"Poniedziałek\", \"Wtorek\", \"Środa\", \"Czwartek\", \"Piątek\", \"Sobota\"],\n    shortDays: [\"Niedz.\", \"Pon.\", \"Wt.\", \"Śr.\", \"Czw.\", \"Pt.\", \"Sob.\"],\n    months: [\"Styczeń\", \"Luty\", \"Marzec\", \"Kwiecień\", \"Maj\", \"Czerwiec\", \"Lipiec\", \"Sierpień\", \"Wrzesień\", \"Październik\", \"Listopad\", \"Grudzień\"],\n    shortMonths: [\"Stycz.\", \"Luty\", \"Marz.\", \"Kwie.\", \"Maj\", \"Czerw.\", \"Lipc.\", \"Sierp.\", \"Wrz.\", \"Paźdz.\", \"Listop.\", \"Grudz.\"]/* In Polish language abbraviated months are not commonly used so there is a dispute about the proper abbraviations. */\n  };\n\n  var nlNl = {\n    dateTime: \"%a %e %B %Y %T\",\n    date: \"%d-%m-%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"zondag\", \"maandag\", \"dinsdag\", \"woensdag\", \"donderdag\", \"vrijdag\", \"zaterdag\"],\n    shortDays: [\"zo\", \"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\"],\n    months: [\"januari\", \"februari\", \"maart\", \"april\", \"mei\", \"juni\", \"juli\", \"augustus\", \"september\", \"oktober\", \"november\", \"december\"],\n    shortMonths: [\"jan\", \"feb\", \"mrt\", \"apr\", \"mei\", \"jun\", \"jul\", \"aug\", \"sep\", \"okt\", \"nov\", \"dec\"]\n  };\n\n  var mkMk = {\n    dateTime: \"%A, %e %B %Y г. %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"недела\", \"понеделник\", \"вторник\", \"среда\", \"четврток\", \"петок\", \"сабота\"],\n    shortDays: [\"нед\", \"пон\", \"вто\", \"сре\", \"чет\", \"пет\", \"саб\"],\n    months: [\"јануари\", \"февруари\", \"март\", \"април\", \"мај\", \"јуни\", \"јули\", \"август\", \"септември\", \"октомври\", \"ноември\", \"декември\"],\n    shortMonths: [\"јан\", \"фев\", \"мар\", \"апр\", \"мај\", \"јун\", \"јул\", \"авг\", \"сеп\", \"окт\", \"ное\", \"дек\"]\n  };\n\n  var jaJp = {\n    dateTime: \"%Y %b %e %a %X\",\n    date: \"%Y/%m/%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"日曜日\", \"月曜日\", \"火曜日\", \"水曜日\", \"木曜日\", \"金曜日\", \"土曜日\"],\n    shortDays: [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"],\n    months: [\"睦月\", \"如月\", \"弥生\", \"卯月\", \"皐月\", \"水無月\", \"文月\", \"葉月\", \"長月\", \"神無月\", \"霜月\", \"師走\"],\n    shortMonths: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\", \"6月\", \"7月\", \"8月\", \"9月\", \"10月\", \"11月\", \"12月\"]\n  };\n\n  var itIt = {\n    dateTime: \"%A %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Domenica\", \"Lunedì\", \"Martedì\", \"Mercoledì\", \"Giovedì\", \"Venerdì\", \"Sabato\"],\n    shortDays: [\"Dom\", \"Lun\", \"Mar\", \"Mer\", \"Gio\", \"Ven\", \"Sab\"],\n    months: [\"Gennaio\", \"Febbraio\", \"Marzo\", \"Aprile\", \"Maggio\", \"Giugno\", \"Luglio\", \"Agosto\", \"Settembre\", \"Ottobre\", \"Novembre\", \"Dicembre\"],\n    shortMonths: [\"Gen\", \"Feb\", \"Mar\", \"Apr\", \"Mag\", \"Giu\", \"Lug\", \"Ago\", \"Set\", \"Ott\", \"Nov\", \"Dic\"]\n  };\n\n  var heIl = {\n    dateTime: \"%A, %e ב%B %Y %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"ראשון\", \"שני\", \"שלישי\", \"רביעי\", \"חמישי\", \"שישי\", \"שבת\"],\n    shortDays: [\"א׳\", \"ב׳\", \"ג׳\", \"ד׳\", \"ה׳\", \"ו׳\", \"ש׳\"],\n    months: [\"ינואר\", \"פברואר\", \"מרץ\", \"אפריל\", \"מאי\", \"יוני\", \"יולי\", \"אוגוסט\", \"ספטמבר\", \"אוקטובר\", \"נובמבר\", \"דצמבר\"],\n    shortMonths: [\"ינו׳\", \"פבר׳\", \"מרץ\", \"אפר׳\", \"מאי\", \"יוני\", \"יולי\", \"אוג׳\", \"ספט׳\", \"אוק׳\", \"נוב׳\", \"דצמ׳\"]\n  };\n\n  var frFr = {\n    dateTime: \"%A, le %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"],\n    shortDays: [\"dim.\", \"lun.\", \"mar.\", \"mer.\", \"jeu.\", \"ven.\", \"sam.\"],\n    months: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    shortMonths: [\"janv.\", \"févr.\", \"mars\", \"avr.\", \"mai\", \"juin\", \"juil.\", \"août\", \"sept.\", \"oct.\", \"nov.\", \"déc.\"]\n  };\n\n  var frCa = {\n    dateTime: \"%a %e %b %Y %X\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"\", \"\"],\n    days: [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"],\n    shortDays: [\"dim\", \"lun\", \"mar\", \"mer\", \"jeu\", \"ven\", \"sam\"],\n    months: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    shortMonths: [\"jan\", \"fév\", \"mar\", \"avr\", \"mai\", \"jui\", \"jul\", \"aoû\", \"sep\", \"oct\", \"nov\", \"déc\"]\n  };\n\n  var fiFi = {\n    dateTime: \"%A, %-d. %Bta %Y klo %X\",\n    date: \"%-d.%-m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"a.m.\", \"p.m.\"],\n    days: [\"sunnuntai\", \"maanantai\", \"tiistai\", \"keskiviikko\", \"torstai\", \"perjantai\", \"lauantai\"],\n    shortDays: [\"Su\", \"Ma\", \"Ti\", \"Ke\", \"To\", \"Pe\", \"La\"],\n    months: [\"tammikuu\", \"helmikuu\", \"maaliskuu\", \"huhtikuu\", \"toukokuu\", \"kesäkuu\", \"heinäkuu\", \"elokuu\", \"syyskuu\", \"lokakuu\", \"marraskuu\", \"joulukuu\"],\n    shortMonths: [\"Tammi\", \"Helmi\", \"Maalis\", \"Huhti\", \"Touko\", \"Kesä\", \"Heinä\", \"Elo\", \"Syys\", \"Loka\", \"Marras\", \"Joulu\"]\n  };\n\n  var esEs = {\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"domingo\", \"lunes\", \"martes\", \"miércoles\", \"jueves\", \"viernes\", \"sábado\"],\n    shortDays: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    months: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n    shortMonths: [\"ene\", \"feb\", \"mar\", \"abr\", \"may\", \"jun\", \"jul\", \"ago\", \"sep\", \"oct\", \"nov\", \"dic\"]\n  };\n\n  var enUs = {\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  var enGb = {\n    dateTime: \"%a %e %b %X %Y\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  var enCa = {\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  var deDe = {\n    dateTime: \"%A, der %e. %B %Y, %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"],\n    shortDays: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n    months: [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mrz\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dez\"]\n  };\n\n  var caEs = {\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"diumenge\", \"dilluns\", \"dimarts\", \"dimecres\", \"dijous\", \"divendres\", \"dissabte\"],\n    shortDays: [\"dg.\", \"dl.\", \"dt.\", \"dc.\", \"dj.\", \"dv.\", \"ds.\"],\n    months: [\"gener\", \"febrer\", \"març\", \"abril\", \"maig\", \"juny\", \"juliol\", \"agost\", \"setembre\", \"octubre\", \"novembre\", \"desembre\"],\n    shortMonths: [\"gen.\", \"febr.\", \"març\", \"abr.\", \"maig\", \"juny\", \"jul.\", \"ag.\", \"set.\", \"oct.\", \"nov.\", \"des.\"]\n  };\n\n  var t0 = new Date;\n  var t1 = new Date;\n\n  function newInterval(floori, offseti, count) {\n\n    function interval(date) {\n      return floori(date = new Date(+date)), date;\n    }\n\n    interval.floor = interval;\n\n    interval.round = function(date) {\n      var d0 = new Date(+date),\n          d1 = new Date(date - 1);\n      floori(d0), floori(d1), offseti(d1, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.ceil = function(date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), date;\n    };\n\n    interval.offset = function(date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function(start, stop, step) {\n      var range = [];\n      start = new Date(start - 1);\n      stop = new Date(+stop);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n      offseti(start, 1), floori(start);\n      if (start < stop) range.push(new Date(+start));\n      while (offseti(start, step), floori(start), start < stop) range.push(new Date(+start));\n      return range;\n    };\n\n    interval.filter = function(test) {\n      return newInterval(function(date) {\n        while (floori(date), !test(date)) date.setTime(date - 1);\n      }, function(date, step) {\n        while (--step >= 0) while (offseti(date, 1), !test(date));\n      });\n    };\n\n    if (count) interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    return interval;\n  }\n\n  var day = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 864e5;\n  });\n\n  function weekday(i) {\n    return newInterval(function(date) {\n      date.setHours(0, 0, 0, 0);\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function(start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 6048e5;\n    });\n  }\n\n  var sunday = weekday(0);\n  var monday = weekday(1);\n\n  var year = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setMonth(0, 1);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function(start, end) {\n    return end.getFullYear() - start.getFullYear();\n  });\n\n  var utcDay = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function(start, end) {\n    return (end - start) / 864e5;\n  });\n\n  function utcWeekday(i) {\n    return newInterval(function(date) {\n      date.setUTCHours(0, 0, 0, 0);\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function(start, end) {\n      return (end - start) / 6048e5;\n    });\n  }\n\n  var utcSunday = utcWeekday(0);\n  var utcMonday = utcWeekday(1);\n\n  var utcYear = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCMonth(0, 1);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function(start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  });\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newYear(y) {\n    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n  }\n\n  function locale(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    var periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"S\": formatSeconds,\n      \"U\": formatWeekNumberSunday,\n      \"w\": formatWeekdayNumber,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"S\": formatUTCSeconds,\n      \"U\": formatUTCWeekNumberSunday,\n      \"w\": formatUTCWeekdayNumber,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"S\": parseSeconds,\n      \"U\": parseWeekNumberSunday,\n      \"w\": parseWeekdayNumber,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    };\n\n    // These recursive directive definitions must be deferred.\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n            if (format = formats[c]) c = format(date, pad == null ? (c === \"e\" ? \" \" : \"0\") : pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, newDate) {\n      return function(string) {\n        var d = newYear(1900),\n            i = parseSpecifier(d, specifier, string, 0);\n        if (i != string.length) return null;\n\n        // The am-pm flag is 0 for AM, and 1 for PM.\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n        // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n        if (\"Z\" in d) {\n          if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n            var day = utcDate(newYear(d.y)).getUTCDay();\n            if (\"W\" in d) d.U = d.W, d.w = (d.w + 6) % 7, --day;\n            d.m = 0;\n            d.d = d.w + d.U * 7 - (day + 6) % 7;\n          }\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        }\n\n        // Otherwise, all fields are in local time.\n        if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          var day = newDate(newYear(d.y)).getDay();\n          if (\"W\" in d) d.U = d.W, d.w = (d.w + 6) % 7, --day;\n          d.m = 0;\n          d.d = d.w + d.U * 7 - (day + 6) % 7;\n        }\n        return newDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodLookup[string.slice(i, i += 2).toLowerCase()];\n      return n == null ? -1 : (d.p = n, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    return {\n      format: function(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n        f.parse = newParse(specifier, localDate);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      utcFormat: function(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n        f.parse = newParse(specifier, utcDate);\n        f.toString = function() { return specifier; };\n        return f;\n      }\n    };\n  }\n\n  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n  var numberRe = /^\\s*\\d+/;\n  var percentRe = /^%/;\n  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\n  function pad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    var map = {}, i = -1, n = names.length;\n    while (++i < n) map[names[i].toLowerCase()] = i;\n    return map;\n  }\n\n  function parseWeekdayNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n    if (n) {\n      d.Z = n[1] ? 0              // 'Z' for UTC\n          : n[3] ? -(n[2] + n[3]) // sign differs from getTimezoneOffset!\n                 : -n[2] * 100;\n      return i + n[0].length;\n    }\n    return -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad(1 + day.count(year(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad(sunday.count(year(d), d), p, 2);\n  }\n\n  function formatWeekdayNumber(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad(monday.count(year(d), d), p, 2);\n  }\n\n  function formatYear(d, p) {\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n        + pad(z / 60 | 0, \"0\", 2)\n        + pad(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad(utcSunday.count(utcYear(d), d), p, 2);\n  }\n\n  function formatUTCWeekdayNumber(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad(utcMonday.count(utcYear(d), d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  formatIsoNative.toString = function() {\n    return isoSpecifier;\n  };\n\n  var formatIso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\")\n      ? formatIsoNative\n      : enUs.utcFormat(isoSpecifier);\n\n  var isoFormat = formatIso;\n\n  var localeDefinitions = {\n    \"ca-ES\": caEs,\n    \"de-DE\": deDe,\n    \"en-CA\": enCa,\n    \"en-GB\": enGb,\n    \"en-US\": enUs,\n    \"es-ES\": esEs,\n    \"fi-FI\": fiFi,\n    \"fr-CA\": frCa,\n    \"fr-FR\": frFr,\n    \"he-IL\": heIl,\n    \"it-IT\": itIt,\n    \"ja-JP\": jaJp,\n    \"mk-MK\": mkMk,\n    \"nl-NL\": nlNl,\n    \"pl-PL\": plPl,\n    \"pt-BR\": ptBr,\n    \"ru-RU\": ruRu,\n    \"zh-CN\": zhCn\n  };\n\n  var defaultLocale = locale(enUs);\n  exports.format = defaultLocale.format;\n  exports.utcFormat = defaultLocale.utcFormat;\n\n  function localeFormat(definition) {\n    if (typeof definition === \"string\") {\n      if (!localeDefinitions.hasOwnProperty(definition)) return null;\n      definition = localeDefinitions[definition];\n    }\n    return locale(definition);\n  }\n  ;\n\n  exports.localeFormat = localeFormat;\n  exports.isoFormat = isoFormat;\n\n}));","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  factory((global.dsv = {}));\n}(this, function (exports) { 'use strict';\n\n  var dsv = function(delimiter) {\n    var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    function parse(text, f) {\n      var o;\n      return parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) { return f(a(row), i); } : a;\n      });\n    }\n\n    function parseRows(text, f) {\n      var EOL = {}, // sentinel value for end-of-line\n          EOF = {}, // sentinel value for end-of-file\n          rows = [], // output rows\n          N = text.length,\n          I = 0, // current character index\n          n = 0, // the current line number\n          t, // the current token\n          eol; // is the current token followed by EOL?\n\n      function token() {\n        if (I >= N) return EOF; // special case: end of file\n        if (eol) return eol = false, EOL; // special case: end of line\n\n        // special case: quotes\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n        }\n\n        // common case: find next delimiter or newline\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; // \\n\n          else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n          else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        // special case: last token before EOF\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    }\n\n    function format(rows) {\n      if (Array.isArray(rows[0])) return formatRows(rows); // deprecated; use formatRows\n      var fieldSet = Object.create(null), fields = [];\n\n      // Compute unique fields in order of discovery.\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!((field += \"\") in fieldSet)) {\n            fields.push(fieldSet[field] = field);\n          }\n        }\n      });\n\n      return [fields.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    }\n\n    function formatRows(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    }\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return reFormat.test(text) ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\" : text;\n    }\n\n    return {\n      parse: parse,\n      parseRows: parseRows,\n      format: format,\n      formatRows: formatRows\n    };\n  }\n\n  exports.csv = dsv(\",\");\n  exports.tsv = dsv(\"\\t\");\n\n  exports.dsv = dsv;\n\n}));","if (typeof Map === \"undefined\") {\n  Map = function() { this.clear(); };\n  Map.prototype = {\n    set: function(k, v) { this._[k] = v; return this; },\n    get: function(k) { return this._[k]; },\n    has: function(k) { return k in this._; },\n    delete: function(k) { return k in this._ && delete this._[k]; },\n    clear: function() { this._ = Object.create(null); },\n    get size() { var n = 0; for (var k in this._) ++n; return n; },\n    forEach: function(c) { for (var k in this._) c(this._[k], k, this); }\n  };\n} else (function() {\n  var m = new Map;\n  if (m.set(0, 0) !== m) {\n    m = m.set;\n    Map.prototype.set = function() { m.apply(this, arguments); return this; };\n  }\n})();\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  factory((global.timeFormat = {}));\n}(this, function (exports) { 'use strict';\n\n  var zhCn = {\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%Y/%-m/%-d\",\n    time: \"%H:%M:%S\",\n    periods: [\"上午\", \"下午\"],\n    days: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n    shortDays: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n    months: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\n    shortMonths: [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"]\n  };\n\n  var ruRu = {\n    dateTime: \"%A, %e %B %Y г. %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"воскресенье\", \"понедельник\", \"вторник\", \"среда\", \"четверг\", \"пятница\", \"суббота\"],\n    shortDays: [\"вс\", \"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\"],\n    months: [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"],\n    shortMonths: [\"янв\", \"фев\", \"мар\", \"апр\", \"май\", \"июн\", \"июл\", \"авг\", \"сен\", \"окт\", \"ноя\", \"дек\"]\n  };\n\n  var ptBr = {\n    dateTime: \"%A, %e de %B de %Y. %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Domingo\", \"Segunda\", \"Terça\", \"Quarta\", \"Quinta\", \"Sexta\", \"Sábado\"],\n    shortDays: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\n    months: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n    shortMonths: [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"]\n  };\n\n  var plPl = {\n    dateTime: \"%A, %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Niedziela\", \"Poniedziałek\", \"Wtorek\", \"Środa\", \"Czwartek\", \"Piątek\", \"Sobota\"],\n    shortDays: [\"Niedz.\", \"Pon.\", \"Wt.\", \"Śr.\", \"Czw.\", \"Pt.\", \"Sob.\"],\n    months: [\"Styczeń\", \"Luty\", \"Marzec\", \"Kwiecień\", \"Maj\", \"Czerwiec\", \"Lipiec\", \"Sierpień\", \"Wrzesień\", \"Październik\", \"Listopad\", \"Grudzień\"],\n    shortMonths: [\"Stycz.\", \"Luty\", \"Marz.\", \"Kwie.\", \"Maj\", \"Czerw.\", \"Lipc.\", \"Sierp.\", \"Wrz.\", \"Paźdz.\", \"Listop.\", \"Grudz.\"]/* In Polish language abbraviated months are not commonly used so there is a dispute about the proper abbraviations. */\n  };\n\n  var nlNl = {\n    dateTime: \"%a %e %B %Y %T\",\n    date: \"%d-%m-%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"zondag\", \"maandag\", \"dinsdag\", \"woensdag\", \"donderdag\", \"vrijdag\", \"zaterdag\"],\n    shortDays: [\"zo\", \"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\"],\n    months: [\"januari\", \"februari\", \"maart\", \"april\", \"mei\", \"juni\", \"juli\", \"augustus\", \"september\", \"oktober\", \"november\", \"december\"],\n    shortMonths: [\"jan\", \"feb\", \"mrt\", \"apr\", \"mei\", \"jun\", \"jul\", \"aug\", \"sep\", \"okt\", \"nov\", \"dec\"]\n  };\n\n  var mkMk = {\n    dateTime: \"%A, %e %B %Y г. %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"недела\", \"понеделник\", \"вторник\", \"среда\", \"четврток\", \"петок\", \"сабота\"],\n    shortDays: [\"нед\", \"пон\", \"вто\", \"сре\", \"чет\", \"пет\", \"саб\"],\n    months: [\"јануари\", \"февруари\", \"март\", \"април\", \"мај\", \"јуни\", \"јули\", \"август\", \"септември\", \"октомври\", \"ноември\", \"декември\"],\n    shortMonths: [\"јан\", \"фев\", \"мар\", \"апр\", \"мај\", \"јун\", \"јул\", \"авг\", \"сеп\", \"окт\", \"ное\", \"дек\"]\n  };\n\n  var jaJp = {\n    dateTime: \"%Y %b %e %a %X\",\n    date: \"%Y/%m/%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"日曜日\", \"月曜日\", \"火曜日\", \"水曜日\", \"木曜日\", \"金曜日\", \"土曜日\"],\n    shortDays: [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"],\n    months: [\"睦月\", \"如月\", \"弥生\", \"卯月\", \"皐月\", \"水無月\", \"文月\", \"葉月\", \"長月\", \"神無月\", \"霜月\", \"師走\"],\n    shortMonths: [\"1月\", \"2月\", \"3月\", \"4月\", \"5月\", \"6月\", \"7月\", \"8月\", \"9月\", \"10月\", \"11月\", \"12月\"]\n  };\n\n  var itIt = {\n    dateTime: \"%A %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Domenica\", \"Lunedì\", \"Martedì\", \"Mercoledì\", \"Giovedì\", \"Venerdì\", \"Sabato\"],\n    shortDays: [\"Dom\", \"Lun\", \"Mar\", \"Mer\", \"Gio\", \"Ven\", \"Sab\"],\n    months: [\"Gennaio\", \"Febbraio\", \"Marzo\", \"Aprile\", \"Maggio\", \"Giugno\", \"Luglio\", \"Agosto\", \"Settembre\", \"Ottobre\", \"Novembre\", \"Dicembre\"],\n    shortMonths: [\"Gen\", \"Feb\", \"Mar\", \"Apr\", \"Mag\", \"Giu\", \"Lug\", \"Ago\", \"Set\", \"Ott\", \"Nov\", \"Dic\"]\n  };\n\n  var heIl = {\n    dateTime: \"%A, %e ב%B %Y %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"ראשון\", \"שני\", \"שלישי\", \"רביעי\", \"חמישי\", \"שישי\", \"שבת\"],\n    shortDays: [\"א׳\", \"ב׳\", \"ג׳\", \"ד׳\", \"ה׳\", \"ו׳\", \"ש׳\"],\n    months: [\"ינואר\", \"פברואר\", \"מרץ\", \"אפריל\", \"מאי\", \"יוני\", \"יולי\", \"אוגוסט\", \"ספטמבר\", \"אוקטובר\", \"נובמבר\", \"דצמבר\"],\n    shortMonths: [\"ינו׳\", \"פבר׳\", \"מרץ\", \"אפר׳\", \"מאי\", \"יוני\", \"יולי\", \"אוג׳\", \"ספט׳\", \"אוק׳\", \"נוב׳\", \"דצמ׳\"]\n  };\n\n  var frFr = {\n    dateTime: \"%A, le %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"],\n    shortDays: [\"dim.\", \"lun.\", \"mar.\", \"mer.\", \"jeu.\", \"ven.\", \"sam.\"],\n    months: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    shortMonths: [\"janv.\", \"févr.\", \"mars\", \"avr.\", \"mai\", \"juin\", \"juil.\", \"août\", \"sept.\", \"oct.\", \"nov.\", \"déc.\"]\n  };\n\n  var frCa = {\n    dateTime: \"%a %e %b %Y %X\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"\", \"\"],\n    days: [\"dimanche\", \"lundi\", \"mardi\", \"mercredi\", \"jeudi\", \"vendredi\", \"samedi\"],\n    shortDays: [\"dim\", \"lun\", \"mar\", \"mer\", \"jeu\", \"ven\", \"sam\"],\n    months: [\"janvier\", \"février\", \"mars\", \"avril\", \"mai\", \"juin\", \"juillet\", \"août\", \"septembre\", \"octobre\", \"novembre\", \"décembre\"],\n    shortMonths: [\"jan\", \"fév\", \"mar\", \"avr\", \"mai\", \"jui\", \"jul\", \"aoû\", \"sep\", \"oct\", \"nov\", \"déc\"]\n  };\n\n  var fiFi = {\n    dateTime: \"%A, %-d. %Bta %Y klo %X\",\n    date: \"%-d.%-m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"a.m.\", \"p.m.\"],\n    days: [\"sunnuntai\", \"maanantai\", \"tiistai\", \"keskiviikko\", \"torstai\", \"perjantai\", \"lauantai\"],\n    shortDays: [\"Su\", \"Ma\", \"Ti\", \"Ke\", \"To\", \"Pe\", \"La\"],\n    months: [\"tammikuu\", \"helmikuu\", \"maaliskuu\", \"huhtikuu\", \"toukokuu\", \"kesäkuu\", \"heinäkuu\", \"elokuu\", \"syyskuu\", \"lokakuu\", \"marraskuu\", \"joulukuu\"],\n    shortMonths: [\"Tammi\", \"Helmi\", \"Maalis\", \"Huhti\", \"Touko\", \"Kesä\", \"Heinä\", \"Elo\", \"Syys\", \"Loka\", \"Marras\", \"Joulu\"]\n  };\n\n  var esEs = {\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"domingo\", \"lunes\", \"martes\", \"miércoles\", \"jueves\", \"viernes\", \"sábado\"],\n    shortDays: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    months: [\"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\", \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"],\n    shortMonths: [\"ene\", \"feb\", \"mar\", \"abr\", \"may\", \"jun\", \"jul\", \"ago\", \"sep\", \"oct\", \"nov\", \"dic\"]\n  };\n\n  var enUs = {\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  var enGb = {\n    dateTime: \"%a %e %b %X %Y\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  var enCa = {\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%Y-%m-%d\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  };\n\n  var deDe = {\n    dateTime: \"%A, der %e. %B %Y, %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"], // unused\n    days: [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"],\n    shortDays: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n    months: [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mrz\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Okt\", \"Nov\", \"Dez\"]\n  };\n\n  var caEs = {\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"diumenge\", \"dilluns\", \"dimarts\", \"dimecres\", \"dijous\", \"divendres\", \"dissabte\"],\n    shortDays: [\"dg.\", \"dl.\", \"dt.\", \"dc.\", \"dj.\", \"dv.\", \"ds.\"],\n    months: [\"gener\", \"febrer\", \"març\", \"abril\", \"maig\", \"juny\", \"juliol\", \"agost\", \"setembre\", \"octubre\", \"novembre\", \"desembre\"],\n    shortMonths: [\"gen.\", \"febr.\", \"març\", \"abr.\", \"maig\", \"juny\", \"jul.\", \"ag.\", \"set.\", \"oct.\", \"nov.\", \"des.\"]\n  };\n\n  var t0 = new Date;\n  var t1 = new Date;\n\n  function newInterval(floori, offseti, count) {\n\n    function interval(date) {\n      return floori(date = new Date(+date)), date;\n    }\n\n    interval.floor = interval;\n\n    interval.round = function(date) {\n      var d0 = new Date(+date),\n          d1 = new Date(date - 1);\n      floori(d0), floori(d1), offseti(d1, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.ceil = function(date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), date;\n    };\n\n    interval.offset = function(date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function(start, stop, step) {\n      var range = [];\n      start = new Date(start - 1);\n      stop = new Date(+stop);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n      offseti(start, 1), floori(start);\n      if (start < stop) range.push(new Date(+start));\n      while (offseti(start, step), floori(start), start < stop) range.push(new Date(+start));\n      return range;\n    };\n\n    interval.filter = function(test) {\n      return newInterval(function(date) {\n        while (floori(date), !test(date)) date.setTime(date - 1);\n      }, function(date, step) {\n        while (--step >= 0) while (offseti(date, 1), !test(date));\n      });\n    };\n\n    if (count) interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    return interval;\n  }\n\n  var day = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 864e5;\n  });\n\n  function weekday(i) {\n    return newInterval(function(date) {\n      date.setHours(0, 0, 0, 0);\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function(start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 6048e5;\n    });\n  }\n\n  var sunday = weekday(0);\n  var monday = weekday(1);\n\n  var year = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setMonth(0, 1);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function(start, end) {\n    return end.getFullYear() - start.getFullYear();\n  });\n\n  var utcDay = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function(start, end) {\n    return (end - start) / 864e5;\n  });\n\n  function utcWeekday(i) {\n    return newInterval(function(date) {\n      date.setUTCHours(0, 0, 0, 0);\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function(start, end) {\n      return (end - start) / 6048e5;\n    });\n  }\n\n  var utcSunday = utcWeekday(0);\n  var utcMonday = utcWeekday(1);\n\n  var utcYear = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCMonth(0, 1);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function(start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  });\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newYear(y) {\n    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n  }\n\n  function locale(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    var periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"S\": formatSeconds,\n      \"U\": formatWeekNumberSunday,\n      \"w\": formatWeekdayNumber,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"S\": formatUTCSeconds,\n      \"U\": formatUTCWeekNumberSunday,\n      \"w\": formatUTCWeekdayNumber,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"S\": parseSeconds,\n      \"U\": parseWeekNumberSunday,\n      \"w\": parseWeekdayNumber,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    };\n\n    // These recursive directive definitions must be deferred.\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n            if (format = formats[c]) c = format(date, pad == null ? (c === \"e\" ? \" \" : \"0\") : pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, newDate) {\n      return function(string) {\n        var d = newYear(1900),\n            i = parseSpecifier(d, specifier, string, 0);\n        if (i != string.length) return null;\n\n        // The am-pm flag is 0 for AM, and 1 for PM.\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n        // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n        if (\"Z\" in d) {\n          if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n            var day = utcDate(newYear(d.y)).getUTCDay();\n            if (\"W\" in d) d.U = d.W, d.w = (d.w + 6) % 7, --day;\n            d.m = 0;\n            d.d = d.w + d.U * 7 - (day + 6) % 7;\n          }\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        }\n\n        // Otherwise, all fields are in local time.\n        if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          var day = newDate(newYear(d.y)).getDay();\n          if (\"W\" in d) d.U = d.W, d.w = (d.w + 6) % 7, --day;\n          d.m = 0;\n          d.d = d.w + d.U * 7 - (day + 6) % 7;\n        }\n        return newDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (d.p = n, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    return {\n      format: function(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n        f.parse = newParse(specifier, localDate);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      utcFormat: function(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n        f.parse = newParse(specifier, utcDate);\n        f.toString = function() { return specifier; };\n        return f;\n      }\n    };\n  }\n\n  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n  var numberRe = /^\\s*\\d+/;\n  var percentRe = /^%/;\n  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\n  function pad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    var map = new Map, i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n\n  function parseWeekdayNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5))\n        ? (d.Z = -string, i + 5) // sign differs from getTimezoneOffset!\n        : -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad(1 + day.count(year(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad(sunday.count(year(d), d), p, 2);\n  }\n\n  function formatWeekdayNumber(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad(monday.count(year(d), d), p, 2);\n  }\n\n  function formatYear(d, p) {\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n        + pad(z / 60 | 0, \"0\", 2)\n        + pad(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad(utcSunday.count(utcYear(d), d), p, 2);\n  }\n\n  function formatUTCWeekdayNumber(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad(utcMonday.count(utcYear(d), d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  formatIsoNative.toString = function() {\n    return isoSpecifier;\n  };\n\n  var formatIso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\")\n      ? formatIsoNative\n      : enUs.utcFormat(isoSpecifier);\n\n  var isoFormat = formatIso;\n\n  var localeDefinitions = (new Map)\n      .set(\"ca-ES\", caEs)\n      .set(\"de-DE\", deDe)\n      .set(\"en-CA\", enCa)\n      .set(\"en-GB\", enGb)\n      .set(\"en-US\", enUs)\n      .set(\"es-ES\", esEs)\n      .set(\"fi-FI\", fiFi)\n      .set(\"fr-CA\", frCa)\n      .set(\"fr-FR\", frFr)\n      .set(\"he-IL\", heIl)\n      .set(\"it-IT\", itIt)\n      .set(\"ja-JP\", jaJp)\n      .set(\"mk-MK\", mkMk)\n      .set(\"nl-NL\", nlNl)\n      .set(\"pl-PL\", plPl)\n      .set(\"pt-BR\", ptBr)\n      .set(\"ru-RU\", ruRu)\n      .set(\"zh-CN\", zhCn);\n\n  var defaultLocale = locale(enUs);\n  exports.format = defaultLocale.format;\n  exports.utcFormat = defaultLocale.utcFormat;\n\n  function localeFormat(definition) {\n    if (typeof definition === \"string\") {\n      definition = localeDefinitions.get(definition);\n      if (!definition) return null;\n    }\n    return locale(definition);\n  }\n  ;\n\n  exports.localeFormat = localeFormat;\n  exports.isoFormat = isoFormat;\n\n}));","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  factory((global.time = {}));\n}(this, function (exports) { 'use strict';\n\n  var t1 = new Date;\n\n  var t0 = new Date;\n\n  function newInterval(floori, offseti, count) {\n\n    function interval(date) {\n      return floori(date = new Date(+date)), date;\n    }\n\n    interval.floor = interval;\n\n    interval.round = function(date) {\n      var d0 = new Date(+date),\n          d1 = new Date(date - 1);\n      floori(d0), floori(d1), offseti(d1, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.ceil = function(date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), date;\n    };\n\n    interval.offset = function(date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function(start, stop, step) {\n      var range = [];\n      start = new Date(start - 1);\n      stop = new Date(+stop);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n      offseti(start, 1), floori(start);\n      if (start < stop) range.push(new Date(+start));\n      while (offseti(start, step), floori(start), start < stop) range.push(new Date(+start));\n      return range;\n    };\n\n    interval.filter = function(test) {\n      return newInterval(function(date) {\n        while (floori(date), !test(date)) date.setTime(date - 1);\n      }, function(date, step) {\n        while (--step >= 0) while (offseti(date, 1), !test(date));\n      });\n    };\n\n    if (count) interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    return interval;\n  }\n\n  var second = newInterval(function(date) {\n    date.setMilliseconds(0);\n  }, function(date, step) {\n    date.setTime(+date + step * 1e3);\n  }, function(start, end) {\n    return (end - start) / 1e3;\n  });\n\n  exports.seconds = second.range;\n\n  var minute = newInterval(function(date) {\n    date.setSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 6e4);\n  }, function(start, end) {\n    return (end - start) / 6e4;\n  });\n\n  exports.minutes = minute.range;\n\n  var hour = newInterval(function(date) {\n    date.setMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 36e5);\n  }, function(start, end) {\n    return (end - start) / 36e5;\n  });\n\n  exports.hours = hour.range;\n\n  var day = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 864e5;\n  });\n\n  exports.days = day.range;\n\n  function weekday(i) {\n    return newInterval(function(date) {\n      date.setHours(0, 0, 0, 0);\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function(start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * 6e4) / 6048e5;\n    });\n  }\n\n  exports.sunday = weekday(0);\n\n  exports.sundays = exports.sunday.range;\n\n  exports.monday = weekday(1);\n\n  exports.mondays = exports.monday.range;\n\n  exports.tuesday = weekday(2);\n\n  exports.tuesdays = exports.tuesday.range;\n\n  exports.wednesday = weekday(3);\n\n  exports.wednesdays = exports.wednesday.range;\n\n  exports.thursday = weekday(4);\n\n  exports.thursdays = exports.thursday.range;\n\n  exports.friday = weekday(5);\n\n  exports.fridays = exports.friday.range;\n\n  exports.saturday = weekday(6);\n\n  exports.saturdays = exports.saturday.range;\n\n  var week = exports.sunday;\n\n  exports.weeks = week.range;\n\n  var month = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setDate(1);\n  }, function(date, step) {\n    date.setMonth(date.getMonth() + step);\n  }, function(start, end) {\n    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n  });\n\n  exports.months = month.range;\n\n  var year = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n    date.setMonth(0, 1);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function(start, end) {\n    return end.getFullYear() - start.getFullYear();\n  });\n\n  exports.years = year.range;\n\n  var utcSecond = newInterval(function(date) {\n    date.setUTCMilliseconds(0);\n  }, function(date, step) {\n    date.setTime(+date + step * 1e3);\n  }, function(start, end) {\n    return (end - start) / 1e3;\n  });\n\n  exports.utcSeconds = utcSecond.range;\n\n  var utcMinute = newInterval(function(date) {\n    date.setUTCSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 6e4);\n  }, function(start, end) {\n    return (end - start) / 6e4;\n  });\n\n  exports.utcMinutes = utcMinute.range;\n\n  var utcHour = newInterval(function(date) {\n    date.setUTCMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * 36e5);\n  }, function(start, end) {\n    return (end - start) / 36e5;\n  });\n\n  exports.utcHours = utcHour.range;\n\n  var utcDay = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function(start, end) {\n    return (end - start) / 864e5;\n  });\n\n  exports.utcDays = utcDay.range;\n\n  function utcWeekday(i) {\n    return newInterval(function(date) {\n      date.setUTCHours(0, 0, 0, 0);\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    }, function(date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function(start, end) {\n      return (end - start) / 6048e5;\n    });\n  }\n\n  exports.utcSunday = utcWeekday(0);\n\n  exports.utcSundays = exports.utcSunday.range;\n\n  exports.utcMonday = utcWeekday(1);\n\n  exports.utcMondays = exports.utcMonday.range;\n\n  exports.utcTuesday = utcWeekday(2);\n\n  exports.utcTuesdays = exports.utcTuesday.range;\n\n  exports.utcWednesday = utcWeekday(3);\n\n  exports.utcWednesdays = exports.utcWednesday.range;\n\n  exports.utcThursday = utcWeekday(4);\n\n  exports.utcThursdays = exports.utcThursday.range;\n\n  exports.utcFriday = utcWeekday(5);\n\n  exports.utcFridays = exports.utcFriday.range;\n\n  exports.utcSaturday = utcWeekday(6);\n\n  exports.utcSaturdays = exports.utcSaturday.range;\n\n  var utcWeek = exports.utcSunday;\n\n  exports.utcWeeks = utcWeek.range;\n\n  var utcMonth = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCDate(1);\n  }, function(date, step) {\n    date.setUTCMonth(date.getUTCMonth() + step);\n  }, function(start, end) {\n    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n  });\n\n  exports.utcMonths = utcMonth.range;\n\n  var utcYear = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n    date.setUTCMonth(0, 1);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function(start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  });\n\n  exports.utcYears = utcYear.range;\n\n  exports.interval = newInterval;\n  exports.second = second;\n  exports.minute = minute;\n  exports.hour = hour;\n  exports.day = day;\n  exports.week = week;\n  exports.month = month;\n  exports.year = year;\n  exports.utcSecond = utcSecond;\n  exports.utcMinute = utcMinute;\n  exports.utcHour = utcHour;\n  exports.utcDay = utcDay;\n  exports.utcWeek = utcWeek;\n  exports.utcMonth = utcMonth;\n  exports.utcYear = utcYear;\n\n}));","var util = require('../util'),\n    Measures = require('./measures'),\n    Collector = require('./collector');\n\nfunction Aggregator() {\n  this._cells = {};\n  this._aggr = [];\n  this._stream = false;\n}\n\nvar Flags = Aggregator.Flags = {\n  ADD_CELL: 1,\n  MOD_CELL: 2\n};\n\nvar proto = Aggregator.prototype;\n\n// Parameters\n\nproto.stream = function(v) {\n  if (v == null) return this._stream;\n  this._stream = !!v;\n  this._aggr = [];\n  return this;\n};\n\n// key accessor to use for streaming removes\nproto.key = function(key) {\n  if (key == null) return this._key;\n  this._key = util.$(key);\n  return this;\n};\n\n// Input: array of objects of the form\n// {name: string, get: function}\nproto.groupby = function(dims) {\n  this._dims = util.array(dims).map(function(d, i) {\n    d = util.isString(d) ? {name: d, get: util.$(d)}\n      : util.isFunction(d) ? {name: util.name(d) || d.name || ('_' + i), get: d}\n      : (d.name && util.isFunction(d.get)) ? d : null;\n    if (d == null) throw 'Invalid groupby argument: ' + d;\n    return d;\n  });\n  return this.clear();\n};\n\n// Input: array of objects of the form\n// {name: string, ops: [string, ...]}\nproto.summarize = function(fields) {\n  fields = summarize_args(fields);\n  this._count = true;\n  var aggr = (this._aggr = []),\n      m, f, i, j, op, as, get;\n\n  for (i=0; i<fields.length; ++i) {\n    for (j=0, m=[], f=fields[i]; j<f.ops.length; ++j) {\n      op = f.ops[j];\n      if (op !== 'count') this._count = false;\n      as = (f.as && f.as[j]) || (op + (f.name==='*' ? '' : '_'+f.name));\n      m.push(Measures[op](as));\n    }\n    get = f.get && util.$(f.get) ||\n      (f.name === '*' ? util.identity : util.$(f.name));\n    aggr.push({\n      name: f.name,\n      measures: Measures.create(\n        m,\n        this._stream, // streaming remove flag\n        get,          // input tuple getter\n        this._assign) // output tuple setter\n    });\n  }\n  return this.clear();\n};\n\n// Convenience method to summarize by count\nproto.count = function() {\n  return this.summarize({'*':'count'});\n};\n\n// Override to perform custom tuple value assignment\nproto._assign = function(object, name, value) {\n  object[name] = value;\n};\n\nfunction summarize_args(fields) {\n  if (util.isArray(fields)) { return fields; }\n  if (fields == null) { return []; }\n  var a = [], name, ops;\n  for (name in fields) {\n    ops = util.array(fields[name]);\n    a.push({name: name, ops: ops});\n  }\n  return a;\n}\n\n// Cell Management\n\nproto.clear = function() {\n  return (this._cells = {}, this);\n};\n\nproto._cellkey = function(x) {\n  var d = this._dims,\n      n = d.length, i,\n      k = String(d[0].get(x));\n  for (i=1; i<n; ++i) {\n    k += '|' + d[i].get(x);\n  }\n  return k;\n};\n\nproto._cell = function(x) {\n  var key = this._dims.length ? this._cellkey(x) : '';\n  return this._cells[key] || (this._cells[key] = this._newcell(x, key));\n};\n\nproto._newcell = function(x, key) {\n  var cell = {\n    num:   0,\n    tuple: this._newtuple(x, key),\n    flag:  Flags.ADD_CELL,\n    aggs:  {}\n  };\n\n  var aggr = this._aggr, i;\n  for (i=0; i<aggr.length; ++i) {\n    cell.aggs[aggr[i].name] = new aggr[i].measures(cell, cell.tuple);\n  }\n  if (cell.collect) {\n    cell.data = new Collector(this._key);\n  }\n  return cell;\n};\n\nproto._newtuple = function(x) {\n  var dims = this._dims,\n      t = {}, i, n;\n  for (i=0, n=dims.length; i<n; ++i) {\n    t[dims[i].name] = dims[i].get(x);\n  }\n  return this._ingest(t);\n};\n\n// Override to perform custom tuple ingestion\nproto._ingest = util.identity;\n\n// Process Tuples\n\nproto._add = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num += 1;\n  if (!this._count) { // skip if count-only\n    if (cell.collect) cell.data.add(x);\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].add(x);\n    }\n  }\n  cell.flag |= Flags.MOD_CELL;\n  if (this._on_add) this._on_add(x, cell);\n};\n\nproto._rem = function(x) {\n  var cell = this._cell(x),\n      aggr = this._aggr, i;\n\n  cell.num -= 1;\n  if (!this._count) { // skip if count-only\n    if (cell.collect) cell.data.rem(x);\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].rem(x);\n    }\n  }\n  cell.flag |= Flags.MOD_CELL;\n  if (this._on_rem) this._on_rem(x, cell);\n};\n\nproto._mod = function(curr, prev) {\n  var cell0 = this._cell(prev),\n      cell1 = this._cell(curr),\n      aggr = this._aggr, i;\n\n  if (cell0 !== cell1) {\n    cell0.num -= 1;\n    cell1.num += 1;\n    if (cell0.collect) cell0.data.rem(prev);\n    if (cell1.collect) cell1.data.add(curr);\n  } else if (cell0.collect && !util.isObject(curr)) {\n    cell0.data.rem(prev);\n    cell0.data.add(curr);\n  }\n\n  for (i=0; i<aggr.length; ++i) {\n    cell0.aggs[aggr[i].name].rem(prev);\n    cell1.aggs[aggr[i].name].add(curr);\n  }\n  cell0.flag |= Flags.MOD_CELL;\n  cell1.flag |= Flags.MOD_CELL;\n  if (this._on_mod) this._on_mod(curr, prev, cell0, cell1);\n};\n\nproto.result = function() {\n  var result = [],\n      aggr = this._aggr,\n      cell, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    if (cell.num > 0) {\n      // consolidate collector values\n      if (cell.collect) {\n        cell.data.values();\n      }\n      // update tuple properties\n      for (i=0; i<aggr.length; ++i) {\n        cell.aggs[aggr[i].name].set();\n      }\n      // add output tuple\n      result.push(cell.tuple);\n    } else {\n      delete this._cells[k];\n    }\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return result;\n};\n\nproto.changes = function(output) {\n  var changes = output || {add:[], rem:[], mod:[]},\n      aggr = this._aggr,\n      cell, flag, i, k;\n\n  for (k in this._cells) {\n    cell = this._cells[k];\n    flag = cell.flag;\n\n    // consolidate collector values\n    if (cell.collect) {\n      cell.data.values();\n    }\n\n    // update tuple properties\n    for (i=0; i<aggr.length; ++i) {\n      cell.aggs[aggr[i].name].set();\n    }\n\n    // organize output tuples\n    if (cell.num <= 0) {\n      changes.rem.push(cell.tuple); // if (flag === Flags.MOD_CELL) { ??\n      delete this._cells[k];\n      if (this._on_drop) this._on_drop(cell);\n    } else {\n      if (this._on_keep) this._on_keep(cell);\n      if (flag & Flags.ADD_CELL) {\n        changes.add.push(cell.tuple);\n      } else if (flag & Flags.MOD_CELL) {\n        changes.mod.push(cell.tuple);\n      }\n    }\n\n    cell.flag = 0;\n  }\n\n  this._rems = false;\n  return changes;\n};\n\nproto.execute = function(input) {\n  return this.clear().insert(input).result();\n};\n\nproto.insert = function(input) {\n  this._consolidate();\n  for (var i=0; i<input.length; ++i) {\n    this._add(input[i]);\n  }\n  return this;\n};\n\nproto.remove = function(input) {\n  if (!this._stream) {\n    throw 'Aggregator not configured for streaming removes.' +\n      ' Call stream(true) prior to calling summarize.';\n  }\n  for (var i=0; i<input.length; ++i) {\n    this._rem(input[i]);\n  }\n  this._rems = true;\n  return this;\n};\n\n// consolidate removals\nproto._consolidate = function() {\n  if (!this._rems) return;\n  for (var k in this._cells) {\n    if (this._cells[k].collect) {\n      this._cells[k].data.values();\n    }\n  }\n  this._rems = false;\n};\n\nmodule.exports = Aggregator;","var util = require('../util');\nvar stats = require('../stats');\n\nvar REM = '__dl_rem__';\n\nfunction Collector(key) {\n  this._add = [];\n  this._rem = [];\n  this._key = key || null;\n  this._last = null;\n}\n\nvar proto = Collector.prototype;\n\nproto.add = function(v) {\n  this._add.push(v);\n};\n\nproto.rem = function(v) {\n  this._rem.push(v);\n};\n\nproto.values = function() {\n  this._get = null;\n  if (this._rem.length === 0) return this._add;\n\n  var a = this._add,\n      r = this._rem,\n      k = this._key,\n      x = Array(a.length - r.length),\n      i, j, n, m;\n\n  if (!util.isObject(r[0])) {\n    // processing raw values\n    m = stats.count.map(r);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (m[a[i]] > 0) {\n        m[a[i]] -= 1;\n      } else {\n        x[j++] = a[i];\n      }\n    }\n  } else if (k) {\n    // has unique key field, so use that\n    m = util.toMap(r, k);\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!m.hasOwnProperty(k(a[i]))) { x[j++] = a[i]; }\n    }\n  } else {\n    // no unique key, mark tuples directly\n    for (i=0, n=r.length; i<n; ++i) {\n      r[i][REM] = 1;\n    }\n    for (i=0, j=0, n=a.length; i<n; ++i) {\n      if (!a[i][REM]) { x[j++] = a[i]; }\n    }\n    for (i=0, n=r.length; i<n; ++i) {\n      delete r[i][REM];\n    }\n  }\n\n  this._rem = [];\n  return (this._add = x);\n};\n\n// memoizing statistics methods\n\nproto.extent = function(get) {\n  if (this._get !== get || !this._ext) {\n    var v = this.values(),\n        i = stats.extent.index(v, get);\n    this._ext = [v[i[0]], v[i[1]]];\n    this._get = get;    \n  }\n  return this._ext;\n};\n\nproto.argmin = function(get) {\n  return this.extent(get)[0];\n};\n\nproto.argmax = function(get) {\n  return this.extent(get)[1];\n};\n\nproto.min = function(get) {\n  var m = this.extent(get)[0];\n  return m ? get(m) : +Infinity;\n};\n\nproto.max = function(get) {\n  var m = this.extent(get)[1];\n  return m ? get(m) : -Infinity;\n};\n\nproto.quartile = function(get) {\n  if (this._get !== get || !this._q) {\n    this._q = stats.quartile(this.values(), get);\n    this._get = get;    \n  }\n  return this._q;\n};\n\nproto.q1 = function(get) {\n  return this.quartile(get)[0];\n};\n\nproto.q2 = function(get) {\n  return this.quartile(get)[1];\n};\n\nproto.q3 = function(get) {\n  return this.quartile(get)[2];\n};\n\nmodule.exports = Collector;\n","var util = require('../util');\nvar Aggregator = require('./aggregator');\n\nmodule.exports = function() {\n  // flatten arguments into a single array\n  var args = [].reduce.call(arguments, function(a, x) {\n    return a.concat(util.array(x));\n  }, []);\n  // create and return an aggregator\n  return new Aggregator()\n    .groupby(args)\n    .summarize({'*':'values'});\n};\n","var util = require('../util');\n\nvar types = {\n  'values': measure({\n    name: 'values',\n    init: 'cell.collect = true;',\n    set:  'cell.data.values()', idx: -1\n  }),\n  'count': measure({\n    name: 'count',\n    set:  'cell.num'\n  }),\n  'missing': measure({\n    name: 'missing',\n    set:  'this.missing'\n  }),\n  'valid': measure({\n    name: 'valid',\n    set:  'this.valid'\n  }),\n  'sum': measure({\n    name: 'sum',\n    init: 'this.sum = 0;',\n    add:  'this.sum += v;',\n    rem:  'this.sum -= v;',\n    set:  'this.sum'\n  }),\n  'mean': measure({\n    name: 'mean',\n    init: 'this.mean = 0;',\n    add:  'var d = v - this.mean; this.mean += d / this.valid;',\n    rem:  'var d = v - this.mean; this.mean -= this.valid ? d / this.valid : this.mean;',\n    set:  'this.mean'\n  }),\n  'average': measure({\n    name: 'average',\n    set:  'this.mean',\n    req:  ['mean'], idx: 1\n  }),\n  'variance': measure({\n    name: 'variance',\n    init: 'this.dev = 0;',\n    add:  'this.dev += d * (v - this.mean);',\n    rem:  'this.dev -= d * (v - this.mean);',\n    set:  'this.valid > 1 ? this.dev / (this.valid-1) : 0',\n    req:  ['mean'], idx: 1\n  }),\n  'variancep': measure({\n    name: 'variancep',\n    set:  'this.valid > 1 ? this.dev / this.valid : 0',\n    req:  ['variance'], idx: 2\n  }),\n  'stdev': measure({\n    name: 'stdev',\n    set:  'this.valid > 1 ? Math.sqrt(this.dev / (this.valid-1)) : 0',\n    req:  ['variance'], idx: 2\n  }),\n  'stdevp': measure({\n    name: 'stdevp',\n    set:  'this.valid > 1 ? Math.sqrt(this.dev / this.valid) : 0',\n    req:  ['variance'], idx: 2\n  }),\n  'median': measure({\n    name: 'median',\n    set:  'cell.data.q2(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q1': measure({\n    name: 'q1',\n    set:  'cell.data.q1(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'q3': measure({\n    name: 'q3',\n    set:  'cell.data.q3(this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'distinct': measure({\n    name: 'distinct',\n    set:  'this.distinct(cell.data.values(), this.get)',\n    req:  ['values'], idx: 3\n  }),\n  'argmin': measure({\n    name: 'argmin',\n    add:  'if (v < this.min) this.argmin = t;',\n    rem:  'if (v <= this.min) this.argmin = null;',\n    set:  'this.argmin = this.argmin || cell.data.argmin(this.get)',\n    req:  ['min'], str: ['values'], idx: 3\n  }),\n  'argmax': measure({\n    name: 'argmax',\n    add:  'if (v > this.max) this.argmax = t;',\n    rem:  'if (v >= this.max) this.argmax = null;',\n    set:  'this.argmax = this.argmax || cell.data.argmax(this.get)',\n    req:  ['max'], str: ['values'], idx: 3\n  }),\n  'min': measure({\n    name: 'min',\n    init: 'this.min = +Infinity;',\n    add:  'if (v < this.min) this.min = v;',\n    rem:  'if (v <= this.min) this.min = NaN;',\n    set:  'this.min = (isNaN(this.min) ? cell.data.min(this.get) : this.min)',\n    str:  ['values'], idx: 4\n  }),\n  'max': measure({\n    name: 'max',\n    init: 'this.max = -Infinity;',\n    add:  'if (v > this.max) this.max = v;',\n    rem:  'if (v >= this.max) this.max = NaN;',\n    set:  'this.max = (isNaN(this.max) ? cell.data.max(this.get) : this.max)',\n    str:  ['values'], idx: 4\n  }),\n  'modeskew': measure({\n    name: 'modeskew',\n    set:  'this.dev===0 ? 0 : (this.mean - cell.data.q2(this.get)) / Math.sqrt(this.dev/(this.valid-1))',\n    req:  ['mean', 'stdev', 'median'], idx: 5\n  })\n};\n\nfunction measure(base) {\n  return function(out) {\n    var m = util.extend({init:'', add:'', rem:'', idx:0}, base);\n    m.out = out || base.name;\n    return m;\n  };\n}\n\nfunction resolve(agg, stream) {\n  function collect(m, a) {\n    function helper(r) { if (!m[r]) collect(m, m[r] = types[r]()); }\n    if (a.req) a.req.forEach(helper);\n    if (stream && a.str) a.str.forEach(helper);\n    return m;\n  }\n  var map = agg.reduce(\n    collect,\n    agg.reduce(function(m, a) { return (m[a.name] = a, m); }, {})\n  );\n  return util.vals(map).sort(function(a, b) { return a.idx - b.idx; });\n}\n\nfunction create(agg, stream, accessor, mutator) {\n  var all = resolve(agg, stream),\n      ctr = 'this.cell = cell; this.tuple = t; this.valid = 0; this.missing = 0;',\n      add = 'if (v==null) this.missing++; if (!this.isValid(v)) return; ++this.valid;',\n      rem = 'if (v==null) this.missing--; if (!this.isValid(v)) return; --this.valid;',\n      set = 'var t = this.tuple; var cell = this.cell;';\n\n  all.forEach(function(a) {\n    if (a.idx < 0) {\n      ctr = a.init + ctr;\n      add = a.add + add;\n      rem = a.rem + rem;\n    } else {\n      ctr += a.init;\n      add += a.add;\n      rem += a.rem;\n    }\n  });\n  agg.slice()\n    .sort(function(a, b) { return a.idx - b.idx; })\n    .forEach(function(a) {\n      set += 'this.assign(t,\\''+a.out+'\\','+a.set+');';\n    });\n  set += 'return t;';\n\n  /* jshint evil: true */\n  ctr = Function('cell', 't', ctr);\n  ctr.prototype.assign = mutator;\n  ctr.prototype.add = Function('t', 'var v = this.get(t);' + add);\n  ctr.prototype.rem = Function('t', 'var v = this.get(t);' + rem);\n  ctr.prototype.set = Function(set);\n  ctr.prototype.get = accessor;\n  ctr.prototype.distinct = require('../stats').count.distinct;\n  ctr.prototype.isValid = util.isValid;\n  ctr.fields = agg.map(util.$('out'));\n  return ctr;\n}\n\ntypes.create = create;\nmodule.exports = types;","var util = require('../util'),\n    time = require('../time'),\n    EPSILON = 1e-15;\n\nfunction bins(opt) {\n  if (!opt) { throw Error(\"Missing binning options.\"); }\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],      \n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n    \n    // increase step size if too many bins\n    do { step *= base; } while (Math.ceil(span/step) > maxb);\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  if (!opt) { throw Error(\"Missing date binning options.\"); }\n\n  // find time step, then bin\n  var units = opt.utc ? time.utc : time,\n      dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n","var bins = require('./bins'),\n    gen  = require('../generate'),\n    type = require('../import/type'),\n    util = require('../util'),\n    stats = require('../stats');\n\nvar qtype = {\n  'integer': 1,\n  'number': 1,\n  'date': 1\n};\n\nfunction $bin(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return !b ? (opt.accessor || util.identity) :\n    util.$func('bin', b.unit.unit ?\n      function(x) { return b.value(b.unit.unit(x)); } :\n      function(x) { return b.value(x); }\n    )(opt.accessor);\n}\n\nfunction histogram(values, f, opt) {\n  opt = options(values, f, opt);\n  var b = spec(opt);\n  return b ?\n    numerical(values, opt.accessor, b) :\n    categorical(values, opt.accessor, opt && opt.sort);\n}\n\nfunction spec(opt) {\n  var t = opt.type, b = null;\n  if (t == null || qtype[t]) {\n    if (t === 'integer' && opt.minstep == null) opt.minstep = 1;\n    b = (t === 'date') ? bins.date(opt) : bins(opt);\n  }\n  return b;\n}\n\nfunction options() {\n  var a = arguments,\n      i = 0,\n      values = util.isArray(a[i]) ? a[i++] : null,\n      f = util.isFunction(a[i]) || util.isString(a[i]) ? util.$(a[i++]) : null,\n      opt = util.extend({}, a[i]);\n  \n  if (values) {\n    opt.type = opt.type || type(values, f);\n    if (qtype[opt.type]) {\n      var ext = stats.extent(values, f);\n      opt = util.extend({min: ext[0], max: ext[1]}, opt);\n    }\n  }\n  if (f) { opt.accessor = f; }\n  return opt;\n}\n\nfunction numerical(values, f, b) {\n  var h = gen.range(b.start, b.stop + b.step/2, b.step)\n    .map(function(v) { return {value: b.value(v), count: 0}; });\n\n  for (var i=0, v, j; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      j = b.index(v);\n      if (j < 0 || j >= h.length || !isFinite(j)) continue;\n      h[j].count += 1;\n    }\n  }\n  h.bins = b;\n  return h;\n}\n\nfunction categorical(values, f, sort) {\n  var u = stats.unique(values, f),\n      c = stats.count.map(values, f);\n  return u.map(function(k) { return {value: k, count: c[k]}; })\n    .sort(util.comparator(sort ? '-count' : '+value'));\n}\n\nmodule.exports = {\n  $bin: $bin,\n  histogram: histogram\n};","var d3_time = require('d3-time'),\n    d3_timeF = require('d3-time-format'),\n    d3_numberF = require('d3-format'),\n    numberF = d3_numberF, // defaults to EN-US\n    timeF = d3_timeF;     // defaults to EN-US\n\nfunction numberLocale(l) {\n  var f = d3_numberF.localeFormat(l);\n  if (f == null) throw Error('Unrecognized locale: ' + l);\n  numberF = f;\n}\n\nfunction timeLocale(l) {\n  var f = d3_timeF.localeFormat(l);\n  if (f == null) throw Error('Unrecognized locale: ' + l);\n  timeF = f;\n}\n\nmodule.exports = {\n  // Update number formatter to use provided locale configuration.\n  // For more see https://github.com/d3/d3-format\n  numberLocale: numberLocale,\n  number:       function(f) { return numberF.format(f); },\n  numberPrefix: function(f, v) { return numberF.formatPrefix(f, v); },\n\n  // Update time formatter to use provided locale configuration.\n  // For more see https://github.com/d3/d3-time-format\n  timeLocale:   timeLocale,\n  time:         function(f) { return timeF.format(f); },  \n  utc:          function(f) { return timeF.utcFormat(f); },\n\n  // Set number and time locale simultaneously.\n  locale:       function(l) { numberLocale(l); timeLocale(l); },\n\n  // automatic formatting functions\n  auto: {\n    number:   numberAutoFormat,\n    time:     function() { return timeAutoFormat(); },\n    utc:      function() { return utcAutoFormat(); }\n  }\n};\n\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction intervals(domain, count) {\n  if (!domain.length) domain = [0];\n  if (count == null) count = 10;\n\n  var start = domain[0],\n      stop = domain[domain.length - 1];\n\n  if (stop < start) { error = stop; stop = start; start = error; }\n\n  var span = (stop - start) || (count = 1, start || stop || 1),\n      step = Math.pow(10, Math.floor(Math.log(span / count) / Math.LN10)),\n      error = span / count / step;\n\n  // Filter ticks to get closer to the desired count.\n  if (error >= e10) step *= 10;\n  else if (error >= e5) step *= 5;\n  else if (error >= e2) step *= 2;\n\n  // Round start and stop values to step interval.\n  return [\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  ];\n}\n\nfunction numberAutoFormat(domain, count, f) {\n  var range = intervals(domain, count);\n  if (f == null) {\n    f = ',.' + d3_numberF.precisionFixed(range[2]) + 'f';\n  } else {\n    switch (f = d3_numberF.formatSpecifier(f), f.type) {\n      case 's': {\n        var value = Math.max(Math.abs(range[0]), Math.abs(range[1]));\n        if (f.precision == null) f.precision = d3_numberF.precisionPrefix(range[2], value);\n        return numberF.formatPrefix(f, value);\n      }\n      case '':\n      case 'e':\n      case 'g':\n      case 'p':\n      case 'r': {\n        if (f.precision == null) f.precision = d3_numberF.precisionRound(range[2], Math.max(Math.abs(range[0]), Math.abs(range[1]))) - (f.type === 'e');\n        break;\n      }\n      case 'f':\n      case '%': {\n        if (f.precision == null) f.precision = d3_numberF.precisionFixed(range[2]) - (f.type === '%') * 2;\n        break;\n      }\n    }\n  }\n  return numberF.format(f);\n}\n\nfunction timeAutoFormat() {\n  var f = timeF.format,\n      formatMillisecond = f('.%L'),\n      formatSecond = f(':%S'),\n      formatMinute = f('%I:%M'),\n      formatHour = f('%I %p'),\n      formatDay = f('%a %d'),\n      formatWeek = f('%b %d'),\n      formatMonth = f('%B'),\n      formatYear = f('%Y');\n\n  return function(date) {\n    var d = +date;\n    return (d3_time.second(date) < d ? formatMillisecond\n        : d3_time.minute(date) < d ? formatSecond\n        : d3_time.hour(date) < d ? formatMinute\n        : d3_time.day(date) < d ? formatHour\n        : d3_time.month(date) < d ?\n          (d3_time.week(date) < d ? formatDay : formatWeek)\n        : d3_time.year(date) < d ? formatMonth\n        : formatYear)(date);\n  };\n}\n\nfunction utcAutoFormat() {\n  var f = timeF.utcFormat,\n      formatMillisecond = f('.%L'),\n      formatSecond = f(':%S'),\n      formatMinute = f('%I:%M'),\n      formatHour = f('%I %p'),\n      formatDay = f('%a %d'),\n      formatWeek = f('%b %d'),\n      formatMonth = f('%B'),\n      formatYear = f('%Y');\n\n  return function(date) {\n    var d = +date;\n    return (d3_time.utcSecond(date) < d ? formatMillisecond\n        : d3_time.utcMinute(date) < d ? formatSecond\n        : d3_time.utcHour(date) < d ? formatMinute\n        : d3_time.utcDay(date) < d ? formatHour\n        : d3_time.utcMonth(date) < d ?\n          (d3_time.utcWeek(date) < d ? formatDay : formatWeek)\n        : d3_time.utcYear(date) < d ? formatMonth\n        : formatYear)(date);\n  };\n}\n","var gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min === undefined ? 1 : min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};","var util = require('../../util');\nvar d3_dsv = require('d3-dsv');\n\nfunction dsv(data, format) {\n  if (data) {\n    var h = format.header;\n    data = (h ? h.join(format.delimiter) + '\\n' : '') + data;\n  }\n  return d3_dsv.dsv(format.delimiter).parse(data);\n}\n\ndsv.delimiter = function(delim) {\n  var fmt = {delimiter: delim};\n  return function(data, format) {\n    return dsv(data, format ? util.extend(format, fmt) : fmt);\n  };\n};\n\nmodule.exports = dsv;","var dsv = require('./dsv');\n\nmodule.exports = {\n  json: require('./json'),\n  topojson: require('./topojson'),\n  treejson: require('./treejson'),\n  dsv: dsv,\n  csv: dsv.delimiter(','),\n  tsv: dsv.delimiter('\\t')\n};","var util = require('../../util');\n\nmodule.exports = function(data, format) {\n  var d = util.isObject(data) && !util.isBuffer(data) ?\n    data : JSON.parse(data);\n  if (format && format.property) {\n    d = util.accessor(format.property)(d);\n  }\n  return d;\n};\n","var json = require('./json');\n\nvar reader = function(data, format) {\n  var topojson = reader.topojson;\n  if (topojson == null) { throw Error('TopoJSON library not loaded.'); }\n\n  var t = json(data, format), obj;\n\n  if (format && format.feature) {\n    if ((obj = t.objects[format.feature])) {\n      return topojson.feature(t, obj).features;\n    } else {\n      throw Error('Invalid TopoJSON object: ' + format.feature);\n    }\n  } else if (format && format.mesh) {\n    if ((obj = t.objects[format.mesh])) {\n      return [topojson.mesh(t, t.objects[format.mesh])];\n    } else {\n      throw Error('Invalid TopoJSON object: ' + format.mesh);\n    }\n  } else {\n    throw Error('Missing TopoJSON feature or mesh parameter.');\n  }\n};\n\nreader.topojson = (typeof window !== \"undefined\" ? window['topojson'] : typeof global !== \"undefined\" ? global['topojson'] : null);\nmodule.exports = reader;","var json = require('./json');\n\nmodule.exports = function(data, format) {\n  data = json(data, format);\n  return toTable(data, (format && format.children));\n};\n\nfunction toTable(root, childrenField) {\n  childrenField = childrenField || 'children';\n  var table = [];\n  \n  function visit(node) {\n    table.push(node);\n    var children = node[childrenField];\n    if (children) {\n      for (var i=0; i<children.length; ++i) {\n        visit(children[i], node);\n      }\n    }\n  }\n  \n  visit(root, null);\n  return (table.root = root, table);\n}","// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nvar protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Special treatment in node.js for the file: protocol\nvar fileProtocol = 'file://';\n\n// Validate and cleanup URL to ensure that it is allowed to be accessed\n// Returns cleaned up URL, or false if access is not allowed\nfunction sanitizeUrl(opt) {\n  var url = opt.url;\n  if (!url && opt.file) { return fileProtocol + opt.file; }\n\n  // In case this is a relative url (has no host), prepend opt.baseURL\n  if (opt.baseURL && !protocol_re.test(url)) {\n    if (!startsWith(url, '/') && opt.baseURL[opt.baseURL.length-1] !== '/') {\n      url = '/' + url; // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    }\n    url = opt.baseURL + url;\n  }\n  // relative protocol, starts with '//'\n  if (!load.useXHR && startsWith(url, '//')) {\n    url = (opt.defaultProtocol || 'http') + ':' + url;\n  }\n  // If opt.domainWhiteList is set, only allows url, whose hostname\n  // * Is the same as the origin (window.location.hostname)\n  // * Equals one of the values in the whitelist\n  // * Is a proper subdomain of one of the values in the whitelist\n  if (opt.domainWhiteList) {\n    var domain, origin;\n    if (load.useXHR) {\n      var a = document.createElement('a');\n      a.href = url;\n      // From http://stackoverflow.com/questions/736513/how-do-i-parse-a-url-into-hostname-and-path-in-javascript\n      // IE doesn't populate all link properties when setting .href with a relative URL,\n      // however .href will return an absolute URL which then can be used on itself\n      // to populate these additional fields.\n      if (a.host === '') {\n        a.href = a.href;\n      }\n      domain = a.hostname.toLowerCase();\n      origin = window.location.hostname;\n    } else {\n      // relative protocol is broken: https://github.com/defunctzombie/node-url/issues/5\n      var parts = require('url').parse(url);\n      domain = parts.hostname;\n      origin = null;\n    }\n\n    if (origin !== domain) {\n      var whiteListed = opt.domainWhiteList.some(function(d) {\n        var idx = domain.length - d.length;\n        return d === domain ||\n          (idx > 1 && domain[idx-1] === '.' && domain.lastIndexOf(d) === idx);\n      });\n      if (!whiteListed) {\n        throw 'URL is not whitelisted: ' + url;\n      }\n    }\n  }\n  return url;\n}\n\nfunction load(opt, callback) {\n  var error = callback || function(e) { throw e; }, url;\n\n  try {\n    url = load.sanitizeUrl(opt); // enable override\n  } catch (err) {\n    error(err);\n    return;\n  }\n\n  if (!url) {\n    error('Invalid URL: ' + opt.url);\n  } else if (load.useXHR) {\n    // on client, use xhr\n    return xhr(url, callback);\n  } else if (startsWith(url, fileProtocol)) {\n    // on server, if url starts with 'file://', strip it and load from file\n    return file(url.slice(fileProtocol.length), callback);\n  } else if (url.indexOf('://') < 0) { // TODO better protocol check?\n    // on server, if no protocol assume file\n    return file(url, callback);\n  } else {\n    // for regular URLs on server\n    return http(url, callback);\n  }\n}\n\nfunction xhrHasResponse(request) {\n  var type = request.responseType;\n  return type && type !== 'text' ?\n    request.response : // null on error\n    request.responseText; // '' on error\n}\n\nfunction xhr(url, callback) {\n  var async = !!callback;\n  var request = new XMLHttpRequest();\n  // If IE does not support CORS, use XDomainRequest (copied from d3.xhr)\n  if (this.XDomainRequest &&\n      !('withCredentials' in request) &&\n      /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\n  function respond() {\n    var status = request.status;\n    if (!status && xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n      callback(null, request.responseText);\n    } else {\n      callback(request, null);\n    }\n  }\n\n  if (async) {\n    if ('onload' in request) {\n      request.onload = request.onerror = respond;\n    } else {\n      request.onreadystatechange = function() {\n        if (request.readyState > 3) respond();\n      };\n    }\n  }\n  \n  request.open('GET', url, async);\n  request.send();\n  \n  if (!async && xhrHasResponse(request)) {\n    return request.responseText;\n  }\n}\n\nfunction file(filename, callback) {\n  var fs = require('fs');\n  if (!callback) {\n    return fs.readFileSync(filename, 'utf8');\n  }\n  fs.readFile(filename, callback);\n}\n\nfunction http(url, callback) {\n  if (!callback) {\n    return require('sync-request')('GET', url).getBody();\n  }\n  \n  var options = {url: url, encoding: null, gzip: true};\n  require('request')(options, function(error, response, body) {\n    if (!error && response.statusCode === 200) {\n      callback(null, body);\n    } else {\n      error = error ||\n        'Load failed with response code ' + response.statusCode + '.';\n      callback(error, null);\n    }\n  });\n}\n\nfunction startsWith(string, searchString) {\n  return string == null ? false : string.lastIndexOf(searchString, 0) === 0;\n}\n\nload.sanitizeUrl = sanitizeUrl;\n\nload.useXHR = (typeof XMLHttpRequest !== 'undefined');\n\nmodule.exports = load;\n","var util = require('../util');\nvar type = require('./type');\nvar formats = require('./formats');\n\nfunction read(data, format) {\n  var type = (format && format.type) || 'json';\n  data = formats[type](data, format);\n  if (format && format.parse) parse(data, format.parse);\n  return data;\n}\n\nfunction parse(data, types) {\n  var cols, parsers, d, i, j, clen, len = data.length;\n\n  types = (types==='auto') ? type.inferAll(data) : util.duplicate(types);\n  cols = util.keys(types);\n  parsers = cols.map(function(c) { return type.parsers[types[c]]; });\n\n  for (i=0, clen=cols.length; i<len; ++i) {\n    d = data[i];\n    for (j=0; j<clen; ++j) {\n      d[cols[j]] = parsers[j](d[cols[j]]);\n    }\n  }\n  type.annotation(data, types);\n}\n\nread.formats = formats;\nmodule.exports = read;\n","var util = require('../util');\nvar load = require('./load');\nvar read = require('./read');\n\nmodule.exports = util\n  .keys(read.formats)\n  .reduce(function(out, type) {\n    out[type] = function(opt, format, callback) {\n      // process arguments\n      if (util.isString(opt)) { opt = {url: opt}; }\n      if (arguments.length === 2 && util.isFunction(format)) {\n        callback = format;\n        format = undefined;\n      }\n\n      // set up read format\n      format = util.extend({parse: 'auto'}, format);\n      format.type = type;\n\n      // load data\n      var data = load(opt, callback ? function(error, data) {\n        if (error) { callback(error, null); return; }\n        try {\n          // data loaded, now parse it (async)\n          data = read(data, format);\n          callback(null, data);\n        } catch (e) {\n          callback(e, null);\n        }\n      } : undefined);\n      \n      // data loaded, now parse it (sync)\n      if (!callback) return read(data, format);\n    };\n    return out;\n  }, {});\n","var util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x==='' ? null : x; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction type(values, f) {\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, f), types);\n  }, {});\n}\n\nfunction infer(values, f) {\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields) {\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    types[f] = infer(data, f);\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;","var util = require('./util');\n\nvar dl = {\n  version:    '1.4.6',\n  load:       require('./import/load'),\n  read:       require('./import/read'),\n  type:       require('./import/type'),\n  Aggregator: require('./aggregate/aggregator'),\n  groupby:    require('./aggregate/groupby'),\n  bins:       require('./bins/bins'),\n  $bin:       require('./bins/histogram').$bin,\n  histogram:  require('./bins/histogram').histogram,\n  format:     require('./format'),\n  print:      require('./print'),\n  template:   require('./template'),\n  time:       require('./time')\n};\n\nutil.extend(dl, util);\nutil.extend(dl, require('./generate'));\nutil.extend(dl, require('./stats'));\nutil.extend(dl, require('./import/readers'));\n\nmodule.exports = dl;","var util = require('./util');\nvar type = require('./import/type');\nvar stats = require('./stats');\nvar template = require('./template');\n\nvar FMT = {\n  'date':    '|time:\"%m/%d/%Y %H:%M:%S\"',\n  'number':  '|number:\".4f\"',\n  'integer': '|number:\"d\"'\n};\n\nvar POS = {\n  'number':  'left',\n  'integer': 'left'\n};\n\nmodule.exports.table = function(data, opt) {\n  opt = util.extend({separator:' ', minwidth: 8, maxwidth: 15}, opt);\n  var fields = opt.fields || util.keys(data[0]),\n      types = type.all(data);\n\n  if (opt.start || opt.limit) {\n    var a = opt.start || 0,\n        b = opt.limit ? a + opt.limit : data.length;\n    data = data.slice(a, b);\n  }\n\n  // determine char width of fields\n  var lens = fields.map(function(name) {\n    var format = FMT[types[name]] || '',\n        t = template('{{' + name + format + '}}'),\n        l = stats.max(data, function(x) { return t(x).length; });\n    l = Math.max(Math.min(name.length, opt.minwidth), l);\n    return opt.maxwidth > 0 ? Math.min(l, opt.maxwidth) : l;\n  });\n\n  // print header row\n  var head = fields.map(function(name, i) {\n    return util.truncate(util.pad(name, lens[i], 'center'), lens[i]);\n  }).join(opt.separator);\n\n  // build template function for each row\n  var tmpl = template(fields.map(function(name, i) {\n    return '{{' +\n      name +\n      (FMT[types[name]] || '') +\n      ('|pad:' + lens[i] + ',' + (POS[types[name]] || 'right')) +\n      ('|truncate:' + lens[i]) +\n    '}}';\n  }).join(opt.separator));\n\n  // print table\n  return head + \"\\n\" + data.map(tmpl).join('\\n');\n};\n\nmodule.exports.summary = function(s) {\n  s = s ? s.__summary__ ? s : stats.summary(s) : this;\n  var str = [], i, n;\n  for (i=0, n=s.length; i<n; ++i) {\n    str.push('-- ' + s[i].field + ' --');\n    if (s[i].type === 'string' || s[i].distinct < 10) {\n      str.push(printCategoricalProfile(s[i]));\n    } else {\n      str.push(printQuantitativeProfile(s[i]));\n    }\n    str.push('');\n  }\n  return str.join('\\n');\n};\n\nfunction printQuantitativeProfile(p) {\n  return [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'min:      ' + p.min,\n    'max:      ' + p.max,\n    'median:   ' + p.median,\n    'mean:     ' + p.mean,\n    'stdev:    ' + p.stdev,\n    'modeskew: ' + p.modeskew\n  ].join('\\n');\n}\n\nfunction printCategoricalProfile(p) {\n  var list = [\n    'valid:    ' + p.valid,\n    'missing:  ' + p.missing,\n    'distinct: ' + p.distinct,\n    'top values: '\n  ];\n  var u = p.unique;\n  var top = util.keys(u)\n    .sort(function(a,b) { return u[b] - u[a]; })\n    .slice(0, 6)\n    .map(function(v) { return ' \\'' + v + '\\' (' + u[v] + ')'; });\n  return list.concat(top).join('\\n');\n}","var util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\nvar stats = {};\n\n// Collect unique values.\n// Output: an array of unique values, in first-observed order\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    results.push(v);\n  }\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Construct a map from distinct values to occurrence counts.\nstats.count.map = function(values, f) {\n  f = util.$(f);\n  var map = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    map[v] = (v in map) ? map[v] + 1 : 1;\n  }\n  return map;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length < 2) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var x = -1, y = -1, a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (v === v) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (v === v) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, util.$(a)) : stats.rank(values),\n      rb = b ? stats.rank(values, util.$(b)) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance] \n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\nmodule.exports = stats;","var util = require('./util'),\n    format = require('./format');\n\nvar context = {\n  formats:    [],\n  format_map: {},\n  truncate:   util.truncate,\n  pad:        util.pad\n};\n\nfunction template(text) {\n  var src = source(text, 'd');\n  src = 'var __t; return ' + src + ';';\n\n  /* jshint evil: true */\n  return (new Function('d', src)).bind(context);\n}\n\ntemplate.source = source;\ntemplate.context = context;\nmodule.exports = template;\n\n// Clear cache of format objects.\n// This can *break* prior template functions, so invoke with care!\ntemplate.clearFormatCache = function() {\n  context.formats = [];\n  context.format_map = {};\n};\n\n// Generate property access code for use within template source.\n// object: the name of the object (variable) containing template data\n// property: the property access string, verbatim from template tag\ntemplate.property = function(object, property) {\n  var src = util.field(property).map(util.str).join('][');\n  return object + '[' + src + ']';\n};\n\n// Generate source code for a template function.\n// text: the template text\n// variable: the name of the data object variable ('obj' by default)\n// properties: optional hash for collecting all accessed properties\nfunction source(text, variable, properties) {\n  variable = variable || 'obj';\n  var index = 0;\n  var src = '\\'';\n  var regex = template_re;\n\n  // Compile the template source, escaping string literals appropriately.\n  text.replace(regex, function(match, interpolate, offset) {\n    src += text\n      .slice(index, offset)\n      .replace(template_escaper, template_escapeChar);\n    index = offset + match.length;\n\n    if (interpolate) {\n      src += '\\'\\n+((__t=(' +\n        template_var(interpolate, variable, properties) +\n        '))==null?\\'\\':__t)+\\n\\'';\n    }\n\n    // Adobe VMs need the match returned to produce the correct offest.\n    return match;\n  });\n  return src + '\\'';\n}\n\nfunction template_var(text, variable, properties) {\n  var filters = text.match(filter_re);\n  var prop = filters.shift().trim();\n  var stringCast = true;\n\n  function strcall(fn) {\n    fn = fn || '';\n    if (stringCast) {\n      stringCast = false;\n      src = 'String(' + src + ')' + fn;\n    } else {\n      src += fn;\n    }\n    return src;\n  }\n\n  function date() {\n    return '(typeof ' + src + '===\"number\"?new Date('+src+'):'+src+')';\n  }\n\n  function number_format(fmt, key) {\n    a = template_format(args[0], key, fmt);\n    stringCast = false;\n    src = 'this.formats['+a+']('+src+')';\n  }\n  \n  function time_format(fmt, key) {\n    a = template_format(args[0], key, fmt);\n    stringCast = false;\n    src = 'this.formats['+a+']('+date()+')';\n  }\n\n  if (properties) properties[prop] = 1;\n  var src = template.property(variable, prop);\n\n  for (var i=0; i<filters.length; ++i) {\n    var f = filters[i], args = null, pidx, a, b;\n\n    if ((pidx=f.indexOf(':')) > 0) {\n      f = f.slice(0, pidx);\n      args = filters[i].slice(pidx+1)\n        .match(args_re)\n        .map(function(s) { return s.trim(); });\n    }\n    f = f.trim();\n\n    switch (f) {\n      case 'length':\n        strcall('.length');\n        break;\n      case 'lower':\n        strcall('.toLowerCase()');\n        break;\n      case 'upper':\n        strcall('.toUpperCase()');\n        break;\n      case 'lower-locale':\n        strcall('.toLocaleLowerCase()');\n        break;\n      case 'upper-locale':\n        strcall('.toLocaleUpperCase()');\n        break;\n      case 'trim':\n        strcall('.trim()');\n        break;\n      case 'left':\n        a = util.number(args[0]);\n        strcall('.slice(0,' + a + ')');\n        break;\n      case 'right':\n        a = util.number(args[0]);\n        strcall('.slice(-' + a +')');\n        break;\n      case 'mid':\n        a = util.number(args[0]);\n        b = a + util.number(args[1]);\n        strcall('.slice(+'+a+','+b+')');\n        break;\n      case 'slice':\n        a = util.number(args[0]);\n        strcall('.slice('+ a +\n          (args.length > 1 ? ',' + util.number(args[1]) : '') +\n          ')');\n        break;\n      case 'truncate':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.truncate(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'pad':\n        a = util.number(args[0]);\n        b = args[1];\n        b = (b!=='left' && b!=='middle' && b!=='center') ? 'right' : b;\n        src = 'this.pad(' + strcall() + ',' + a + ',\\'' + b + '\\')';\n        break;\n      case 'number':\n        number_format(format.number, 'number');\n        break;\n      case 'time':\n        time_format(format.time, 'time');\n        break;\n      case 'time-utc':\n        time_format(format.utc, 'time-utc');\n        break;\n      default:\n        throw Error('Unrecognized template filter: ' + f);\n    }\n  }\n\n  return src;\n}\n\nvar template_re = /\\{\\{(.+?)\\}\\}|$/g,\n    filter_re = /(?:\"[^\"]*\"|\\'[^\\']*\\'|[^\\|\"]+|[^\\|\\']+)+/g,\n    args_re = /(?:\"[^\"]*\"|\\'[^\\']*\\'|[^,\"]+|[^,\\']+)+/g;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar template_escapes = {\n  '\\'':     '\\'',\n  '\\\\':     '\\\\',\n  '\\r':     'r',\n  '\\n':     'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar template_escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction template_escapeChar(match) {\n  return '\\\\' + template_escapes[match];\n}\n\nfunction template_format(pattern, key, fmt) {\n  if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n      (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n    pattern = pattern.slice(1, -1);\n  } else {\n    throw Error('Format pattern must be quoted: ' + pattern);\n  }\n  key = key + ':' + pattern;\n  if (!context.format_map[key]) {\n    var f = fmt(pattern);\n    var i = context.formats.length;\n    context.formats.push(f);\n    context.format_map[key] = i;\n  }\n  return context.format_map[key];\n}\n","var d3_time = require('d3-time');\n\nvar tempDate = new Date(),\n    baseDate = new Date(0, 0, 1).setFullYear(0), // Jan 1, 0 AD\n    utcBaseDate = new Date(Date.UTC(0, 0, 1)).setUTCFullYear(0);\n\nfunction date(d) {\n  return (tempDate.setTime(+d), tempDate);\n}\n\n// create a time unit entry\nfunction entry(type, date, unit, step, min, max) {\n  var e = {\n    type: type,\n    date: date,\n    unit: unit\n  };\n  if (step) {\n    e.step = step;\n  } else {\n    e.minstep = 1;\n  }\n  if (min != null) e.min = min;\n  if (max != null) e.max = max;\n  return e;\n}\n\nfunction create(type, unit, base, step, min, max) {\n  return entry(type,\n    function(d) { return unit.offset(base, d); },\n    function(d) { return unit.count(base, d); },\n    step, min, max);\n}\n\nvar locale = [\n  create('second', d3_time.second, baseDate),\n  create('minute', d3_time.minute, baseDate),\n  create('hour',   d3_time.hour,   baseDate),\n  create('day',    d3_time.day,    baseDate, [1, 7]),\n  create('month',  d3_time.month,  baseDate, [1, 3, 6]),\n  create('year',   d3_time.year,   baseDate),\n\n  // periodic units\n  entry('seconds',\n    function(d) { return new Date(1970, 0, 1, 0, 0, d); },\n    function(d) { return date(d).getSeconds(); },\n    null, 0, 59\n  ),\n  entry('minutes',\n    function(d) { return new Date(1970, 0, 1, 0, d); },\n    function(d) { return date(d).getMinutes(); },\n    null, 0, 59\n  ),\n  entry('hours',\n    function(d) { return new Date(1970, 0, 1, d); },\n    function(d) { return date(d).getHours(); },\n    null, 0, 23\n  ),\n  entry('weekdays',\n    function(d) { return new Date(1970, 0, 4+d); },\n    function(d) { return date(d).getDay(); },\n    [1], 0, 6\n  ),\n  entry('dates',\n    function(d) { return new Date(1970, 0, d); },\n    function(d) { return date(d).getDate(); },\n    [1], 1, 31\n  ),\n  entry('months',\n    function(d) { return new Date(1970, d % 12, 1); },\n    function(d) { return date(d).getMonth(); },\n    [1], 0, 11\n  )\n];\n\nvar utc = [\n  create('second', d3_time.utcSecond, utcBaseDate),\n  create('minute', d3_time.utcMinute, utcBaseDate),\n  create('hour',   d3_time.utcHour,   utcBaseDate),\n  create('day',    d3_time.utcDay,    utcBaseDate, [1, 7]),\n  create('month',  d3_time.utcMonth,  utcBaseDate, [1, 3, 6]),\n  create('year',   d3_time.utcYear,   utcBaseDate),\n\n  // periodic units\n  entry('seconds',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, 0, 0, d)); },\n    function(d) { return date(d).getUTCSeconds(); },\n    null, 0, 59\n  ),\n  entry('minutes',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, 0, d)); },\n    function(d) { return date(d).getUTCMinutes(); },\n    null, 0, 59\n  ),\n  entry('hours',\n    function(d) { return new Date(Date.UTC(1970, 0, 1, d)); },\n    function(d) { return date(d).getUTCHours(); },\n    null, 0, 23\n  ),\n  entry('weekdays',\n    function(d) { return new Date(Date.UTC(1970, 0, 4+d)); },\n    function(d) { return date(d).getUTCDay(); },\n    [1], 0, 6\n  ),\n  entry('dates',\n    function(d) { return new Date(Date.UTC(1970, 0, d)); },\n    function(d) { return date(d).getUTCDate(); },\n    [1], 1, 31\n  ),\n  entry('months',\n    function(d) { return new Date(Date.UTC(1970, d % 12, 1)); },\n    function(d) { return date(d).getUTCMonth(); },\n    [1], 0, 11\n  )\n];\n\nvar STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction find(units, span, minb, maxb) {\n  var step = STEPS[0], i, n, bins;\n\n  for (i=1, n=STEPS.length; i<n; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return units[STEPS[i-1][1]];\n      }\n      if (bins >= minb) {\n        return units[step[1]];\n      }\n    }\n  }\n  return units[STEPS[n-1][1]];\n}\n\nfunction toUnitMap(units) {\n  var map = {}, i, n;\n  for (i=0, n=units.length; i<n; ++i) {\n    map[units[i].type] = units[i];\n  }\n  map.find = function(span, minb, maxb) {\n    return find(units, span, minb, maxb);\n  };\n  return map;\n}\n\nmodule.exports = toUnitMap(locale);\nmodule.exports.utc = toUnitMap(utc);\n","var buffer = require('buffer'),\n    time = require('./time'),\n    utc = time.utc;\n\nvar u = module.exports = {};\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && obj === obj;\n};\n\nu.isBuffer = (buffer.Buffer && buffer.Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\nu.date = function(s) {\n  return s == null || s === '' ? null : Date.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? ('\\''+util_escape_str(x)+'\\'') : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, '$1\\\\\\'');\n}\n\n// data access functions\n\nvar field_re = /\\[(.*?)\\]|[^.\\[]+/g;\n\nu.field = function(f) {\n  return String(f).match(field_re).map(function(d) {\n    return d[0] !== '[' ? d :\n      d[1] !== \"'\" && d[1] !== '\"' ? d.slice(1, -1) :\n      d.slice(2, -2).replace(/\\\\([\"'])/g, '$1');\n  });\n};\n\nu.accessor = function(f) {\n  var s;\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, (s = u.field(f)).length > 1 ?\n      function(x) { return s.reduce(function(x,f) { return x[f]; }, x); } :\n      function(x) { return x[f]; }\n    );\n};\n\n// short-cut for accessor\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\nu.$year   = u.$func('year', time.year.unit);\nu.$month  = u.$func('month', time.months.unit);\nu.$date   = u.$func('date', time.dates.unit);\nu.$day    = u.$func('day', time.weekdays.unit);\nu.$hour   = u.$func('hour', time.hours.unit);\nu.$minute = u.$func('minute', time.minutes.unit);\nu.$second = u.$func('second', time.seconds.unit);\n\nu.$utcYear   = u.$func('utcYear', utc.year.unit);\nu.$utcMonth  = u.$func('utcMonth', utc.months.unit);\nu.$utcDate   = u.$func('utcDate', utc.dates.unit);\nu.$utcDay    = u.$func('utcDay', utc.weekdays.unit);\nu.$utcHour   = u.$func('utcHour', utc.hours.unit);\nu.$utcMinute = u.$func('utcMinute', utc.minutes.unit);\nu.$utcSecond = u.$func('utcSecond', utc.seconds.unit);\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n\n// string functions\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n","var ts = Date.now();\n\nfunction write(msg) {\n  msg = '[Vega Log] ' + msg;\n  console.log(msg);\n}\n\nfunction error(msg) {\n  msg = '[Vega Err] ' + msg;\n  console.error(msg);\n}\n\nfunction debug(input, args) {\n  if (!debug.enable) return;\n  var log = Function.prototype.bind.call(console.log, console);\n  var state = {\n    prevTime:  Date.now() - ts,\n    stamp: input.stamp\n  };\n\n  if (input.add) {\n    state.add = input.add.length;\n    state.mod = input.mod.length;\n    state.rem = input.rem.length;\n    state.reflow = !!input.reflow;\n  }\n\n  log.apply(console, (args.push(JSON.stringify(state)), args));\n  ts = Date.now();\n}\n\nmodule.exports = {\n  log:   write,\n  error: error,\n  debug: (debug.enable = false, debug)\n};\n","var DEPS = require('./Dependencies').ALL;\n\nfunction create(cs, reflow) {\n  var out = {};\n  copy(cs, out);\n\n  out.add = [];\n  out.mod = [];\n  out.rem = [];\n\n  out.reflow = reflow;\n\n  return out;\n}\n\nfunction copy(a, b) {\n  b.stamp = a ? a.stamp : 0;\n  b.sort  = a ? a.sort  : null;\n  b.facet = a ? a.facet : null;\n  b.trans = a ? a.trans : null;\n  b.dirty = a ? a.dirty : [];\n  b.request = a ? a.request : null;\n  for (var d, i=0, n=DEPS.length; i<n; ++i) {\n    b[d=DEPS[i]] = a ? a[d] : {};\n  }\n}\n\nmodule.exports = {\n  create: create,\n  copy: copy\n};","var log = require('vega-logging'),\n    Tuple = require('./Tuple'),\n    Base = require('./Node').prototype;\n\nfunction Collector(graph) {\n  Base.init.call(this, graph);\n  this._data = [];\n  this.router(true).collector(true);\n}\n\nvar prototype = (Collector.prototype = Object.create(Base));\nprototype.constructor = Collector;\n\nprototype.data = function() {\n  return this._data;\n};\n\nprototype.evaluate = function(input) {\n  log.debug(input, [\"collecting\"]);\n\n  if (input.rem.length) {\n    this._data = Tuple.idFilter(this._data, input.rem);\n  }\n\n  if (input.add.length) {\n    this._data = this._data.length ? this._data.concat(input.add) : input.add;\n  }\n\n  if (input.sort) {\n    this._data.sort(input.sort);\n  }\n\n  if (input.reflow) {\n    input.mod = input.mod.concat(\n      Tuple.idFilter(this._data, input.add, input.mod, input.rem));\n    input.reflow = false;\n  }\n\n  return input;\n};\n\nmodule.exports = Collector;","var log = require('vega-logging'),\n    ChangeSet = require('./ChangeSet'), \n    Collector = require('./Collector'),\n    Tuple = require('./Tuple'),\n    Node = require('./Node'); // jshint ignore:line\n\nfunction DataSource(graph, name, facet) {\n  this._graph = graph;\n  this._name = name;\n  this._data = [];\n  this._source = null;\n  this._facet  = facet;\n  this._input  = ChangeSet.create();\n  this._output = null; // Output changeset\n\n  this._inputNode  = null;\n  this._outputNode = null;\n  this._pipeline  = null; // Pipeline of transformations.\n  this._collector = null; // Collector to materialize output of pipeline.\n  this._mutates = false;  // Does any pipeline operator mutate tuples?\n}\n\nvar prototype = DataSource.prototype;\n\nprototype.name = function(name) {\n  if (!arguments.length) return this._name;\n  return (this._name = name, this);\n};\n\nprototype.source = function(src) {\n  if (!arguments.length) return this._source;\n  return (this._source = this._graph.data(src));\n};\n\nprototype.insert = function(tuples) {\n  this._input.add = this._input.add.concat(tuples.map(Tuple.ingest));\n  return this;\n};\n\nprototype.remove = function(where) {\n  var remove = this._data.filter(where);\n  this._input.rem = this._input.rem.concat(remove);\n  return this;\n};\n\nprototype.update = function(where, field, func) {\n  var mod = this._input.mod,\n      ids = Tuple.idMap(mod);\n\n  this._input.fields[field] = 1;\n\n  this._data.filter(where).forEach(function(x) {\n    var prev = x[field],\n        next = func(x);\n    if (prev !== next) {\n      Tuple.set(x, field, next);\n      if (ids[x._id] !== 1) {\n        mod.push(x);\n        ids[x._id] = 1;\n      }\n    }\n  });\n\n  return this;\n};\n\nprototype.values = function(data) {\n  if (!arguments.length) return this._collector.data();\n\n  // Replace backing data\n  this._input.rem = this._data.slice();\n  if (data) { this.insert(data); }\n  return this;\n};\n\nprototype.mutates = function(m) {\n  if (!arguments.length) return this._mutates;\n  this._mutates = this._mutates || m;\n  return this;\n};\n\nprototype.last = function() {\n  return this._output;\n};\n\nprototype.fire = function(input) {\n  if (input) this._input = input;\n  this._graph.propagate(this._input, this._pipeline[0]);\n  return this;\n};\n\nprototype.pipeline = function(pipeline) {\n  if (!arguments.length) return this._pipeline;\n\n  var graph = this._graph,\n      status;\n\n  pipeline.unshift(this._inputNode = DataSourceInput(this));\n  status = graph.preprocess(pipeline);\n\n  if (status.router) {\n    pipeline.push(status.collector = new Collector(graph));\n  }\n\n  pipeline.push(this._outputNode = DataSourceOutput(this));\n  this._collector = status.collector;\n  this._mutates = !!status.mutates;\n  graph.connect(this._pipeline = pipeline);\n\n  return this;\n};\n\nprototype.synchronize = function() {\n  this._graph.synchronize(this._pipeline);\n  return this;\n};\n\nprototype.listener = function() { \n  return DataSourceListener(this).addListener(this._inputNode);\n};\n\nprototype.addListener = function(l) {\n  if (l instanceof DataSource) {\n    this._collector.addListener(l.listener());\n  } else {\n    this._outputNode.addListener(l);      \n  }\n  return this;\n};\n\nprototype.removeListener = function(l) {\n  this._outputNode.removeListener(l);\n};\n\nprototype.listeners = function(ds) {\n  return (ds ? this._collector : this._outputNode).listeners();\n};\n\n// Input node applies the datasource's delta, and propagates it to \n// the rest of the pipeline. It receives touches to reflow data.\nfunction DataSourceInput(ds) {\n  var input = new Node(ds._graph)\n    .router(true)\n    .collector(true);\n\n  input.data = function() {\n    return ds._data;\n  };\n\n  input.evaluate = function(input) {\n    log.debug(input, ['input', ds._name]);\n\n    var delta = ds._input, \n        out = ChangeSet.create(input), f;\n\n    // Delta might contain fields updated through API\n    for (f in delta.fields) {\n      out.fields[f] = 1;\n    }\n\n    // update data\n    if (delta.rem.length) {\n      ds._data = Tuple.idFilter(ds._data, delta.rem);\n    }\n\n    if (delta.add.length) {\n      ds._data = ds._data.concat(delta.add);\n    }\n\n    if (delta.sort) {\n      ds._data.sort(delta.sort);\n    }\n\n    // if reflowing, add any other tuples not currently in changeset\n    if (input.reflow) {\n      delta.mod = delta.mod.concat(\n        Tuple.idFilter(ds._data, delta.add, delta.mod, delta.rem));\n    }\n\n    // reset change list\n    ds._input = ChangeSet.create();\n\n    out.add = delta.add; \n    out.mod = delta.mod;\n    out.rem = delta.rem;\n    out.facet = ds._facet;\n    return out;\n  };\n\n  return input;\n}\n\n// Output node captures the last changeset seen by this datasource\n// (needed for joins and builds) and materializes any nested data.\n// If this datasource is faceted, materializes the values in the facet.\nfunction DataSourceOutput(ds) {\n  var output = new Node(ds._graph)\n    .router(true)\n    .reflows(true)\n    .collector(true);\n\n  output.data = function() {\n    return ds._collector ? ds._collector.data() : ds._data;\n  };\n\n  output.evaluate = function(input) {\n    log.debug(input, ['output', ds._name]);\n\n    var out = ChangeSet.create(input, true);\n\n    if (ds._facet) {\n      ds._facet.values = ds.values();\n      input.facet = null;\n    }\n\n    ds._output = input;\n    out.data[ds._name] = 1;\n    return out;\n  };\n\n  return output;\n}\n\nfunction DataSourceListener(ds) {\n  var l = new Node(ds._graph).router(true);\n\n  l.evaluate = function(input) {\n    // Tuple derivation carries a cost. So only derive if the pipeline has\n    // operators that mutate, and thus would override the source data.\n    if (ds.mutates()) {  \n      var map = ds._srcMap || (ds._srcMap = {}), // to propagate tuples correctly\n          output = ChangeSet.create(input);\n\n      output.add = input.add.map(function(t) {\n        return (map[t._id] = Tuple.derive(t));\n      });\n\n      output.mod = input.mod.map(function(t) {\n        return Tuple.rederive(t, map[t._id]);\n      });\n\n      output.rem = input.rem.map(function(t) { \n        var o = map[t._id];\n        return (map[t._id] = null, o);\n      });\n\n      return (ds._input = output);\n    } else {\n      return (ds._input = input);\n    }\n  };\n\n  return l;\n}\n\nmodule.exports = DataSource;\n","var deps = module.exports = {\n  ALL: ['data', 'fields', 'scales', 'signals']\n};\ndeps.ALL.forEach(function(k) { deps[k.toUpperCase()] = k; });\n","var dl = require('datalib'),\n    Heap = require('./Heap'),\n    ChangeSet = require('./ChangeSet'),\n    DataSource = require('./DataSource'),\n    Collector = require('./Collector'),\n    Tuple = require('./Tuple'),\n    Signal = require('./Signal'),\n    Deps = require('./Dependencies');\n\nfunction Graph() {\n}\n\nvar prototype = Graph.prototype;\n\nprototype.init = function() {\n  this._stamp = 0;\n  this._rank  = 0;\n\n  this._data = {};\n  this._signals = {};\n\n  this.doNotPropagate = {};\n};\n\nprototype.rank = function() {\n  return ++this._rank;\n};\n\nprototype.values = function(type, names, hash) {\n  var data = (type === Deps.SIGNALS ? this._signals : this._data),\n      n = (names !== undefined ? names : dl.keys(data)),\n      vals, i;\n\n  if (Array.isArray(n)) {\n    vals = hash || {};\n    for (i=0; i<n.length; ++i) {\n      vals[n[i]] = data[n[i]].values();\n    }\n    return vals;\n  } else {\n    return data[n].values();\n  }\n};\n\n// Retain for backwards-compatibility\nprototype.dataValues = function(names) {\n  return this.values(Deps.DATA, names);\n};\n\n// Retain for backwards-compatibility\nprototype.signalValues = function(names) {\n  return this.values(Deps.SIGNALS, names);\n};\n\nprototype.data = function(name, pipeline, facet) {\n  var db = this._data;\n  if (!arguments.length) {\n    var all = [], key;\n    for (key in db) { all.push(db[key]); }\n    return all;\n  } else if (arguments.length === 1) {\n    return db[name];\n  } else {\n    return (db[name] = new DataSource(this, name, facet).pipeline(pipeline));\n  }\n};\n\nprototype.signal = function(name, init) {\n  if (arguments.length === 1) {\n    var m = this;\n    return Array.isArray(name) ?\n      name.map(function(n) { return m._signals[n]; }) :\n      this._signals[name];\n  } else {\n    return (this._signals[name] = new Signal(this, name, init));\n  }\n};\n\nprototype.signalRef = function(ref) {\n  if (!Array.isArray(ref)) {\n    ref = dl.field(ref);\n  }\n\n  var value = this.signal(ref[0]).value();\n  if (ref.length > 1) {\n    for (var i=1, n=ref.length; i<n; ++i) {\n      value = value[ref[i]];\n    }\n  }\n  return value;\n};\n\n// Stamp should be specified with caution. It is necessary for inline datasources,\n// which need to be populated during the same cycle even though propagation has\n// passed that part of the dataflow graph.  \nprototype.propagate = function(pulse, node, stamp) {\n  var pulses = {},\n      listeners, next, nplse, tpls, ntpls, i, len;\n\n  // new PQ with each propagation cycle so that we can pulse branches\n  // of the dataflow graph during a propagation (e.g., when creating\n  // a new inline datasource).\n  var pq = new Heap(function(a, b) {\n    // Sort on qrank (queue-rank).\n    // Rank can change during propagation due to rewiring.\n    return a._qrank - b._qrank;\n  });\n\n  if (pulse.stamp) throw Error('Pulse already has a non-zero stamp.');\n\n  pulse.stamp = stamp || ++this._stamp;\n  pulses[node._id] = pulse;\n  pq.push(node.qrank(true));\n\n  while (pq.size() > 0) {\n    node  = pq.peek();\n    pulse = pulses[node._id];\n\n    if (node.rank() !== node.qrank()) {\n      // A node's rank might change during a propagation. Re-queue if so.\n      pq.replace(node.qrank(true));\n    } else {\n      // Evaluate node and propagate pulse.\n      pq.pop();\n      pulses[node._id] = null;\n      listeners = node._listeners;\n      pulse = this.evaluate(pulse, node);\n\n      // Propagate the pulse. \n      if (pulse !== this.doNotPropagate) {\n        // Ensure reflow pulses always send reflow pulses even if skipped.\n        if (!pulse.reflow && node.reflows()) {\n          pulse = ChangeSet.create(pulse, true);\n        }\n\n        for (i=0, len=listeners.length; i<len; ++i) {\n          next = listeners[i];\n\n          if ((nplse = pulses[next._id]) !== undefined) {\n            if (nplse === null) throw Error('Already propagated to node.');\n            if (nplse === pulse) continue;  // Re-queueing the same pulse.\n\n            // We've already queued this node. Ensure there should be at most one\n            // pulse with tuples (add/mod/rem), and the remainder will be reflows. \n            tpls  = pulse.add.length || pulse.mod.length || pulse.rem.length;\n            ntpls = nplse.add.length || nplse.mod.length || nplse.rem.length;\n\n            if (tpls && ntpls) throw Error('Multiple changeset pulses to same node');\n\n            // Combine reflow and tuples into a single pulse. \n            pulses[next._id] = tpls ? pulse : nplse;\n            pulses[next._id].reflow = pulse.reflow || nplse.reflow;\n          } else {\n            // First time we're seeing this node, queue it for propagation.\n            pq.push(next.qrank(true));\n            pulses[next._id] = pulse;\n          }\n        }\n      }\n    }\n  }\n};\n\n// Process a new branch of the dataflow graph prior to connection:\n// (1) Insert new Collector nodes as needed. \n// (2) Track + return mutation/routing status of the branch.\nprototype.preprocess = function(branch) {\n  var graph = this,\n      mutates = 0,\n      node, router, collector, collects;\n\n  for (var i=0; i<branch.length; ++i) {\n    node = branch[i];\n\n    // Batch nodes need access to a materialized dataset. \n    if (node.batch() && !node._collector) {\n      if (router || !collector) {\n        node = new Collector(graph);\n        branch.splice(i, 0, node);\n        router = false;\n      } else {\n        node._collector = collector;\n      }\n    }\n\n    if ((collects = node.collector())) collector = node;\n    router  = router  || node.router() && !collects;\n    mutates = mutates || node.mutates();\n\n    // A collector needs to be inserted after tuple-producing\n    // nodes for correct previous value tracking.\n    if (node.produces()) {\n      branch.splice(i+1, 0, new Collector(graph));\n      router = false;\n    }\n  }\n\n  return {router: router, collector: collector, mutates: mutates};\n};\n\nprototype.connect = function(branch) {\n  var collector, node, data, signals, i, n, j, m, x, y;\n\n  // connect the pipeline\n  for (i=0, n=branch.length; i<n; ++i) {\n    node = branch[i];\n    if (node.collector()) collector = node;\n\n    data = node.dependency(Deps.DATA);\n    for (j=0, m=data.length; j<m; ++j) {\n      if (!(x=this.data(y=data[j]))) {\n        throw new Error('Unknown data source ' + dl.str(y));\n      }\n\n      x.addListener(collector);\n    }\n\n    signals = node.dependency(Deps.SIGNALS);\n    for (j=0, m=signals.length; j<m; ++j) {\n      if (!(x=this.signal(y=signals[j]))) {\n        throw new Error('Unknown signal ' + dl.str(y));\n      }\n\n      x.addListener(collector);\n    }\n\n    if (i > 0) branch[i-1].addListener(node);\n  }\n\n  return branch;\n};\n\nprototype.disconnect = function(branch) {\n  var collector, node, data, signals, i, n, j, m;\n\n  for (i=0, n=branch.length; i<n; ++i) {\n    node = branch[i];\n    if (node.collector()) collector = node;\n\n    data = node.dependency(Deps.DATA);\n    for (j=0, m=data.length; j<m; ++j) {\n      this.data(data[j]).removeListener(collector);\n    }\n\n    signals = node.dependency(Deps.SIGNALS);\n    for (j=0, m=signals.length; j<m; ++j) {\n      this.signal(signals[j]).removeListener(collector);\n    }\n\n    node.disconnect();\n  }\n\n  return branch;\n};\n\nprototype.synchronize = function(branch) {\n  var ids = {},\n      node, data, i, n, j, m, d, id;\n\n  for (i=0, n=branch.length; i<n; ++i) {\n    node = branch[i];\n    if (!node.collector()) continue;\n\n    for (j=0, data=node.data(), m=data.length; j<m; ++j) {\n      id = (d = data[j])._id;\n      if (ids[id]) continue; \n      Tuple.prev_update(d);\n      ids[id] = 1; \n    }\n  }\n\n  return this;\n};\n\nprototype.reevaluate = function(pulse, node) {\n  var reflowed = pulse.reflow && node.last() >= pulse.stamp,\n      run = node.router() || pulse.add.length || pulse.rem.length;\n\n  return run || !reflowed || node.reevaluate(pulse);\n};\n\nprototype.evaluate = function(pulse, node) {\n  if (!this.reevaluate(pulse, node)) return pulse;\n  pulse = node.evaluate(pulse);\n  node.last(pulse.stamp);\n  return pulse;\n};\n\nmodule.exports = Graph;\n","function Heap(comparator) {\n  this.cmp = comparator;\n  this.nodes = [];\n}\n\nvar prototype = Heap.prototype;\n\nprototype.size = function() {\n  return this.nodes.length;\n};\n\nprototype.clear = function() {\n  return (this.nodes = [], this);\n};\n\nprototype.peek = function() {\n  return this.nodes[0];\n};\n\nprototype.push = function(x) {\n  var array = this.nodes;\n  array.push(x);\n  return _siftdown(array, 0, array.length-1, this.cmp);\n};\n\nprototype.pop = function() {\n  var array = this.nodes,\n      last = array.pop(),\n      item;\n\n  if (array.length) {\n    item = array[0];\n    array[0] = last;\n    _siftup(array, 0, this.cmp);\n  } else {\n    item = last;\n  }\n  return item;\n};\n\nprototype.replace = function(item) {\n  var array = this.nodes,\n      retval = array[0];\n  array[0] = item;\n  _siftup(array, 0, this.cmp);\n  return retval;\n};\n\nprototype.pushpop = function(item) {\n  var array = this.nodes, ref = array[0];\n  if (array.length && this.cmp(ref, item) < 0) {\n    array[0] = item;\n    item = ref;\n    _siftup(array, 0, this.cmp);\n  }\n  return item;\n};\n\nfunction _siftdown(array, start, idx, cmp) {\n  var item, parent, pidx;\n\n  item = array[idx];\n  while (idx > start) {\n    pidx = (idx - 1) >> 1;\n    parent = array[pidx];\n    if (cmp(item, parent) < 0) {\n      array[idx] = parent;\n      idx = pidx;\n      continue;\n    }\n    break;\n  }\n  return (array[idx] = item);\n}\n\nfunction _siftup(array, idx, cmp) {\n  var start = idx,\n      end = array.length,\n      item = array[idx],\n      cidx = 2 * idx + 1, ridx;\n\n  while (cidx < end) {\n    ridx = cidx + 1;\n    if (ridx < end && cmp(array[cidx], array[ridx]) >= 0) {\n      cidx = ridx;\n    }\n    array[idx] = array[cidx];\n    idx = cidx;\n    cidx = 2 * idx + 1;\n  }\n  array[idx] = item;\n  return _siftdown(array, start, idx, cmp);\n}\n\nmodule.exports = Heap;\n","var DEPS = require('./Dependencies').ALL,\n    nodeID = 0;\n\nfunction Node(graph) {\n  if (graph) this.init(graph);\n}\n\nvar Flags = Node.Flags = {\n  Router:     0x01, // Responsible for propagating tuples, cannot be skipped.\n  Collector:  0x02, // Holds a materialized dataset, pulse node to reflow.\n  Produces:   0x04, // Produces new tuples. \n  Mutates:    0x08, // Sets properties of incoming tuples.\n  Reflows:    0x10, // Forwards a reflow pulse.\n  Batch:      0x20  // Performs batch data processing, needs collector.\n};\n\nvar prototype = Node.prototype;\n\nprototype.init = function(graph) {\n  this._id = ++nodeID;\n  this._graph = graph;\n  this._rank  = graph.rank(); // Topological sort by rank\n  this._qrank = null; // Rank when enqueued for propagation\n  this._stamp = 0;    // Last stamp seen\n\n  this._listeners = [];\n  this._listeners._ids = {}; // To prevent duplicate listeners\n\n  // Initialize dependencies.\n  this._deps = {};\n  for (var i=0, n=DEPS.length; i<n; ++i) {\n    this._deps[DEPS[i]] = [];\n  }\n\n  // Initialize status flags.\n  this._flags = 0;\n\n  return this;\n};\n\nprototype.rank = function() {\n  return this._rank;\n};\n\nprototype.qrank = function(/* set */) {\n  if (!arguments.length) return this._qrank;\n  return (this._qrank = this._rank, this);\n};\n\nprototype.last = function(stamp) { \n  if (!arguments.length) return this._stamp;\n  return (this._stamp = stamp, this);\n};\n\n// -- status flags ---\n\nprototype._setf = function(v, b) {\n  if (b) { this._flags |= v; } else { this._flags &= ~v; }\n  return this;\n};\n\nprototype.router = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Router);\n  return this._setf(Flags.Router, state);\n};\n\nprototype.collector = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Collector);\n  return this._setf(Flags.Collector, state);\n};\n\nprototype.produces = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Produces);\n  return this._setf(Flags.Produces, state);\n};\n\nprototype.mutates = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Mutates);\n  return this._setf(Flags.Mutates, state);\n};\n\nprototype.reflows = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Reflows);\n  return this._setf(Flags.Reflows, state);\n};\n\nprototype.batch = function(state) {\n  if (!arguments.length) return (this._flags & Flags.Batch);\n  return this._setf(Flags.Batch, state);\n};\n\nprototype.dependency = function(type, deps) {\n  var d = this._deps[type],\n      n = d._names || (d._names = {});  // To prevent dupe deps\n\n  // Get dependencies of the given type\n  if (arguments.length === 1) {\n    return d;\n  }\n\n  if (deps === null) {\n    // Clear dependencies of the given type\n    d.splice(0, d.length);\n    d._names = {};\n  } else if (!Array.isArray(deps)) {\n    // Separate this case to avoid cost of array creation\n    if (n[deps]) return this;\n    d.push(deps);\n    n[deps] = 1;\n  } else {\n    for (var i=0, len=deps.length, dep; i<len; ++i) {\n      dep = deps[i];\n      if (n[dep]) continue;\n      d.push(dep);\n      n[dep] = 1;\n    }\n  }\n\n  return this;\n};\n\nprototype.listeners = function() {\n  return this._listeners;\n};\n\nprototype.addListener = function(l) {\n  if (!(l instanceof Node)) {\n    throw Error('Listener is not a Node');\n  }\n  if (this._listeners._ids[l._id]) return this;\n\n  this._listeners.push(l);\n  this._listeners._ids[l._id] = 1;\n  if (this._rank > l._rank) {\n    var q = [l],\n        g = this._graph, cur;\n    while (q.length) {\n      cur = q.shift();\n      cur._rank = g.rank();\n      q.unshift.apply(q, cur.listeners());\n    }\n  }\n\n  return this;\n};\n\nprototype.removeListener = function(l) {\n  if (!this._listeners._ids[l._id]) return false;\n  \n  var idx = this._listeners.indexOf(l),\n      b = idx >= 0;\n\n  if (b) {\n    this._listeners.splice(idx, 1);\n    this._listeners._ids[l._id] = null;\n  }\n  return b;\n};\n\nprototype.disconnect = function() {\n  this._listeners = [];\n  this._listeners._ids = {};\n};\n\n// Evaluate this dataflow node for the current pulse.\n// Subclasses should override to perform custom processing.\nprototype.evaluate = function(pulse) {\n  return pulse;\n};\n\n// Should this node be re-evaluated for the current pulse?\n// Searches pulse to see if any dependencies have updated.\nprototype.reevaluate = function(pulse) {\n  var prop, dep, i, n, j, m;\n\n  for (i=0, n=DEPS.length; i<n; ++i) {\n    prop = DEPS[i];\n    dep = this._deps[prop];\n    for (j=0, m=dep.length; j<m; ++j) {\n      if (pulse[prop][dep[j]]) return true;\n    }\n  }\n\n  return false;\n};\n\nNode.reset = function() { nodeID = 0; };\n\nmodule.exports = Node;\n","var ChangeSet = require('./ChangeSet'),\n    Node = require('./Node'), // jshint ignore:line\n    Base = Node.prototype;\n\nfunction Signal(graph, name, initialValue) {\n  Base.init.call(this, graph);\n  this._name  = name;\n  this._value = initialValue;\n  this._verbose = false; // Verbose signals re-pulse the graph even if prev === val.\n  this._handlers = [];\n  return this;\n}\n\nvar prototype = (Signal.prototype = Object.create(Base));\nprototype.constructor = Signal;\n\nprototype.name = function() {\n  return this._name;\n};\n\nprototype.value = function(val) {\n  if (!arguments.length) return this._value;\n  return (this._value = val, this);\n};\n\n// Alias to value, for shared API with DataSource\nprototype.values = prototype.value;\n\nprototype.verbose = function(v) {\n  if (!arguments.length) return this._verbose;\n  return (this._verbose = !!v, this);\n};\n\nprototype.evaluate = function(input) {\n  return input.signals[this._name] ? input : this._graph.doNotPropagate;\n};\n\nprototype.fire = function(cs) {\n  if (!cs) cs = ChangeSet.create(null, true);\n  cs.signals[this._name] = 1;\n  this._graph.propagate(cs, this);\n};\n\nprototype.on = function(handler) {\n  var signal = this,\n      node = new Node(this._graph);\n\n  node.evaluate = function(input) {\n    handler(signal.name(), signal.value());\n    return input;\n  };\n\n  this._handlers.push({\n    handler: handler,\n    node: node\n  });\n\n  return this.addListener(node);\n};\n\nprototype.off = function(handler) {\n  var h = this._handlers, i, x;\n\n  for (i=h.length; --i>=0;) {\n    if (!handler || h[i].handler === handler) {\n      x = h.splice(i, 1)[0];\n      this.removeListener(x.node);\n    }\n  }\n\n  return this;\n};\n\nmodule.exports = Signal;\n","var tupleID = 0;\n\nfunction ingest(datum) {\n  datum = (datum === Object(datum)) ? datum : {data: datum};\n  datum._id = ++tupleID;\n  if (datum._prev) datum._prev = null;\n  return datum;\n}\n\nfunction idMap(a, ids) {\n  ids = ids || {};\n  for (var i=0, n=a.length; i<n; ++i) {\n    ids[a[i]._id] = 1;\n  }\n  return ids;\n}\n\nfunction copy(t, c) {\n  c = c || {};\n  for (var k in t) {\n    if (k !== '_prev' && k !== '_id') c[k] = t[k];\n  }\n  return c;\n}\n\nmodule.exports = {\n  ingest: ingest,\n  idMap: idMap,\n\n  derive: function(d) {\n    return ingest(copy(d));\n  },\n\n  rederive: function(d, t) {\n    return copy(d, t);\n  },\n\n  set: function(t, k, v) {\n    return t[k] === v ? 0 : (t[k] = v, 1);\n  },\n\n  prev: function(t) {\n    return t._prev || t;\n  },\n\n  prev_init: function(t) {\n    if (!t._prev) { t._prev = {_id: t._id}; }\n  },\n\n  prev_update: function(t) {\n    var p = t._prev, k, v;\n    if (p) for (k in t) {\n      if (k !== '_prev' && k !== '_id') {\n        p[k] = ((v=t[k]) instanceof Object && v._prev) ? v._prev : v;\n      }\n    }\n  },\n\n  reset: function() { tupleID = 0; },\n\n  idFilter: function(data) {\n    var ids = {};\n    for (var i=arguments.length; --i>0;) {\n      idMap(arguments[i], ids);\n    }\n    return data.filter(function(x) { return !ids[x._id]; });\n  }\n};\n","module.exports = {\n  ChangeSet:    require('./ChangeSet'),\n  Collector:    require('./Collector'),\n  DataSource:   require('./DataSource'),\n  Dependencies: require('./Dependencies'),\n  Graph:        require('./Graph'),\n  Node:         require('./Node'),\n  Signal:       require('./Signal'),\n  Tuple:        require('./Tuple'),\n  debug:        require('vega-logging').debug\n};\n","function toMap(list) {\n  var map = {}, i, n;\n  for (i=0, n=list.length; i<n; ++i) map[list[i]] = 1;\n  return map;\n}\n\nfunction keys(object) {\n  var list = [], k;\n  for (k in object) list.push(k);\n  return list;\n}\n\nmodule.exports = function(opt) {\n  opt = opt || {};\n  var constants = opt.constants || require('./constants'),\n      functions = (opt.functions || require('./functions'))(codegen),\n      idWhiteList = opt.idWhiteList ? toMap(opt.idWhiteList) : null,\n      idBlackList = opt.idBlackList ? toMap(opt.idBlackList) : null,\n      memberDepth = 0,\n      FIELD_VAR = opt.fieldVar || 'datum',\n      GLOBAL_VAR = opt.globalVar || 'signals',\n      globals = {},\n      fields = {};\n\n  function codegen_wrap(ast) {    \n    var retval = {\n      code: codegen(ast),\n      globals: keys(globals),\n      fields: keys(fields)\n    };\n    globals = {};\n    fields = {};\n    return retval;\n  }\n\n  function lookupGlobal(id) {\n    return GLOBAL_VAR + '[\"' + id + '\"]';\n  }\n\n  function codegen(ast) {\n    if (typeof ast === 'string') return ast;\n    var generator = CODEGEN_TYPES[ast.type];\n    if (generator == null) {\n      throw new Error('Unsupported type: ' + ast.type);\n    }\n    return generator(ast);\n  }\n\n  var CODEGEN_TYPES = {\n    'Literal': function(n) {\n        return n.raw;\n      },\n    'Identifier': function(n) {\n        var id = n.name;\n        if (memberDepth > 0) {\n          return id;\n        }\n        if (constants.hasOwnProperty(id)) {\n          return constants[id];\n        }\n        if (idWhiteList) {\n          if (idWhiteList.hasOwnProperty(id)) {\n            return id;\n          } else {\n            globals[id] = 1;\n            return lookupGlobal(id);\n          }\n        }\n        if (idBlackList && idBlackList.hasOwnProperty(id)) {\n          throw new Error('Illegal identifier: ' + id);\n        }\n        return id;\n      },\n    'Program': function(n) {\n        return n.body.map(codegen).join('\\n');\n      },\n    'MemberExpression': function(n) {\n        var d = !n.computed;\n        var o = codegen(n.object);\n        if (d) memberDepth += 1;\n        var p = codegen(n.property);\n        if (o === FIELD_VAR) { fields[p] = 1; } // HACKish...\n        if (d) memberDepth -= 1;\n        return o + (d ? '.'+p : '['+p+']');\n      },\n    'CallExpression': function(n) {\n        if (n.callee.type !== 'Identifier') {\n          throw new Error('Illegal callee type: ' + n.callee.type);\n        }\n        var callee = n.callee.name;\n        var args = n.arguments;\n        var fn = functions.hasOwnProperty(callee) && functions[callee];\n        if (!fn) throw new Error('Unrecognized function: ' + callee);\n        return fn instanceof Function ?\n          fn(args) :\n          fn + '(' + args.map(codegen).join(',') + ')';\n      },\n    'ArrayExpression': function(n) {\n        return '[' + n.elements.map(codegen).join(',') + ']';\n      },\n    'BinaryExpression': function(n) {\n        return '(' + codegen(n.left) + n.operator + codegen(n.right) + ')';\n      },\n    'UnaryExpression': function(n) {\n        return '(' + n.operator + codegen(n.argument) + ')';\n      },\n    'ConditionalExpression': function(n) {\n        return '(' + codegen(n.test) +\n          '?' + codegen(n.consequent) +\n          ':' + codegen(n.alternate) +\n          ')';\n      },\n    'LogicalExpression': function(n) {\n        return '(' + codegen(n.left) + n.operator + codegen(n.right) + ')';\n      },\n    'ObjectExpression': function(n) {\n        return '{' + n.properties.map(codegen).join(',') + '}';\n      },\n    'Property': function(n) {\n        memberDepth += 1;\n        var k = codegen(n.key);\n        memberDepth -= 1;\n        return k + ':' + codegen(n.value);\n      },\n    'ExpressionStatement': function(n) {\n        return codegen(n.expression);\n      }\n  };\n\n  codegen_wrap.functions = functions;\n  codegen_wrap.constants = constants;\n  return codegen_wrap;\n};\n","module.exports = {\n  'NaN':     'NaN',\n  'E':       'Math.E',\n  'LN2':     'Math.LN2',\n  'LN10':    'Math.LN10',\n  'LOG2E':   'Math.LOG2E',\n  'LOG10E':  'Math.LOG10E',\n  'PI':      'Math.PI',\n  'SQRT1_2': 'Math.SQRT1_2',\n  'SQRT2':   'Math.SQRT2'\n};","module.exports = function(codegen) {\n\n  function fncall(name, args, cast, type) {\n    var obj = codegen(args[0]);\n    if (cast) {\n      obj = cast + '(' + obj + ')';\n      if (cast.lastIndexOf('new ', 0) === 0) obj = '(' + obj + ')';\n    }\n    return obj + '.' + name + (type < 0 ? '' : type === 0 ?\n      '()' :\n      '(' + args.slice(1).map(codegen).join(',') + ')');\n  }\n\n  function fn(name, cast, type) {\n    return function(args) {\n      return fncall(name, args, cast, type);\n    };\n  }\n\n  var DATE = 'new Date',\n      STRING = 'String',\n      REGEXP = 'RegExp';\n\n  return {\n    // MATH functions\n    'isNaN':    'isNaN',\n    'isFinite': 'isFinite',\n    'abs':      'Math.abs',\n    'acos':     'Math.acos',\n    'asin':     'Math.asin',\n    'atan':     'Math.atan',\n    'atan2':    'Math.atan2',\n    'ceil':     'Math.ceil',\n    'cos':      'Math.cos',\n    'exp':      'Math.exp',\n    'floor':    'Math.floor',\n    'log':      'Math.log',\n    'max':      'Math.max',\n    'min':      'Math.min',\n    'pow':      'Math.pow',\n    'random':   'Math.random',\n    'round':    'Math.round',\n    'sin':      'Math.sin',\n    'sqrt':     'Math.sqrt',\n    'tan':      'Math.tan',\n\n    'clamp': function(args) {\n      if (args.length < 3)\n        throw new Error('Missing arguments to clamp function.');\n      if (args.length > 3)\n      throw new Error('Too many arguments to clamp function.');\n      var a = args.map(codegen);\n      return 'Math.max('+a[1]+', Math.min('+a[2]+','+a[0]+'))';\n    },\n\n    // DATE functions\n    'now':             'Date.now',\n    'datetime':        DATE,\n    'date':            fn('getDate', DATE, 0),\n    'day':             fn('getDay', DATE, 0),\n    'year':            fn('getFullYear', DATE, 0),\n    'month':           fn('getMonth', DATE, 0),\n    'hours':           fn('getHours', DATE, 0),\n    'minutes':         fn('getMinutes', DATE, 0),\n    'seconds':         fn('getSeconds', DATE, 0),\n    'milliseconds':    fn('getMilliseconds', DATE, 0),\n    'time':            fn('getTime', DATE, 0),\n    'timezoneoffset':  fn('getTimezoneOffset', DATE, 0),\n    'utcdate':         fn('getUTCDate', DATE, 0),\n    'utcday':          fn('getUTCDay', DATE, 0),\n    'utcyear':         fn('getUTCFullYear', DATE, 0),\n    'utcmonth':        fn('getUTCMonth', DATE, 0),\n    'utchours':        fn('getUTCHours', DATE, 0),\n    'utcminutes':      fn('getUTCMinutes', DATE, 0),\n    'utcseconds':      fn('getUTCSeconds', DATE, 0),\n    'utcmilliseconds': fn('getUTCMilliseconds', DATE, 0),\n\n    // shared sequence functions\n    'length':      fn('length', null, -1),\n    'indexof':     fn('indexOf', null),\n    'lastindexof': fn('lastIndexOf', null),\n\n    // STRING functions\n    'parseFloat':  'parseFloat',\n    'parseInt':    'parseInt',\n    'upper':       fn('toUpperCase', STRING, 0),\n    'lower':       fn('toLowerCase', STRING, 0),\n    'slice':       fn('slice', STRING),\n    'substring':   fn('substring', STRING),\n\n    // REGEXP functions\n    'regexp':  REGEXP,\n    'test':    fn('test', REGEXP),\n\n    // Control Flow functions\n    'if': function(args) {\n        if (args.length < 3)\n          throw new Error('Missing arguments to if function.');\n        if (args.length > 3)\n        throw new Error('Too many arguments to if function.');\n        var a = args.map(codegen);\n        return a[0]+'?'+a[1]+':'+a[2];\n      }\n  };\n};","var parser = require('./parser'),\n    codegen = require('./codegen');\n    \nvar expr = module.exports = {\n  parse: function(input, opt) {\n      return parser.parse('('+input+')', opt);\n    },\n  code: function(opt) {\n      return codegen(opt);\n    },\n  compiler: function(args, opt) {\n      args = args.slice();\n      var generator = codegen(opt),\n          len = args.length,\n          compile = function(str) {\n            var value = generator(expr.parse(str));\n            args[len] = '\"use strict\"; return (' + value.code + ');';\n            value.fn = Function.apply(null, args);\n            return value;\n          };\n      compile.codegen = generator;\n      return compile;\n    },\n  functions: require('./functions'),\n  constants: require('./constants')\n};\n","/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/* istanbul ignore next */\nmodule.exports = (function() {\n  'use strict';\n\n  var Token,\n      TokenName,\n      Syntax,\n      PropertyKind,\n      Messages,\n      Regex,\n      source,\n      strict,\n      index,\n      lineNumber,\n      lineStart,\n      length,\n      lookahead,\n      state,\n      extra;\n\n  Token = {\n      BooleanLiteral: 1,\n      EOF: 2,\n      Identifier: 3,\n      Keyword: 4,\n      NullLiteral: 5,\n      NumericLiteral: 6,\n      Punctuator: 7,\n      StringLiteral: 8,\n      RegularExpression: 9\n  };\n\n  TokenName = {};\n  TokenName[Token.BooleanLiteral] = 'Boolean';\n  TokenName[Token.EOF] = '<end>';\n  TokenName[Token.Identifier] = 'Identifier';\n  TokenName[Token.Keyword] = 'Keyword';\n  TokenName[Token.NullLiteral] = 'Null';\n  TokenName[Token.NumericLiteral] = 'Numeric';\n  TokenName[Token.Punctuator] = 'Punctuator';\n  TokenName[Token.StringLiteral] = 'String';\n  TokenName[Token.RegularExpression] = 'RegularExpression';\n\n  Syntax = {\n      AssignmentExpression: 'AssignmentExpression',\n      ArrayExpression: 'ArrayExpression',\n      BinaryExpression: 'BinaryExpression',\n      CallExpression: 'CallExpression',\n      ConditionalExpression: 'ConditionalExpression',\n      ExpressionStatement: 'ExpressionStatement',\n      Identifier: 'Identifier',\n      Literal: 'Literal',\n      LogicalExpression: 'LogicalExpression',\n      MemberExpression: 'MemberExpression',\n      ObjectExpression: 'ObjectExpression',\n      Program: 'Program',\n      Property: 'Property',\n      UnaryExpression: 'UnaryExpression'\n  };\n\n  PropertyKind = {\n      Data: 1,\n      Get: 2,\n      Set: 4\n  };\n\n  // Error messages should be identical to V8.\n  Messages = {\n      UnexpectedToken:  'Unexpected token %0',\n      UnexpectedNumber:  'Unexpected number',\n      UnexpectedString:  'Unexpected string',\n      UnexpectedIdentifier:  'Unexpected identifier',\n      UnexpectedReserved:  'Unexpected reserved word',\n      UnexpectedEOS:  'Unexpected end of input',\n      NewlineAfterThrow:  'Illegal newline after throw',\n      InvalidRegExp: 'Invalid regular expression',\n      UnterminatedRegExp:  'Invalid regular expression: missing /',\n      InvalidLHSInAssignment:  'Invalid left-hand side in assignment',\n      InvalidLHSInForIn:  'Invalid left-hand side in for-in',\n      MultipleDefaultsInSwitch: 'More than one default clause in switch statement',\n      NoCatchOrFinally:  'Missing catch or finally after try',\n      UnknownLabel: 'Undefined label \\'%0\\'',\n      Redeclaration: '%0 \\'%1\\' has already been declared',\n      IllegalContinue: 'Illegal continue statement',\n      IllegalBreak: 'Illegal break statement',\n      IllegalReturn: 'Illegal return statement',\n      StrictModeWith:  'Strict mode code may not include a with statement',\n      StrictCatchVariable:  'Catch variable may not be eval or arguments in strict mode',\n      StrictVarName:  'Variable name may not be eval or arguments in strict mode',\n      StrictParamName:  'Parameter name eval or arguments is not allowed in strict mode',\n      StrictParamDupe: 'Strict mode function may not have duplicate parameter names',\n      StrictFunctionName:  'Function name may not be eval or arguments in strict mode',\n      StrictOctalLiteral:  'Octal literals are not allowed in strict mode.',\n      StrictDelete:  'Delete of an unqualified identifier in strict mode.',\n      StrictDuplicateProperty:  'Duplicate data property in object literal not allowed in strict mode',\n      AccessorDataProperty:  'Object literal may not have data and accessor property with the same name',\n      AccessorGetSet:  'Object literal may not have multiple get/set accessors with the same name',\n      StrictLHSAssignment:  'Assignment to eval or arguments is not allowed in strict mode',\n      StrictLHSPostfix:  'Postfix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictLHSPrefix:  'Prefix increment/decrement may not have eval or arguments operand in strict mode',\n      StrictReservedWord:  'Use of future reserved word in strict mode'\n  };\n\n  // See also tools/generate-unicode-regex.py.\n  Regex = {\n      NonAsciiIdentifierStart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]'),\n      NonAsciiIdentifierPart: new RegExp('[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]')\n  };\n\n  // Ensure the condition is true, otherwise throw an error.\n  // This is only to have a better contract semantic, i.e. another safety net\n  // to catch a logic error. The condition shall be fulfilled in normal case.\n  // Do NOT use this to enforce a certain condition on any user input.\n\n  function assert(condition, message) {\n      if (!condition) {\n          throw new Error('ASSERT: ' + message);\n      }\n  }\n\n  function isDecimalDigit(ch) {\n      return (ch >= 0x30 && ch <= 0x39);   // 0..9\n  }\n\n  function isHexDigit(ch) {\n      return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n  }\n\n  function isOctalDigit(ch) {\n      return '01234567'.indexOf(ch) >= 0;\n  }\n\n  // 7.2 White Space\n\n  function isWhiteSpace(ch) {\n      return (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n          (ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0);\n  }\n\n  // 7.3 Line Terminators\n\n  function isLineTerminator(ch) {\n      return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029);\n  }\n\n  // 7.6 Identifier Names and Identifiers\n\n  function isIdentifierStart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierStart.test(String.fromCharCode(ch)));\n  }\n\n  function isIdentifierPart(ch) {\n      return (ch === 0x24) || (ch === 0x5F) ||  // $ (dollar) and _ (underscore)\n          (ch >= 0x41 && ch <= 0x5A) ||         // A..Z\n          (ch >= 0x61 && ch <= 0x7A) ||         // a..z\n          (ch >= 0x30 && ch <= 0x39) ||         // 0..9\n          (ch === 0x5C) ||                      // \\ (backslash)\n          ((ch >= 0x80) && Regex.NonAsciiIdentifierPart.test(String.fromCharCode(ch)));\n  }\n\n  // 7.6.1.2 Future Reserved Words\n\n  function isFutureReservedWord(id) {\n      switch (id) {\n      case 'class':\n      case 'enum':\n      case 'export':\n      case 'extends':\n      case 'import':\n      case 'super':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  function isStrictModeReservedWord(id) {\n      switch (id) {\n      case 'implements':\n      case 'interface':\n      case 'package':\n      case 'private':\n      case 'protected':\n      case 'public':\n      case 'static':\n      case 'yield':\n      case 'let':\n          return true;\n      default:\n          return false;\n      }\n  }\n\n  // 7.6.1.1 Keywords\n\n  function isKeyword(id) {\n      if (strict && isStrictModeReservedWord(id)) {\n          return true;\n      }\n\n      // 'const' is specialized as Keyword in V8.\n      // 'yield' and 'let' are for compatiblity with SpiderMonkey and ES.next.\n      // Some others are from future reserved words.\n\n      switch (id.length) {\n      case 2:\n          return (id === 'if') || (id === 'in') || (id === 'do');\n      case 3:\n          return (id === 'var') || (id === 'for') || (id === 'new') ||\n              (id === 'try') || (id === 'let');\n      case 4:\n          return (id === 'this') || (id === 'else') || (id === 'case') ||\n              (id === 'void') || (id === 'with') || (id === 'enum');\n      case 5:\n          return (id === 'while') || (id === 'break') || (id === 'catch') ||\n              (id === 'throw') || (id === 'const') || (id === 'yield') ||\n              (id === 'class') || (id === 'super');\n      case 6:\n          return (id === 'return') || (id === 'typeof') || (id === 'delete') ||\n              (id === 'switch') || (id === 'export') || (id === 'import');\n      case 7:\n          return (id === 'default') || (id === 'finally') || (id === 'extends');\n      case 8:\n          return (id === 'function') || (id === 'continue') || (id === 'debugger');\n      case 10:\n          return (id === 'instanceof');\n      default:\n          return false;\n      }\n  }\n\n  function skipComment() {\n      var ch, start;\n\n      start = (index === 0);\n      while (index < length) {\n          ch = source.charCodeAt(index);\n\n          if (isWhiteSpace(ch)) {\n              ++index;\n          } else if (isLineTerminator(ch)) {\n              ++index;\n              if (ch === 0x0D && source.charCodeAt(index) === 0x0A) {\n                  ++index;\n              }\n              ++lineNumber;\n              lineStart = index;\n              start = true;\n          } else {\n              break;\n          }\n      }\n  }\n\n  function scanHexEscape(prefix) {\n      var i, len, ch, code = 0;\n\n      len = (prefix === 'u') ? 4 : 2;\n      for (i = 0; i < len; ++i) {\n          if (index < length && isHexDigit(source[index])) {\n              ch = source[index++];\n              code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n          } else {\n              return '';\n          }\n      }\n      return String.fromCharCode(code);\n  }\n\n  function scanUnicodeCodePointEscape() {\n      var ch, code, cu1, cu2;\n\n      ch = source[index];\n      code = 0;\n\n      // At least, one hex digit is required.\n      if (ch === '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      while (index < length) {\n          ch = source[index++];\n          if (!isHexDigit(ch)) {\n              break;\n          }\n          code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n      }\n\n      if (code > 0x10FFFF || ch !== '}') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      // UTF-16 Encoding\n      if (code <= 0xFFFF) {\n          return String.fromCharCode(code);\n      }\n      cu1 = ((code - 0x10000) >> 10) + 0xD800;\n      cu2 = ((code - 0x10000) & 1023) + 0xDC00;\n      return String.fromCharCode(cu1, cu2);\n  }\n\n  function getEscapedIdentifier() {\n      var ch, id;\n\n      ch = source.charCodeAt(index++);\n      id = String.fromCharCode(ch);\n\n      // '\\u' (U+005C, U+0075) denotes an escaped character.\n      if (ch === 0x5C) {\n          if (source.charCodeAt(index) !== 0x75) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          ++index;\n          ch = scanHexEscape('u');\n          if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n          id = ch;\n      }\n\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (!isIdentifierPart(ch)) {\n              break;\n          }\n          ++index;\n          id += String.fromCharCode(ch);\n\n          // '\\u' (U+005C, U+0075) denotes an escaped character.\n          if (ch === 0x5C) {\n              id = id.substr(0, id.length - 1);\n              if (source.charCodeAt(index) !== 0x75) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              ++index;\n              ch = scanHexEscape('u');\n              if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n              id += ch;\n          }\n      }\n\n      return id;\n  }\n\n  function getIdentifier() {\n      var start, ch;\n\n      start = index++;\n      while (index < length) {\n          ch = source.charCodeAt(index);\n          if (ch === 0x5C) {\n              // Blackslash (U+005C) marks Unicode escape sequence.\n              index = start;\n              return getEscapedIdentifier();\n          }\n          if (isIdentifierPart(ch)) {\n              ++index;\n          } else {\n              break;\n          }\n      }\n\n      return source.slice(start, index);\n  }\n\n  function scanIdentifier() {\n      var start, id, type;\n\n      start = index;\n\n      // Backslash (U+005C) starts an escaped character.\n      id = (source.charCodeAt(index) === 0x5C) ? getEscapedIdentifier() : getIdentifier();\n\n      // There is no keyword or literal with only one character.\n      // Thus, it must be an identifier.\n      if (id.length === 1) {\n          type = Token.Identifier;\n      } else if (isKeyword(id)) {\n          type = Token.Keyword;\n      } else if (id === 'null') {\n          type = Token.NullLiteral;\n      } else if (id === 'true' || id === 'false') {\n          type = Token.BooleanLiteral;\n      } else {\n          type = Token.Identifier;\n      }\n\n      return {\n          type: type,\n          value: id,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.7 Punctuators\n\n  function scanPunctuator() {\n      var start = index,\n          code = source.charCodeAt(index),\n          code2,\n          ch1 = source[index],\n          ch2,\n          ch3,\n          ch4;\n\n      switch (code) {\n\n      // Check for most common single-character punctuators.\n      case 0x2E:  // . dot\n      case 0x28:  // ( open bracket\n      case 0x29:  // ) close bracket\n      case 0x3B:  // ; semicolon\n      case 0x2C:  // , comma\n      case 0x7B:  // { open curly brace\n      case 0x7D:  // } close curly brace\n      case 0x5B:  // [\n      case 0x5D:  // ]\n      case 0x3A:  // :\n      case 0x3F:  // ?\n      case 0x7E:  // ~\n          ++index;\n          if (extra.tokenize) {\n              if (code === 0x28) {\n                  extra.openParenToken = extra.tokens.length;\n              } else if (code === 0x7B) {\n                  extra.openCurlyToken = extra.tokens.length;\n              }\n          }\n          return {\n              type: Token.Punctuator,\n              value: String.fromCharCode(code),\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n\n      default:\n          code2 = source.charCodeAt(index + 1);\n\n          // '=' (U+003D) marks an assignment or comparison operator.\n          if (code2 === 0x3D) {\n              switch (code) {\n              case 0x2B:  // +\n              case 0x2D:  // -\n              case 0x2F:  // /\n              case 0x3C:  // <\n              case 0x3E:  // >\n              case 0x5E:  // ^\n              case 0x7C:  // |\n              case 0x25:  // %\n              case 0x26:  // &\n              case 0x2A:  // *\n                  index += 2;\n                  return {\n                      type: Token.Punctuator,\n                      value: String.fromCharCode(code) + String.fromCharCode(code2),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n\n              case 0x21: // !\n              case 0x3D: // =\n                  index += 2;\n\n                  // !== and ===\n                  if (source.charCodeAt(index) === 0x3D) {\n                      ++index;\n                  }\n                  return {\n                      type: Token.Punctuator,\n                      value: source.slice(start, index),\n                      lineNumber: lineNumber,\n                      lineStart: lineStart,\n                      start: start,\n                      end: index\n                  };\n              }\n          }\n      }\n\n      // 4-character punctuator: >>>=\n\n      ch4 = source.substr(index, 4);\n\n      if (ch4 === '>>>=') {\n          index += 4;\n          return {\n              type: Token.Punctuator,\n              value: ch4,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 3-character punctuators: === !== >>> <<= >>=\n\n      ch3 = ch4.substr(0, 3);\n\n      if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n          index += 3;\n          return {\n              type: Token.Punctuator,\n              value: ch3,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // Other 2-character punctuators: ++ -- << >> && ||\n      ch2 = ch3.substr(0, 2);\n\n      if ((ch1 === ch2[1] && ('+-<>&|'.indexOf(ch1) >= 0)) || ch2 === '=>') {\n          index += 2;\n          return {\n              type: Token.Punctuator,\n              value: ch2,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      // 1-character punctuators: < > = ! + - * % & | ^ /\n\n      if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n          ++index;\n          return {\n              type: Token.Punctuator,\n              value: ch1,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n  }\n\n  // 7.8.3 Numeric Literals\n\n  function scanHexLiteral(start) {\n      var number = '';\n\n      while (index < length) {\n          if (!isHexDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (number.length === 0) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt('0x' + number, 16),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanOctalLiteral(start) {\n      var number = '0' + source[index++];\n      while (index < length) {\n          if (!isOctalDigit(source[index])) {\n              break;\n          }\n          number += source[index++];\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseInt(number, 8),\n          octal: true,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function scanNumericLiteral() {\n      var number, start, ch;\n\n      ch = source[index];\n      assert(isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'),\n          'Numeric literal must start with a decimal digit or a decimal point');\n\n      start = index;\n      number = '';\n      if (ch !== '.') {\n          number = source[index++];\n          ch = source[index];\n\n          // Hex number starts with '0x'.\n          // Octal number starts with '0'.\n          if (number === '0') {\n              if (ch === 'x' || ch === 'X') {\n                  ++index;\n                  return scanHexLiteral(start);\n              }\n              if (isOctalDigit(ch)) {\n                  return scanOctalLiteral(start);\n              }\n\n              // decimal number starts with '0' such as '09' is illegal.\n              if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          }\n\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === '.') {\n          number += source[index++];\n          while (isDecimalDigit(source.charCodeAt(index))) {\n              number += source[index++];\n          }\n          ch = source[index];\n      }\n\n      if (ch === 'e' || ch === 'E') {\n          number += source[index++];\n\n          ch = source[index];\n          if (ch === '+' || ch === '-') {\n              number += source[index++];\n          }\n          if (isDecimalDigit(source.charCodeAt(index))) {\n              while (isDecimalDigit(source.charCodeAt(index))) {\n                  number += source[index++];\n              }\n          } else {\n              throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n          }\n      }\n\n      if (isIdentifierStart(source.charCodeAt(index))) {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.NumericLiteral,\n          value: parseFloat(number),\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  // 7.8.4 String Literals\n\n  function scanStringLiteral() {\n      var str = '', quote, start, ch, code, unescaped, restore, octal = false, startLineNumber, startLineStart;\n      startLineNumber = lineNumber;\n      startLineStart = lineStart;\n\n      quote = source[index];\n      assert((quote === '\\'' || quote === '\"'),\n          'String literal must starts with a quote');\n\n      start = index;\n      ++index;\n\n      while (index < length) {\n          ch = source[index++];\n\n          if (ch === quote) {\n              quote = '';\n              break;\n          } else if (ch === '\\\\') {\n              ch = source[index++];\n              if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n                  switch (ch) {\n                  case 'u':\n                  case 'x':\n                      if (source[index] === '{') {\n                          ++index;\n                          str += scanUnicodeCodePointEscape();\n                      } else {\n                          restore = index;\n                          unescaped = scanHexEscape(ch);\n                          if (unescaped) {\n                              str += unescaped;\n                          } else {\n                              index = restore;\n                              str += ch;\n                          }\n                      }\n                      break;\n                  case 'n':\n                      str += '\\n';\n                      break;\n                  case 'r':\n                      str += '\\r';\n                      break;\n                  case 't':\n                      str += '\\t';\n                      break;\n                  case 'b':\n                      str += '\\b';\n                      break;\n                  case 'f':\n                      str += '\\f';\n                      break;\n                  case 'v':\n                      str += '\\x0B';\n                      break;\n\n                  default:\n                      if (isOctalDigit(ch)) {\n                          code = '01234567'.indexOf(ch);\n\n                          // \\0 is not octal escape sequence\n                          if (code !== 0) {\n                              octal = true;\n                          }\n\n                          if (index < length && isOctalDigit(source[index])) {\n                              octal = true;\n                              code = code * 8 + '01234567'.indexOf(source[index++]);\n\n                              // 3 digits are only allowed when string starts\n                              // with 0, 1, 2, 3\n                              if ('0123'.indexOf(ch) >= 0 &&\n                                      index < length &&\n                                      isOctalDigit(source[index])) {\n                                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                              }\n                          }\n                          str += String.fromCharCode(code);\n                      } else {\n                          str += ch;\n                      }\n                      break;\n                  }\n              } else {\n                  ++lineNumber;\n                  if (ch ===  '\\r' && source[index] === '\\n') {\n                      ++index;\n                  }\n                  lineStart = index;\n              }\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              break;\n          } else {\n              str += ch;\n          }\n      }\n\n      if (quote !== '') {\n          throwError({}, Messages.UnexpectedToken, 'ILLEGAL');\n      }\n\n      return {\n          type: Token.StringLiteral,\n          value: str,\n          octal: octal,\n          startLineNumber: startLineNumber,\n          startLineStart: startLineStart,\n          lineNumber: lineNumber,\n          lineStart: lineStart,\n          start: start,\n          end: index\n      };\n  }\n\n  function testRegExp(pattern, flags) {\n      var tmp = pattern,\n          value;\n\n      if (flags.indexOf('u') >= 0) {\n          // Replace each astral symbol and every Unicode code point\n          // escape sequence with a single ASCII symbol to avoid throwing on\n          // regular expressions that are only valid in combination with the\n          // `/u` flag.\n          // Note: replacing with the ASCII symbol `x` might cause false\n          // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n          // perfectly valid pattern that is equivalent to `[a-b]`, but it\n          // would be replaced by `[x-b]` which throws an error.\n          tmp = tmp\n              .replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, function ($0, $1) {\n                  if (parseInt($1, 16) <= 0x10FFFF) {\n                      return 'x';\n                  }\n                  throwError({}, Messages.InvalidRegExp);\n              })\n              .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n      }\n\n      // First, detect invalid regular expressions.\n      try {\n          value = new RegExp(tmp);\n      } catch (e) {\n          throwError({}, Messages.InvalidRegExp);\n      }\n\n      // Return a regular expression object for this pattern-flag pair, or\n      // `null` in case the current environment doesn't support the flags it\n      // uses.\n      try {\n          return new RegExp(pattern, flags);\n      } catch (exception) {\n          return null;\n      }\n  }\n\n  function scanRegExpBody() {\n      var ch, str, classMarker, terminated, body;\n\n      ch = source[index];\n      assert(ch === '/', 'Regular expression literal must start with a slash');\n      str = source[index++];\n\n      classMarker = false;\n      terminated = false;\n      while (index < length) {\n          ch = source[index++];\n          str += ch;\n          if (ch === '\\\\') {\n              ch = source[index++];\n              // ECMA-262 7.8.5\n              if (isLineTerminator(ch.charCodeAt(0))) {\n                  throwError({}, Messages.UnterminatedRegExp);\n              }\n              str += ch;\n          } else if (isLineTerminator(ch.charCodeAt(0))) {\n              throwError({}, Messages.UnterminatedRegExp);\n          } else if (classMarker) {\n              if (ch === ']') {\n                  classMarker = false;\n              }\n          } else {\n              if (ch === '/') {\n                  terminated = true;\n                  break;\n              } else if (ch === '[') {\n                  classMarker = true;\n              }\n          }\n      }\n\n      if (!terminated) {\n          throwError({}, Messages.UnterminatedRegExp);\n      }\n\n      // Exclude leading and trailing slash.\n      body = str.substr(1, str.length - 2);\n      return {\n          value: body,\n          literal: str\n      };\n  }\n\n  function scanRegExpFlags() {\n      var ch, str, flags, restore;\n\n      str = '';\n      flags = '';\n      while (index < length) {\n          ch = source[index];\n          if (!isIdentifierPart(ch.charCodeAt(0))) {\n              break;\n          }\n\n          ++index;\n          if (ch === '\\\\' && index < length) {\n              ch = source[index];\n              if (ch === 'u') {\n                  ++index;\n                  restore = index;\n                  ch = scanHexEscape('u');\n                  if (ch) {\n                      flags += ch;\n                      for (str += '\\\\u'; restore < index; ++restore) {\n                          str += source[restore];\n                      }\n                  } else {\n                      index = restore;\n                      flags += 'u';\n                      str += '\\\\u';\n                  }\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              } else {\n                  str += '\\\\';\n                  throwErrorTolerant({}, Messages.UnexpectedToken, 'ILLEGAL');\n              }\n          } else {\n              flags += ch;\n              str += ch;\n          }\n      }\n\n      return {\n          value: flags,\n          literal: str\n      };\n  }\n\n  function scanRegExp() {\n      var start, body, flags, value;\n\n      lookahead = null;\n      skipComment();\n      start = index;\n\n      body = scanRegExpBody();\n      flags = scanRegExpFlags();\n      value = testRegExp(body.value, flags.value);\n\n      if (extra.tokenize) {\n          return {\n              type: Token.RegularExpression,\n              value: value,\n              regex: {\n                  pattern: body.value,\n                  flags: flags.value\n              },\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: start,\n              end: index\n          };\n      }\n\n      return {\n          literal: body.literal + flags.literal,\n          value: value,\n          regex: {\n              pattern: body.value,\n              flags: flags.value\n          },\n          start: start,\n          end: index\n      };\n  }\n\n  function collectRegex() {\n      var pos, loc, regex, token;\n\n      skipComment();\n\n      pos = index;\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      regex = scanRegExp();\n\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (!extra.tokenize) {\n          // Pop the previous token, which is likely '/' or '/='\n          if (extra.tokens.length > 0) {\n              token = extra.tokens[extra.tokens.length - 1];\n              if (token.range[0] === pos && token.type === 'Punctuator') {\n                  if (token.value === '/' || token.value === '/=') {\n                      extra.tokens.pop();\n                  }\n              }\n          }\n\n          extra.tokens.push({\n              type: 'RegularExpression',\n              value: regex.literal,\n              regex: regex.regex,\n              range: [pos, index],\n              loc: loc\n          });\n      }\n\n      return regex;\n  }\n\n  function isIdentifierName(token) {\n      return token.type === Token.Identifier ||\n          token.type === Token.Keyword ||\n          token.type === Token.BooleanLiteral ||\n          token.type === Token.NullLiteral;\n  }\n\n  function advanceSlash() {\n      var prevToken,\n          checkToken;\n      // Using the following algorithm:\n      // https://github.com/mozilla/sweet.js/wiki/design\n      prevToken = extra.tokens[extra.tokens.length - 1];\n      if (!prevToken) {\n          // Nothing before that: it cannot be a division.\n          return collectRegex();\n      }\n      if (prevToken.type === 'Punctuator') {\n          if (prevToken.value === ']') {\n              return scanPunctuator();\n          }\n          if (prevToken.value === ')') {\n              checkToken = extra.tokens[extra.openParenToken - 1];\n              if (checkToken &&\n                      checkToken.type === 'Keyword' &&\n                      (checkToken.value === 'if' ||\n                       checkToken.value === 'while' ||\n                       checkToken.value === 'for' ||\n                       checkToken.value === 'with')) {\n                  return collectRegex();\n              }\n              return scanPunctuator();\n          }\n          if (prevToken.value === '}') {\n              // Dividing a function by anything makes little sense,\n              // but we have to check for that.\n              if (extra.tokens[extra.openCurlyToken - 3] &&\n                      extra.tokens[extra.openCurlyToken - 3].type === 'Keyword') {\n                  // Anonymous function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 4];\n                  if (!checkToken) {\n                      return scanPunctuator();\n                  }\n              } else if (extra.tokens[extra.openCurlyToken - 4] &&\n                      extra.tokens[extra.openCurlyToken - 4].type === 'Keyword') {\n                  // Named function.\n                  checkToken = extra.tokens[extra.openCurlyToken - 5];\n                  if (!checkToken) {\n                      return collectRegex();\n                  }\n              } else {\n                  return scanPunctuator();\n              }\n              return scanPunctuator();\n          }\n          return collectRegex();\n      }\n      if (prevToken.type === 'Keyword' && prevToken.value !== 'this') {\n          return collectRegex();\n      }\n      return scanPunctuator();\n  }\n\n  function advance() {\n      var ch;\n\n      skipComment();\n\n      if (index >= length) {\n          return {\n              type: Token.EOF,\n              lineNumber: lineNumber,\n              lineStart: lineStart,\n              start: index,\n              end: index\n          };\n      }\n\n      ch = source.charCodeAt(index);\n\n      if (isIdentifierStart(ch)) {\n          return scanIdentifier();\n      }\n\n      // Very common: ( and ) and ;\n      if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n          return scanPunctuator();\n      }\n\n      // String literal starts with single quote (U+0027) or double quote (U+0022).\n      if (ch === 0x27 || ch === 0x22) {\n          return scanStringLiteral();\n      }\n\n\n      // Dot (.) U+002E can also start a floating-point number, hence the need\n      // to check the next character.\n      if (ch === 0x2E) {\n          if (isDecimalDigit(source.charCodeAt(index + 1))) {\n              return scanNumericLiteral();\n          }\n          return scanPunctuator();\n      }\n\n      if (isDecimalDigit(ch)) {\n          return scanNumericLiteral();\n      }\n\n      // Slash (/) U+002F can also start a regex.\n      if (extra.tokenize && ch === 0x2F) {\n          return advanceSlash();\n      }\n\n      return scanPunctuator();\n  }\n\n  function collectToken() {\n      var loc, token, value, entry;\n\n      skipComment();\n      loc = {\n          start: {\n              line: lineNumber,\n              column: index - lineStart\n          }\n      };\n\n      token = advance();\n      loc.end = {\n          line: lineNumber,\n          column: index - lineStart\n      };\n\n      if (token.type !== Token.EOF) {\n          value = source.slice(token.start, token.end);\n          entry = {\n              type: TokenName[token.type],\n              value: value,\n              range: [token.start, token.end],\n              loc: loc\n          };\n          if (token.regex) {\n              entry.regex = {\n                  pattern: token.regex.pattern,\n                  flags: token.regex.flags\n              };\n          }\n          extra.tokens.push(entry);\n      }\n\n      return token;\n  }\n\n  function lex() {\n      var token;\n\n      token = lookahead;\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n\n      index = token.end;\n      lineNumber = token.lineNumber;\n      lineStart = token.lineStart;\n\n      return token;\n  }\n\n  function peek() {\n      var pos, line, start;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      lookahead = (typeof extra.tokens !== 'undefined') ? collectToken() : advance();\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n  }\n\n  function Position() {\n      this.line = lineNumber;\n      this.column = index - lineStart;\n  }\n\n  function SourceLocation() {\n      this.start = new Position();\n      this.end = null;\n  }\n\n  function WrappingSourceLocation(startToken) {\n      if (startToken.type === Token.StringLiteral) {\n          this.start = {\n              line: startToken.startLineNumber,\n              column: startToken.start - startToken.startLineStart\n          };\n      } else {\n          this.start = {\n              line: startToken.lineNumber,\n              column: startToken.start - startToken.lineStart\n          };\n      }\n      this.end = null;\n  }\n\n  function Node() {\n      // Skip comment.\n      index = lookahead.start;\n      if (lookahead.type === Token.StringLiteral) {\n          lineNumber = lookahead.startLineNumber;\n          lineStart = lookahead.startLineStart;\n      } else {\n          lineNumber = lookahead.lineNumber;\n          lineStart = lookahead.lineStart;\n      }\n      if (extra.range) {\n          this.range = [index, 0];\n      }\n      if (extra.loc) {\n          this.loc = new SourceLocation();\n      }\n  }\n\n  function WrappingNode(startToken) {\n      if (extra.range) {\n          this.range = [startToken.start, 0];\n      }\n      if (extra.loc) {\n          this.loc = new WrappingSourceLocation(startToken);\n      }\n  }\n\n  WrappingNode.prototype = Node.prototype = {\n\n      finish: function () {\n          if (extra.range) {\n              this.range[1] = index;\n          }\n          if (extra.loc) {\n              this.loc.end = new Position();\n              if (extra.source) {\n                  this.loc.source = extra.source;\n              }\n          }\n      },\n\n      finishArrayExpression: function (elements) {\n          this.type = Syntax.ArrayExpression;\n          this.elements = elements;\n          this.finish();\n          return this;\n      },\n\n      finishAssignmentExpression: function (operator, left, right) {\n          this.type = Syntax.AssignmentExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishBinaryExpression: function (operator, left, right) {\n          this.type = (operator === '||' || operator === '&&') ? Syntax.LogicalExpression : Syntax.BinaryExpression;\n          this.operator = operator;\n          this.left = left;\n          this.right = right;\n          this.finish();\n          return this;\n      },\n\n      finishCallExpression: function (callee, args) {\n          this.type = Syntax.CallExpression;\n          this.callee = callee;\n          this.arguments = args;\n          this.finish();\n          return this;\n      },\n\n      finishConditionalExpression: function (test, consequent, alternate) {\n          this.type = Syntax.ConditionalExpression;\n          this.test = test;\n          this.consequent = consequent;\n          this.alternate = alternate;\n          this.finish();\n          return this;\n      },\n\n      finishExpressionStatement: function (expression) {\n          this.type = Syntax.ExpressionStatement;\n          this.expression = expression;\n          this.finish();\n          return this;\n      },\n\n      finishIdentifier: function (name) {\n          this.type = Syntax.Identifier;\n          this.name = name;\n          this.finish();\n          return this;\n      },\n\n      finishLiteral: function (token) {\n          this.type = Syntax.Literal;\n          this.value = token.value;\n          this.raw = source.slice(token.start, token.end);\n          if (token.regex) {\n              if (this.raw == '//') {\n                this.raw = '/(?:)/';\n              }\n              this.regex = token.regex;\n          }\n          this.finish();\n          return this;\n      },\n\n      finishMemberExpression: function (accessor, object, property) {\n          this.type = Syntax.MemberExpression;\n          this.computed = accessor === '[';\n          this.object = object;\n          this.property = property;\n          this.finish();\n          return this;\n      },\n\n      finishObjectExpression: function (properties) {\n          this.type = Syntax.ObjectExpression;\n          this.properties = properties;\n          this.finish();\n          return this;\n      },\n\n      finishProgram: function (body) {\n          this.type = Syntax.Program;\n          this.body = body;\n          this.finish();\n          return this;\n      },\n\n      finishProperty: function (kind, key, value) {\n          this.type = Syntax.Property;\n          this.key = key;\n          this.value = value;\n          this.kind = kind;\n          this.finish();\n          return this;\n      },\n\n      finishUnaryExpression: function (operator, argument) {\n          this.type = Syntax.UnaryExpression;\n          this.operator = operator;\n          this.argument = argument;\n          this.prefix = true;\n          this.finish();\n          return this;\n      }\n  };\n\n  // Return true if there is a line terminator before the next token.\n\n  function peekLineTerminator() {\n      var pos, line, start, found;\n\n      pos = index;\n      line = lineNumber;\n      start = lineStart;\n      skipComment();\n      found = lineNumber !== line;\n      index = pos;\n      lineNumber = line;\n      lineStart = start;\n\n      return found;\n  }\n\n  // Throw an exception\n\n  function throwError(token, messageFormat) {\n      var error,\n          args = Array.prototype.slice.call(arguments, 2),\n          msg = messageFormat.replace(\n              /%(\\d)/g,\n              function (whole, index) {\n                  assert(index < args.length, 'Message reference must be in range');\n                  return args[index];\n              }\n          );\n\n      if (typeof token.lineNumber === 'number') {\n          error = new Error('Line ' + token.lineNumber + ': ' + msg);\n          error.index = token.start;\n          error.lineNumber = token.lineNumber;\n          error.column = token.start - lineStart + 1;\n      } else {\n          error = new Error('Line ' + lineNumber + ': ' + msg);\n          error.index = index;\n          error.lineNumber = lineNumber;\n          error.column = index - lineStart + 1;\n      }\n\n      error.description = msg;\n      throw error;\n  }\n\n  function throwErrorTolerant() {\n      try {\n          throwError.apply(null, arguments);\n      } catch (e) {\n          if (extra.errors) {\n              extra.errors.push(e);\n          } else {\n              throw e;\n          }\n      }\n  }\n\n\n  // Throw an exception because of the token.\n\n  function throwUnexpected(token) {\n      if (token.type === Token.EOF) {\n          throwError(token, Messages.UnexpectedEOS);\n      }\n\n      if (token.type === Token.NumericLiteral) {\n          throwError(token, Messages.UnexpectedNumber);\n      }\n\n      if (token.type === Token.StringLiteral) {\n          throwError(token, Messages.UnexpectedString);\n      }\n\n      if (token.type === Token.Identifier) {\n          throwError(token, Messages.UnexpectedIdentifier);\n      }\n\n      if (token.type === Token.Keyword) {\n          if (isFutureReservedWord(token.value)) {\n              throwError(token, Messages.UnexpectedReserved);\n          } else if (strict && isStrictModeReservedWord(token.value)) {\n              throwErrorTolerant(token, Messages.StrictReservedWord);\n              return;\n          }\n          throwError(token, Messages.UnexpectedToken, token.value);\n      }\n\n      // BooleanLiteral, NullLiteral, or Punctuator.\n      throwError(token, Messages.UnexpectedToken, token.value);\n  }\n\n  // Expect the next token to match the specified punctuator.\n  // If not, an exception will be thrown.\n\n  function expect(value) {\n      var token = lex();\n      if (token.type !== Token.Punctuator || token.value !== value) {\n          throwUnexpected(token);\n      }\n  }\n\n  /**\n   * @name expectTolerant\n   * @description Quietly expect the given token value when in tolerant mode, otherwise delegates\n   * to <code>expect(value)</code>\n   * @param {String} value The value we are expecting the lookahead token to have\n   * @since 2.0\n   */\n  function expectTolerant(value) {\n      if (extra.errors) {\n          var token = lookahead;\n          if (token.type !== Token.Punctuator && token.value !== value) {\n              throwErrorTolerant(token, Messages.UnexpectedToken, token.value);\n          } else {\n              lex();\n          }\n      } else {\n          expect(value);\n      }\n  }\n\n  // Return true if the next token matches the specified punctuator.\n\n  function match(value) {\n      return lookahead.type === Token.Punctuator && lookahead.value === value;\n  }\n\n  // Return true if the next token matches the specified keyword\n\n  function matchKeyword(keyword) {\n      return lookahead.type === Token.Keyword && lookahead.value === keyword;\n  }\n\n  function consumeSemicolon() {\n      var line;\n\n      // Catch the very common case first: immediately a semicolon (U+003B).\n      if (source.charCodeAt(index) === 0x3B || match(';')) {\n          lex();\n          return;\n      }\n\n      line = lineNumber;\n      skipComment();\n      if (lineNumber !== line) {\n          return;\n      }\n\n      if (lookahead.type !== Token.EOF && !match('}')) {\n          throwUnexpected(lookahead);\n      }\n  }\n\n  // 11.1.4 Array Initialiser\n\n  function parseArrayInitialiser() {\n      var elements = [], node = new Node();\n\n      expect('[');\n\n      while (!match(']')) {\n          if (match(',')) {\n              lex();\n              elements.push(null);\n          } else {\n              elements.push(parseAssignmentExpression());\n\n              if (!match(']')) {\n                  expect(',');\n              }\n          }\n      }\n\n      lex();\n\n      return node.finishArrayExpression(elements);\n  }\n\n  // 11.1.5 Object Initialiser\n\n  function parseObjectPropertyKey() {\n      var token, node = new Node();\n\n      token = lex();\n\n      // Note: This function is called only from parseObjectProperty(), where\n      // EOF and Punctuator tokens are already filtered out.\n\n      if (token.type === Token.StringLiteral || token.type === Token.NumericLiteral) {\n          if (strict && token.octal) {\n              throwErrorTolerant(token, Messages.StrictOctalLiteral);\n          }\n          return node.finishLiteral(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseObjectProperty() {\n      var token, key, id, value, node = new Node();\n\n      token = lookahead;\n\n      if (token.type === Token.Identifier) {\n          id = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', id, value);\n      }\n      if (token.type === Token.EOF || token.type === Token.Punctuator) {\n          throwUnexpected(token);\n      } else {\n          key = parseObjectPropertyKey();\n          expect(':');\n          value = parseAssignmentExpression();\n          return node.finishProperty('init', key, value);\n      }\n  }\n\n  function parseObjectInitialiser() {\n      var properties = [], property, name, key, kind, map = {}, toString = String, node = new Node();\n\n      expect('{');\n\n      while (!match('}')) {\n          property = parseObjectProperty();\n\n          if (property.key.type === Syntax.Identifier) {\n              name = property.key.name;\n          } else {\n              name = toString(property.key.value);\n          }\n          kind = (property.kind === 'init') ? PropertyKind.Data : (property.kind === 'get') ? PropertyKind.Get : PropertyKind.Set;\n\n          key = '$' + name;\n          if (Object.prototype.hasOwnProperty.call(map, key)) {\n              if (map[key] === PropertyKind.Data) {\n                  if (strict && kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.StrictDuplicateProperty);\n                  } else if (kind !== PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  }\n              } else {\n                  if (kind === PropertyKind.Data) {\n                      throwErrorTolerant({}, Messages.AccessorDataProperty);\n                  } else if (map[key] & kind) {\n                      throwErrorTolerant({}, Messages.AccessorGetSet);\n                  }\n              }\n              map[key] |= kind;\n          } else {\n              map[key] = kind;\n          }\n\n          properties.push(property);\n\n          if (!match('}')) {\n              expectTolerant(',');\n          }\n      }\n\n      expect('}');\n\n      return node.finishObjectExpression(properties);\n  }\n\n  // 11.1.6 The Grouping Operator\n\n  function parseGroupExpression() {\n      var expr;\n\n      expect('(');\n\n      ++state.parenthesisCount;\n\n      expr = parseExpression();\n\n      expect(')');\n\n      return expr;\n  }\n\n\n  // 11.1 Primary Expressions\n\n  var legalKeywords = {\"if\":1, \"this\":1};\n\n  function parsePrimaryExpression() {\n      var type, token, expr, node;\n\n      if (match('(')) {\n          return parseGroupExpression();\n      }\n\n      if (match('[')) {\n          return parseArrayInitialiser();\n      }\n\n      if (match('{')) {\n          return parseObjectInitialiser();\n      }\n\n      type = lookahead.type;\n      node = new Node();\n\n      if (type === Token.Identifier || legalKeywords[lookahead.value]) {\n          expr = node.finishIdentifier(lex().value);\n      } else if (type === Token.StringLiteral || type === Token.NumericLiteral) {\n          if (strict && lookahead.octal) {\n              throwErrorTolerant(lookahead, Messages.StrictOctalLiteral);\n          }\n          expr = node.finishLiteral(lex());\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\");\n      } else if (type === Token.BooleanLiteral) {\n          token = lex();\n          token.value = (token.value === 'true');\n          expr = node.finishLiteral(token);\n      } else if (type === Token.NullLiteral) {\n          token = lex();\n          token.value = null;\n          expr = node.finishLiteral(token);\n      } else if (match('/') || match('/=')) {\n          if (typeof extra.tokens !== 'undefined') {\n              expr = node.finishLiteral(collectRegex());\n          } else {\n              expr = node.finishLiteral(scanRegExp());\n          }\n          peek();\n      } else {\n          throwUnexpected(lex());\n      }\n\n      return expr;\n  }\n\n  // 11.2 Left-Hand-Side Expressions\n\n  function parseArguments() {\n      var args = [];\n\n      expect('(');\n\n      if (!match(')')) {\n          while (index < length) {\n              args.push(parseAssignmentExpression());\n              if (match(')')) {\n                  break;\n              }\n              expectTolerant(',');\n          }\n      }\n\n      expect(')');\n\n      return args;\n  }\n\n  function parseNonComputedProperty() {\n      var token, node = new Node();\n\n      token = lex();\n\n      if (!isIdentifierName(token)) {\n          throwUnexpected(token);\n      }\n\n      return node.finishIdentifier(token.value);\n  }\n\n  function parseNonComputedMember() {\n      expect('.');\n\n      return parseNonComputedProperty();\n  }\n\n  function parseComputedMember() {\n      var expr;\n\n      expect('[');\n\n      expr = parseExpression();\n\n      expect(']');\n\n      return expr;\n  }\n\n  function parseLeftHandSideExpressionAllowCall() {\n      var expr, args, property, startToken, previousAllowIn = state.allowIn;\n\n      startToken = lookahead;\n      state.allowIn = true;\n      expr = parsePrimaryExpression();\n\n      for (;;) {\n          if (match('.')) {\n              property = parseNonComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('.', expr, property);\n          } else if (match('(')) {\n              args = parseArguments();\n              expr = new WrappingNode(startToken).finishCallExpression(expr, args);\n          } else if (match('[')) {\n              property = parseComputedMember();\n              expr = new WrappingNode(startToken).finishMemberExpression('[', expr, property);\n          } else {\n              break;\n          }\n      }\n      state.allowIn = previousAllowIn;\n\n      return expr;\n  }\n\n  // 11.3 Postfix Expressions\n\n  function parsePostfixExpression() {\n      var expr = parseLeftHandSideExpressionAllowCall();\n\n      if (lookahead.type === Token.Punctuator) {\n          if ((match('++') || match('--')) && !peekLineTerminator()) {\n              throw new Error(\"Disabled.\");\n          }\n      }\n\n      return expr;\n  }\n\n  // 11.4 Unary Operators\n\n  function parseUnaryExpression() {\n      var token, expr, startToken;\n\n      if (lookahead.type !== Token.Punctuator && lookahead.type !== Token.Keyword) {\n          expr = parsePostfixExpression();\n      } else if (match('++') || match('--')) {\n          throw new Error(\"Disabled.\");\n      } else if (match('+') || match('-') || match('~') || match('!')) {\n          startToken = lookahead;\n          token = lex();\n          expr = parseUnaryExpression();\n          expr = new WrappingNode(startToken).finishUnaryExpression(token.value, expr);\n      } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n          throw new Error(\"Disabled.\");\n      } else {\n          expr = parsePostfixExpression();\n      }\n\n      return expr;\n  }\n\n  function binaryPrecedence(token, allowIn) {\n      var prec = 0;\n\n      if (token.type !== Token.Punctuator && token.type !== Token.Keyword) {\n          return 0;\n      }\n\n      switch (token.value) {\n      case '||':\n          prec = 1;\n          break;\n\n      case '&&':\n          prec = 2;\n          break;\n\n      case '|':\n          prec = 3;\n          break;\n\n      case '^':\n          prec = 4;\n          break;\n\n      case '&':\n          prec = 5;\n          break;\n\n      case '==':\n      case '!=':\n      case '===':\n      case '!==':\n          prec = 6;\n          break;\n\n      case '<':\n      case '>':\n      case '<=':\n      case '>=':\n      case 'instanceof':\n          prec = 7;\n          break;\n\n      case 'in':\n          prec = allowIn ? 7 : 0;\n          break;\n\n      case '<<':\n      case '>>':\n      case '>>>':\n          prec = 8;\n          break;\n\n      case '+':\n      case '-':\n          prec = 9;\n          break;\n\n      case '*':\n      case '/':\n      case '%':\n          prec = 11;\n          break;\n\n      default:\n          break;\n      }\n\n      return prec;\n  }\n\n  // 11.5 Multiplicative Operators\n  // 11.6 Additive Operators\n  // 11.7 Bitwise Shift Operators\n  // 11.8 Relational Operators\n  // 11.9 Equality Operators\n  // 11.10 Binary Bitwise Operators\n  // 11.11 Binary Logical Operators\n\n  function parseBinaryExpression() {\n      var marker, markers, expr, token, prec, stack, right, operator, left, i;\n\n      marker = lookahead;\n      left = parseUnaryExpression();\n\n      token = lookahead;\n      prec = binaryPrecedence(token, state.allowIn);\n      if (prec === 0) {\n          return left;\n      }\n      token.prec = prec;\n      lex();\n\n      markers = [marker, lookahead];\n      right = parseUnaryExpression();\n\n      stack = [left, token, right];\n\n      while ((prec = binaryPrecedence(lookahead, state.allowIn)) > 0) {\n\n          // Reduce: make a binary expression from the three topmost entries.\n          while ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\n              right = stack.pop();\n              operator = stack.pop().value;\n              left = stack.pop();\n              markers.pop();\n              expr = new WrappingNode(markers[markers.length - 1]).finishBinaryExpression(operator, left, right);\n              stack.push(expr);\n          }\n\n          // Shift.\n          token = lex();\n          token.prec = prec;\n          stack.push(token);\n          markers.push(lookahead);\n          expr = parseUnaryExpression();\n          stack.push(expr);\n      }\n\n      // Final reduce to clean-up the stack.\n      i = stack.length - 1;\n      expr = stack[i];\n      markers.pop();\n      while (i > 1) {\n          expr = new WrappingNode(markers.pop()).finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n          i -= 2;\n      }\n\n      return expr;\n  }\n\n  // 11.12 Conditional Operator\n\n  function parseConditionalExpression() {\n      var expr, previousAllowIn, consequent, alternate, startToken;\n\n      startToken = lookahead;\n\n      expr = parseBinaryExpression();\n\n      if (match('?')) {\n          lex();\n          previousAllowIn = state.allowIn;\n          state.allowIn = true;\n          consequent = parseAssignmentExpression();\n          state.allowIn = previousAllowIn;\n          expect(':');\n          alternate = parseAssignmentExpression();\n\n          expr = new WrappingNode(startToken).finishConditionalExpression(expr, consequent, alternate);\n      }\n\n      return expr;\n  }\n\n  // 11.13 Assignment Operators\n\n  function parseAssignmentExpression() {\n      var oldParenthesisCount, token, expr, startToken;\n\n      oldParenthesisCount = state.parenthesisCount;\n\n      startToken = lookahead;\n      token = lookahead;\n\n      expr = parseConditionalExpression();\n\n      return expr;\n  }\n\n  // 11.14 Comma Operator\n\n  function parseExpression() {\n      var expr = parseAssignmentExpression();\n\n      if (match(',')) {\n          throw new Error(\"Disabled.\"); // no sequence expressions\n      }\n\n      return expr;\n  }\n\n  // 12.4 Expression Statement\n\n  function parseExpressionStatement(node) {\n      var expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 12 Statements\n\n  function parseStatement() {\n      var type = lookahead.type,\n          expr,\n          node;\n\n      if (type === Token.EOF) {\n          throwUnexpected(lookahead);\n      }\n\n      if (type === Token.Punctuator && lookahead.value === '{') {\n          throw new Error(\"Disabled.\"); // block statement\n      }\n\n      node = new Node();\n\n      if (type === Token.Punctuator) {\n          switch (lookahead.value) {\n          case ';':\n              throw new Error(\"Disabled.\"); // empty statement\n          case '(':\n              return parseExpressionStatement(node);\n          default:\n              break;\n          }\n      } else if (type === Token.Keyword) {\n          throw new Error(\"Disabled.\"); // keyword\n      }\n\n      expr = parseExpression();\n      consumeSemicolon();\n      return node.finishExpressionStatement(expr);\n  }\n\n  // 14 Program\n\n  function parseSourceElement() {\n      if (lookahead.type === Token.Keyword) {\n          switch (lookahead.value) {\n          case 'const':\n          case 'let':\n              throw new Error(\"Disabled.\");\n          case 'function':\n              throw new Error(\"Disabled.\");\n          default:\n              return parseStatement();\n          }\n      }\n\n      if (lookahead.type !== Token.EOF) {\n          return parseStatement();\n      }\n  }\n\n  function parseSourceElements() {\n      var sourceElement, sourceElements = [], token, directive, firstRestricted;\n\n      while (index < length) {\n          token = lookahead;\n          if (token.type !== Token.StringLiteral) {\n              break;\n          }\n\n          sourceElement = parseSourceElement();\n          sourceElements.push(sourceElement);\n          if (sourceElement.expression.type !== Syntax.Literal) {\n              // this is not directive\n              break;\n          }\n          directive = source.slice(token.start + 1, token.end - 1);\n          if (directive === 'use strict') {\n              strict = true;\n              if (firstRestricted) {\n                  throwErrorTolerant(firstRestricted, Messages.StrictOctalLiteral);\n              }\n          } else {\n              if (!firstRestricted && token.octal) {\n                  firstRestricted = token;\n              }\n          }\n      }\n\n      while (index < length) {\n          sourceElement = parseSourceElement();\n          if (typeof sourceElement === 'undefined') {\n              break;\n          }\n          sourceElements.push(sourceElement);\n      }\n      return sourceElements;\n  }\n\n  function parseProgram() {\n      var body, node;\n\n      skipComment();\n      peek();\n      node = new Node();\n      strict = true; // assume strict\n\n      body = parseSourceElements();\n      return node.finishProgram(body);\n  }\n\n  function filterTokenLocation() {\n      var i, entry, token, tokens = [];\n\n      for (i = 0; i < extra.tokens.length; ++i) {\n          entry = extra.tokens[i];\n          token = {\n              type: entry.type,\n              value: entry.value\n          };\n          if (entry.regex) {\n              token.regex = {\n                  pattern: entry.regex.pattern,\n                  flags: entry.regex.flags\n              };\n          }\n          if (extra.range) {\n              token.range = entry.range;\n          }\n          if (extra.loc) {\n              token.loc = entry.loc;\n          }\n          tokens.push(token);\n      }\n\n      extra.tokens = tokens;\n  }\n\n  function tokenize(code, options) {\n      var toString,\n          tokens;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n\n      // Options matching.\n      options = options || {};\n\n      // Of course we collect tokens here.\n      options.tokens = true;\n      extra.tokens = [];\n      extra.tokenize = true;\n      // The following two fields are necessary to compute the Regex tokens.\n      extra.openParenToken = -1;\n      extra.openCurlyToken = -1;\n\n      extra.range = (typeof options.range === 'boolean') && options.range;\n      extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n      if (typeof options.tolerant === 'boolean' && options.tolerant) {\n          extra.errors = [];\n      }\n\n      try {\n          peek();\n          if (lookahead.type === Token.EOF) {\n              return extra.tokens;\n          }\n\n          lex();\n          while (lookahead.type !== Token.EOF) {\n              try {\n                  lex();\n              } catch (lexError) {\n                  if (extra.errors) {\n                      extra.errors.push(lexError);\n                      // We have to break on the first error\n                      // to avoid infinite loops.\n                      break;\n                  } else {\n                      throw lexError;\n                  }\n              }\n          }\n\n          filterTokenLocation();\n          tokens = extra.tokens;\n          if (typeof extra.errors !== 'undefined') {\n              tokens.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n      return tokens;\n  }\n\n  function parse(code, options) {\n      var program, toString;\n\n      toString = String;\n      if (typeof code !== 'string' && !(code instanceof String)) {\n          code = toString(code);\n      }\n\n      source = code;\n      index = 0;\n      lineNumber = (source.length > 0) ? 1 : 0;\n      lineStart = 0;\n      length = source.length;\n      lookahead = null;\n      state = {\n          allowIn: true,\n          labelSet: {},\n          parenthesisCount: 0,\n          inFunctionBody: false,\n          inIteration: false,\n          inSwitch: false,\n          lastCommentStart: -1\n      };\n\n      extra = {};\n      if (typeof options !== 'undefined') {\n          extra.range = (typeof options.range === 'boolean') && options.range;\n          extra.loc = (typeof options.loc === 'boolean') && options.loc;\n\n          if (extra.loc && options.source !== null && options.source !== undefined) {\n              extra.source = toString(options.source);\n          }\n\n          if (typeof options.tokens === 'boolean' && options.tokens) {\n              extra.tokens = [];\n          }\n          if (typeof options.tolerant === 'boolean' && options.tolerant) {\n              extra.errors = [];\n          }\n      }\n\n      try {\n          program = parseProgram();\n          if (typeof extra.tokens !== 'undefined') {\n              filterTokenLocation();\n              program.tokens = extra.tokens;\n          }\n          if (typeof extra.errors !== 'undefined') {\n              program.errors = extra.errors;\n          }\n      } catch (e) {\n          throw e;\n      } finally {\n          extra = {};\n      }\n\n      return program;\n  }\n\n  return {\n    tokenize: tokenize,\n    parse: parse\n  };\n\n})();","var expr = require('vega-expression'),\n    args = ['datum', 'event', 'signals'];\n\nmodule.exports = expr.compiler(args, {\n  idWhiteList: args,\n  fieldVar:    args[0],\n  globalVar:   args[2],\n  functions:   function(codegen) {\n    var fn = expr.functions(codegen);\n    fn.eventItem = function() { return 'event.vg.item'; };\n    fn.eventGroup = 'event.vg.getGroup';\n    fn.eventX = 'event.vg.getX';\n    fn.eventY = 'event.vg.getY';\n    fn.open = 'window.open';\n    return fn;\n  }\n});","var dl = require('datalib'),\n    df = require('vega-dataflow'),\n    log = require('vega-logging'),\n    ChangeSet = df.ChangeSet,\n    Tuple = df.Tuple,\n    Deps = df.Dependencies,\n    Transform = require('./Transform'),\n    Facetor = require('./Facetor');\n\nfunction Aggregate(graph) {\n  Transform.prototype.init.call(this, graph);\n\n  Transform.addParameters(this, {\n    groupby: {type: 'array<field>'},\n    summarize: {\n      type: 'custom', \n      set: function(summarize) {\n        var signalDeps = {},\n            tx = this._transform,\n            i, len, f, fields, name, ops;\n\n        if (!dl.isArray(fields = summarize)) { // Object syntax from dl\n          fields = [];\n          for (name in summarize) {\n            ops = dl.array(summarize[name]);\n            fields.push({field: name, ops: ops});\n          }\n        }\n\n        function sg(x) { if (x.signal) signalDeps[x.signal] = 1; }\n\n        for (i=0, len=fields.length; i<len; ++i) {\n          f = fields[i];\n          if (f.field.signal) { signalDeps[f.field.signal] = 1; }\n          dl.array(f.ops).forEach(sg);\n          dl.array(f.as).forEach(sg);\n        }\n\n        tx._fields = fields;\n        tx._aggr = null;\n        tx.dependency(Deps.SIGNALS, dl.keys(signalDeps));\n        return tx;\n      }\n    }\n  });\n\n  this._aggr  = null; // dl.Aggregator\n  this._input = null; // Used by Facetor._on_keep.\n  this._args  = null; // To cull re-computation.\n  this._fields = [];\n  this._out = [];\n\n  this._type = TYPES.TUPLE; \n  this._acc = {groupby: dl.true, value: dl.true};\n\n  return this.router(true).produces(true);\n}\n\nvar prototype = (Aggregate.prototype = Object.create(Transform.prototype));\nprototype.constructor = Aggregate;\n\nvar TYPES = Aggregate.TYPES = {\n  VALUE: 1, \n  TUPLE: 2, \n  MULTI: 3\n};\n\nAggregate.VALID_OPS = [\n  'values', 'count', 'valid', 'missing', 'distinct', \n  'sum', 'mean', 'average', 'variance', 'variancep', 'stdev', \n  'stdevp', 'median', 'q1', 'q3', 'modeskew', 'min', 'max', \n  'argmin', 'argmax'\n];\n\nprototype.type = function(type) { \n  return (this._type = type, this); \n};\n\nprototype.accessors = function(groupby, value) {\n  var acc = this._acc;\n  acc.groupby = dl.$(groupby) || dl.true;\n  acc.value = dl.$(value) || dl.true;\n};\n\nprototype.aggr = function() {\n  if (this._aggr) return this._aggr;\n\n  var g = this._graph,\n      hasGetter = false,\n      args = [],\n      groupby = this.param('groupby').field,\n      value = function(x) { return x.signal ? g.signalRef(x.signal) : x; };\n\n  // Prepare summarize fields.\n  var fields = this._fields.map(function(f) {\n    var field = {\n      name: value(f.field),\n      as:   dl.array(f.as),\n      ops:  dl.array(value(f.ops)).map(value),\n      get:  f.get\n    };\n    hasGetter = hasGetter || field.get != null;\n    args.push(field.name);\n    return field;\n  });\n\n  // If there is an arbitrary getter, all bets are off.\n  // Otherwise, we can check argument fields to cull re-computation.\n  groupby.forEach(function(g) {\n    if (g.get) hasGetter = true;\n    args.push(g.name || g);\n  });\n  this._args = hasGetter || !fields.length ? null : args;\n\n  if (!fields.length) fields = {'*': 'values'};\n\n  // Instatiate our aggregator instance.\n  // Facetor is a special subclass that can facet into data pipelines.\n  var aggr = this._aggr = new Facetor()\n    .groupby(groupby)\n    .stream(true)\n    .summarize(fields);\n\n  // Collect output fields sets by this aggregate.\n  this._out = getFields(aggr);\n\n  // If we are processing tuples, key them by '_id'.\n  if (this._type !== TYPES.VALUE) { aggr.key('_id'); }\n\n  return aggr;\n};\n\nfunction getFields(aggr) {\n  // Collect the output fields set by this aggregate.\n  var f = [], i, n, j, m, dims, vals, meas;\n\n  dims = aggr._dims;\n  for (i=0, n=dims.length; i<n; ++i) {\n    f.push(dims[i].name);\n  }\n\n  vals = aggr._aggr;\n  for (i=0, n=vals.length; i<n; ++i) {\n    meas = vals[i].measures.fields;\n    for (j=0, m=meas.length; j<m; ++j) {\n      f.push(meas[j]);\n    }\n  }\n\n  return f;\n}\n\nprototype.transform = function(input, reset) {\n  log.debug(input, ['aggregate']);\n\n  var output = ChangeSet.create(input),\n      aggr = this.aggr(),\n      out = this._out,\n      args = this._args,\n      reeval = true,\n      p = Tuple.prev,\n      add, rem, mod, i;\n\n  // Upon reset, retract prior tuples and re-initialize.\n  if (reset) {\n    output.rem.push.apply(output.rem, aggr.result());\n    aggr.clear();\n    this._aggr = null;\n    aggr = this.aggr();\n  }\n\n  // Get update methods according to input type.\n  if (this._type === TYPES.TUPLE) {\n    add = function(x) { aggr._add(x); Tuple.prev_init(x); };\n    rem = function(x) { aggr._rem(p(x)); };\n    mod = function(x) { aggr._mod(x, p(x)); };\n  } else {\n    var gby = this._acc.groupby,\n        val = this._acc.value,\n        get = this._type === TYPES.VALUE ? val : function(x) {\n          return { _id: x._id, groupby: gby(x), value: val(x) };\n        };\n    add = function(x) { aggr._add(get(x)); Tuple.prev_init(x); };\n    rem = function(x) { aggr._rem(get(p(x))); };\n    mod = function(x) { aggr._mod(get(x), get(p(x))); };\n  }\n\n  input.add.forEach(add);\n  if (reset) {\n    // A signal change triggered reflow. Add everything.\n    // No need for rem, we cleared the aggregator.\n    input.mod.forEach(add);\n  } else {\n    input.rem.forEach(rem);\n\n    // If possible, check argument fields to see if we need to re-process mods.\n    if (args) for (i=0, reeval=false; i<args.length; ++i) {\n      if (input.fields[args[i]]) { reeval = true; break; }\n    }\n    if (reeval) input.mod.forEach(mod);\n  }\n\n  // Indicate output fields and return aggregate tuples.\n  for (i=0; i<out.length; ++i) {\n    output.fields[out[i]] = 1;\n  }\n  return (aggr._input = input, aggr.changes(output));\n};\n\nmodule.exports = Aggregate;","var dl = require('datalib'),\n    Aggregator = dl.Aggregator,\n    Base = Aggregator.prototype,\n    df = require('vega-dataflow'),\n    Tuple = df.Tuple,\n    log = require('vega-logging'),\n    facetID = 0;\n\nfunction Facetor() {\n  Aggregator.call(this);\n  this._facet = null;\n  this._facetID = ++facetID;\n}\n\nvar prototype = (Facetor.prototype = Object.create(Base));\nprototype.constructor = Facetor;\n\nprototype.facet = function(f) {\n  return arguments.length ? (this._facet = f, this) : this._facet;\n};\n\nprototype._ingest = function(t) { \n  return Tuple.ingest(t, null);\n};\n\nprototype._assign = Tuple.set;\n\nfunction disconnect_cell(facet) {\n  log.debug({}, ['disconnecting cell', this.tuple._id]);\n  var pipeline = this.ds.pipeline();\n  facet.removeListener(pipeline[0]);\n  facet._graph.removeListener(pipeline[0]);\n  facet._graph.disconnect(pipeline);\n}\n\nprototype._newcell = function(x, key) {\n  var cell  = Base._newcell.call(this, x, key),\n      facet = this._facet;\n\n  if (facet) {\n    var graph = facet._graph,\n        tuple = cell.tuple,\n        pipeline = facet.param('transform');\n    cell.ds = graph.data(tuple._facetID, pipeline, tuple);\n    cell.disconnect = disconnect_cell;\n    facet.addListener(pipeline[0]);\n  }\n\n  return cell;\n};\n\nprototype._newtuple = function(x, key) {\n  var t = Base._newtuple.call(this, x);\n  if (this._facet) {\n    Tuple.set(t, 'key', key);\n    Tuple.set(t, '_facetID', this._facetID + '_' + key);\n  }\n  return t;\n};\n\nprototype.clear = function() {\n  if (this._facet) {\n    for (var k in this._cells) {\n      this._cells[k].disconnect(this._facet);\n    }\n  }\n  return Base.clear.call(this);\n};\n\nprototype._on_add = function(x, cell) {\n  if (this._facet) cell.ds._input.add.push(x);\n};\n\nprototype._on_rem = function(x, cell) {\n  if (this._facet) cell.ds._input.rem.push(x);\n};\n\nprototype._on_mod = function(x, prev, cell0, cell1) {\n  if (this._facet) { // Propagate tuples\n    if (cell0 === cell1) {\n      cell0.ds._input.mod.push(x);\n    } else {\n      cell0.ds._input.rem.push(x);\n      cell1.ds._input.add.push(x);\n    }\n  }\n};\n\nprototype._on_drop = function(cell) {\n  if (this._facet) cell.disconnect(this._facet);\n};\n\nprototype._on_keep = function(cell) {\n  // propagate sort, signals, fields, etc.\n  if (this._facet) df.ChangeSet.copy(this._input, cell.ds._input);\n};\n\nmodule.exports = Facetor;","var dl = require('datalib'),\n    Deps = require('vega-dataflow').Dependencies,\n    expr = require('../parse/expr');\n\nvar arrayType = /array/i,\n    dataType  = /data/i,\n    fieldType = /field/i,\n    exprType  = /expr/i,\n    valType   = /value/i;\n\nfunction Parameter(name, type, transform) {\n  this._name = name;\n  this._type = type;\n  this._transform = transform;\n\n  // If parameter is defined w/signals, it must be resolved\n  // on every pulse.\n  this._value = [];\n  this._accessors = [];\n  this._resolution = false;\n  this._signals = {};\n}\n\nvar prototype = Parameter.prototype;\n\nfunction get() {\n  var isArray = arrayType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  var val = isArray ? this._value : this._value[0],\n      acc = isArray ? this._accessors : this._accessors[0];\n\n  if (!dl.isValid(acc) && valType.test(this._type)) {\n    return val;\n  } else {\n    return isData ? { name: val, source: acc } :\n    isField ? { field: val, accessor: acc } : val;\n  }\n}\n\nprototype.get = function() {\n  var graph = this._transform._graph, \n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type),\n      s, idx, val;\n\n  // If we don't require resolution, return the value immediately.\n  if (!this._resolution) return get.call(this);\n\n  if (isData) {\n    this._accessors = this._value.map(function(v) { return graph.data(v); });\n    return get.call(this); // TODO: support signal as dataTypes\n  }\n\n  for (s in this._signals) {\n    idx = this._signals[s];\n    val = graph.signalRef(s);\n\n    if (isField) {\n      this._accessors[idx] = this._value[idx] != val ? \n        dl.accessor(val) : this._accessors[idx];\n    }\n\n    this._value[idx] = val;\n  }\n\n  return get.call(this);\n};\n\nprototype.set = function(value) {\n  var p = this,\n      isExpr = exprType.test(this._type),\n      isData  = dataType.test(this._type),\n      isField = fieldType.test(this._type);\n\n  this._value = dl.array(value).map(function(v, i) {\n    if (dl.isString(v)) {\n      if (isExpr) {\n        var e = expr(v);\n        p._transform.dependency(Deps.FIELDS,  e.fields);\n        p._transform.dependency(Deps.SIGNALS, e.globals);\n        return e.fn;\n      } else if (isField) {  // Backwards compatibility\n        p._accessors[i] = dl.accessor(v);\n        p._transform.dependency(Deps.FIELDS, dl.field(v));\n      } else if (isData) {\n        p._resolution = true;\n        p._transform.dependency(Deps.DATA, v);\n      }\n      return v;\n    } else if (v.value !== undefined) {\n      return v.value;\n    } else if (v.field !== undefined) {\n      p._accessors[i] = dl.accessor(v.field);\n      p._transform.dependency(Deps.FIELDS, dl.field(v.field));\n      return v.field;\n    } else if (v.signal !== undefined) {\n      p._resolution = true;\n      p._signals[v.signal] = i;\n      p._transform.dependency(Deps.SIGNALS, v.signal);\n      return v.signal;\n    }\n\n    return v;\n  });\n\n  return p._transform;\n};\n\nmodule.exports = Parameter;","var df = require('vega-dataflow'),\n    Base = df.Node.prototype, // jshint ignore:line\n    Deps = df.Dependencies,\n    Parameter = require('./Parameter');\n\nfunction Transform(graph) {\n  if (graph) Base.init.call(this, graph);\n}\n\nTransform.addParameters = function(proto, params) {\n  proto._parameters = proto._parameters || {};\n  for (var name in params) {\n    var p = params[name],\n        param = new Parameter(name, p.type, proto);\n\n    proto._parameters[name] = param;\n\n    if (p.type === 'custom') {\n      if (p.set) param.set = p.set.bind(param);\n      if (p.get) param.get = p.get.bind(param);\n    }\n\n    if (p.hasOwnProperty('default')) param.set(p.default);\n  }\n};\n\nvar prototype = (Transform.prototype = Object.create(Base));\nprototype.constructor = Transform;\n\nprototype.param = function(name, value) {\n  var param = this._parameters[name];\n  return (param === undefined) ? this :\n    (arguments.length === 1) ? param.get() : param.set(value);\n};\n\n// Perform transformation. Subclasses should override.\nprototype.transform = function(input/*, reset */) {\n  return input;\n};\n\nprototype.evaluate = function(input) {\n  // Many transforms store caches that must be invalidated if\n  // a signal value has changed. \n  var reset = this._stamp < input.stamp &&\n    this.dependency(Deps.SIGNALS).reduce(function(c, s) {\n      return c += input.signals[s] ? 1 : 0;\n    }, 0);\n  return this.transform(input, reset);\n};\n\nprototype.output = function(map) {\n  for (var key in this._output) {\n    if (map[key] !== undefined) {\n      this._output[key] = map[key];\n    }\n  }\n  return this;\n};\n\nmodule.exports = Transform;","'use strict';\n\nrequire('./globals');\n\nvar consts = require('./consts'),\n  util = require('./util'),\n  vlEncDef = require('./encdef'),\n  vlenc = require('./enc'),\n  schema = require('./schema/schema');\n\nmodule.exports = (function() {\n  function Encoding(spec, theme) {\n    var defaults = schema.instantiate(),\n      specExtended = schema.util.merge(defaults, theme || {}, spec) ;\n\n    this._data = specExtended.data;\n    this._marktype = specExtended.marktype;\n    this._enc = specExtended.encoding;\n    this._config = specExtended.config;\n  }\n\n  var proto = Encoding.prototype;\n\n  Encoding.fromShorthand = function(shorthand, data, config, theme) {\n    var c = consts.shorthand,\n        split = shorthand.split(c.delim),\n        marktype = split.shift().split(c.assign)[1].trim(),\n        enc = vlenc.fromShorthand(split);\n\n    return new Encoding({\n      data: data,\n      marktype: marktype,\n      encoding: enc,\n      config: config\n    }, theme);\n  };\n\n  Encoding.fromSpec = function(spec, theme) {\n    return new Encoding(spec, theme);\n  };\n\n  proto.toShorthand = function() {\n    var c = consts.shorthand;\n    return 'mark' + c.assign + this._marktype +\n      c.delim + vlenc.shorthand(this._enc);\n  };\n\n  Encoding.shorthand = function (spec) {\n    var c = consts.shorthand;\n    return 'mark' + c.assign + spec.marktype +\n      c.delim + vlenc.shorthand(spec.encoding);\n  };\n\n  Encoding.specFromShorthand = function(shorthand, data, config, excludeConfig) {\n    return Encoding.fromShorthand(shorthand, data, config).toSpec(excludeConfig);\n  };\n\n  proto.toSpec = function(excludeConfig, excludeData) {\n    var enc = util.duplicate(this._enc),\n      spec;\n\n    spec = {\n      marktype: this._marktype,\n      encoding: enc\n    };\n\n    if (!excludeConfig) {\n      spec.config = util.duplicate(this._config);\n    }\n\n    if (!excludeData) {\n      spec.data = util.duplicate(this._data);\n    }\n\n    // remove defaults\n    var defaults = schema.instantiate();\n    return schema.util.subtract(spec, defaults);\n  };\n\n\n  proto.marktype = function() {\n    return this._marktype;\n  };\n\n  proto.is = function(m) {\n    return this._marktype === m;\n  };\n\n  proto.has = function(encType) {\n    // equivalent to calling vlenc.has(this._enc, encType)\n    return this._enc[encType].name !== undefined;\n  };\n\n  proto.encDef = function(et) {\n    return this._enc[et];\n  };\n\n  // get \"field\" reference for vega\n  proto.fieldRef = function(et, opt) {\n    opt = opt || {};\n    return vlEncDef.fieldRef(this._enc[et], opt);\n  };\n\n  /*\n   * return key-value pairs of field name and list of fields of that field name\n   */\n  proto.fields = function() {\n    return vlenc.fields(this._enc);\n  };\n\n  proto.fieldTitle = function(et) {\n    if (vlEncDef.isCount(this._enc[et])) {\n      return vlEncDef.count.displayName;\n    }\n    var fn = this._enc[et].aggregate || this._enc[et].timeUnit || (this._enc[et].bin && 'bin');\n    if (fn) {\n      return fn.toUpperCase() + '(' + this._enc[et].name + ')';\n    } else {\n      return this._enc[et].name;\n    }\n  };\n\n  proto.scale = function(et) {\n    return this._enc[et].scale || {};\n  };\n\n  proto.axis = function(et) {\n    return this._enc[et].axis || {};\n  };\n\n  proto.bandSize = function(encType, useSmallBand) {\n    useSmallBand = useSmallBand ||\n      //isBandInSmallMultiples\n      (encType === Y && this.has(ROW) && this.has(Y)) ||\n      (encType === X && this.has(COL) && this.has(X));\n\n    // if band.size is explicitly specified, follow the specification, otherwise draw value from config.\n    return this.encDef(encType).band.size ||\n      this.config(useSmallBand ? 'smallBandSize' : 'largeBandSize');\n  };\n\n  // returns false if binning is disabled, otherwise an object with binning properties\n  proto.bin = function(et) {\n    var bin = this._enc[et].bin;\n    if (bin === {})\n      return false;\n    if (bin === true)\n      return {\n        maxbins: schema.MAXBINS_DEFAULT\n      };\n    return bin;\n  };\n\n  proto.value = function(et) {\n    return this._enc[et].value;\n  };\n\n  proto.numberFormat = function(fieldStats) {\n    var formatConfig = fieldStats.max > this.config('maxSmallNumber') ?\n      'largeNumberFormat': 'smallNumberFormat';\n    return this.config(formatConfig);\n  };\n\n  proto.sort = function(et, stats) {\n    var sort = this._enc[et].sort,\n      enc = this._enc,\n      isTypes = vlEncDef.isTypes;\n\n    if ((!sort || sort.length===0) &&\n        // FIXME\n        Encoding.toggleSort.support({encoding:this._enc}, stats, true) && //HACK\n        this.config('toggleSort') === Q\n      ) {\n      var qField = isTypes(enc.x, [N, O]) ? enc.y : enc.x;\n\n      if (isTypes(enc[et], [N, O])) {\n        sort = [{\n          name: qField.name,\n          aggregate: qField.aggregate,\n          type: qField.type,\n          reverse: true\n        }];\n      }\n    }\n\n    return sort;\n  };\n\n  proto.map = function(f) {\n    return vlenc.map(this._enc, f);\n  };\n\n  proto.reduce = function(f, init) {\n    return vlenc.reduce(this._enc, f, init);\n  };\n\n  proto.forEach = function(f) {\n    return vlenc.forEach(this._enc, f);\n  };\n\n  proto.type = function(et) {\n    return this.has(et) ? this._enc[et].type : null;\n  };\n\n  proto.isType = function(et, type) {\n    var encDef = this.encDef(et);\n    return encDef && vlEncDef.isType(encDef, type);\n  };\n\n\n  proto.isTypes = function(et, type) {\n    var encDef = this.encDef(et);\n    return encDef && vlEncDef.isTypes(encDef, type);\n  };\n\n  Encoding.isOrdinalScale = function(encoding, encType) {\n    return vlEncDef.isOrdinalScale(encoding.encDef(encType));\n  };\n\n  Encoding.isDimension = function(encoding, encType) {\n    return vlEncDef.isDimension(encoding.encDef(encType));\n  };\n\n  Encoding.isMeasure = function(encoding, encType) {\n    return vlEncDef.isMeasure(encoding.encDef(encType));\n  };\n\n  proto.isOrdinalScale = function(encType) {\n    return this.has(encType) && Encoding.isOrdinalScale(this, encType);\n  };\n\n  proto.isDimension = function(encType) {\n    return this.has(encType) && Encoding.isDimension(this, encType);\n  };\n\n  proto.isMeasure = function(encType) {\n    return this.has(encType) && Encoding.isMeasure(this, encType);\n  };\n\n  proto.isAggregate = function() {\n    return vlenc.isAggregate(this._enc);\n  };\n\n  proto.dataTable = function() {\n    return this.isAggregate() ? AGGREGATE : RAW;\n  };\n\n  Encoding.isAggregate = function(spec) {\n    return vlenc.isAggregate(spec.encoding);\n  };\n\n  Encoding.alwaysNoOcclusion = function(spec) {\n    // FIXME raw OxQ with # of rows = # of O\n    return vlenc.isAggregate(spec.encoding);\n  };\n\n  Encoding.isStack = function(spec) {\n    // FIXME update this once we have control for stack ...\n    return (spec.marktype === 'bar' || spec.marktype === 'area') &&\n      spec.encoding.color;\n  };\n\n  /**\n   * Check if the encoding should be stacked and return the stack dimenstion and value fields.\n   * @return {Object} An object containing two properties:\n   * - dimension - the dimension field\n   * - value - the value field\n   */\n  proto.stack = function() {\n    var stack = (this.has(COLOR) && this.encDef(COLOR).stack) ? COLOR :\n          (this.has(DETAIL) && this.encDef(DETAIL).stack) ? DETAIL :\n          null;\n\n    var properties = stack && this.encDef(stack).stack !== true ?\n                       this.encDef(stack).stack :\n                       {};\n\n    if ((this.is('bar') || this.is('area')) && stack && this.isAggregate()) {\n\n      var isXMeasure = this.isMeasure(X);\n      var isYMeasure = this.isMeasure(Y);\n\n      if (isXMeasure && !isYMeasure) {\n        return {\n          groupby: Y,\n          value: X,\n          stack: stack,\n          properties: properties\n        };\n      } else if (isYMeasure && !isXMeasure) {\n        return {\n          groupby: X,\n          value: Y,\n          stack: stack,\n          properties: properties\n        };\n      }\n    }\n    return null; // no stack encoding\n  };\n\n\n\n  proto.details = function() {\n    var encoding = this;\n    return this.reduce(function(refs, field, encType) {\n      if (!field.aggregate && (encType !== X && encType !== Y)) {\n        refs.push(encoding.fieldRef(encType));\n      }\n      return refs;\n    }, []);\n  };\n\n  proto.facets = function() {\n    var encoding = this;\n    return this.reduce(function(refs, field, encType) {\n      if (!field.aggregate && (encType == ROW || encType == COL)) {\n        refs.push(encoding.fieldRef(encType));\n      }\n      return refs;\n    }, []);\n  };\n\n  proto.cardinality = function(encType, stats) {\n    return vlEncDef.cardinality(this.encDef(encType), stats, this.config('filterNull'));\n  };\n\n  proto.isRaw = function() {\n    return !this.isAggregate();\n  };\n\n  proto.data = function() {\n    return this._data;\n  };\n\n   // returns whether the encoding has values embedded\n  proto.hasValues = function() {\n    var vals = this.data().values;\n    return vals && vals.length;\n  };\n\n  proto.config = function(name) {\n    return this._config[name];\n  };\n\n  Encoding.transpose = function(spec) {\n    var oldenc = spec.encoding,\n      enc = util.duplicate(spec.encoding);\n    enc.x = oldenc.y;\n    enc.y = oldenc.x;\n    enc.row = oldenc.col;\n    enc.col = oldenc.row;\n    spec.encoding = enc;\n    return spec;\n  };\n\n  return Encoding;\n})();\n","'use strict';\n\nrequire('../globals');\n\nvar util = require('../util'),\n  setter = util.setter,\n  getter = util.getter,\n  time = require('./time');\n\nvar axis = module.exports = {};\n\naxis.def = function(name, encoding, layout, stats, opt) {\n  var isCol = name == COL,\n    isRow = name == ROW,\n    type = isCol ? 'x' : isRow ? 'y' : name;\n\n  // TODO: rename def to axisDef and avoid side effects where possible.\n\n  var def = {\n    type: type,\n    scale: name,\n    properties: {},\n    layer: encoding.encDef(name).axis.layer\n  };\n\n  var orient = axis.orient(encoding, name, stats);\n  if (orient) {\n    def.orient = orient;\n  }\n\n  // Add axis label custom scale (for bin / time)\n  def = axis.labels.scale(def, encoding, name);\n  def = axis.labels.format(def, encoding, name, stats);\n  def = axis.labels.angle(def, encoding, name);\n\n  // for x-axis, set ticks for Q or rotate scale for ordinal scale\n  if (name == X) {\n    if ((encoding.isDimension(X) || encoding.isType(X, T)) &&\n        !('angle' in getter(def, ['properties', 'labels']))) {\n      // TODO(kanitw): Jul 19, 2015 - #506 add condition for rotation\n      def = axis.labels.rotate(def);\n    } else { // Q\n      def.ticks = encoding.encDef(name).axis.ticks;\n    }\n  }\n\n  // TitleOffset depends on labels rotation\n  def.titleOffset = axis.titleOffset(encoding, layout, name);\n\n  //def.offset is used in axis.grid\n  if(isRow) def.offset = axis.titleOffset(encoding, layout, Y) + 20;\n  // FIXME(kanitw): Jul 19, 2015 - offset for column when x is put on top\n\n  def = axis.grid(def, encoding, name, layout);\n  def = axis.title(def, encoding, name, layout, opt);\n\n  if (isRow || isCol) {\n    def = axis.hideTicks(def);\n  }\n\n  return def;\n};\n\naxis.orient = function(encoding, name, stats) {\n  var orient = encoding.encDef(name).axis.orient;\n  if (orient) {\n    return orient;\n  } else if (name === COL) {\n    return 'top';\n  } else if (name === X && encoding.has(Y) && encoding.isOrdinalScale(Y) && encoding.cardinality(Y, stats) > 30) {\n    // x-axis for long y - put on top\n    return 'top';\n  }\n  return undefined;\n};\n\naxis.grid = function(def, encoding, name, layout) {\n  var cellPadding = layout.cellPadding,\n    isCol = name == COL,\n    isRow = name == ROW;\n\n  var _grid = encoding.axis(name).grid;\n\n  // If `grid` is unspecified, the default value is `true` for ROW and COL.\n  // For X and Y, the default value is `true` for (1) quantitative fields that are not binned and (2) time fields.\n  // Otherwise, the default value is `false`.\n  var grid = _grid === undefined ?\n    ( name === ROW || name === COL ||\n      (encoding.isTypes(name, [Q, T]) && !encoding.encDef(name).bin)\n    ) : _grid;\n\n  if (grid) {\n    def.grid = true;\n\n    if (isCol) {\n      // set grid property -- put the lines on the right the cell\n      var yOffset = encoding.config('cellGridOffset');\n\n      // TODO(#677): this should depend on orient\n      def.properties.grid = {\n        x: {\n          offset: layout.cellWidth * (1+ cellPadding/2.0),\n          // default value(s) -- vega doesn't do recursive merge\n          scale: 'col',\n          field: 'data'\n        },\n        y: {\n          value: -yOffset,\n        },\n        y2: {\n          field: {group: 'mark.group.height'},\n          offset: yOffset\n        },\n        stroke: { value: encoding.config('cellGridColor') },\n        strokeOpacity: { value: encoding.config('cellGridOpacity') }\n      };\n    } else if (isRow) {\n      var xOffset = encoding.config('cellGridOffset');\n\n      // TODO(#677): this should depend on orient\n      // set grid property -- put the lines on the top\n      def.properties.grid = {\n        y: {\n          offset: -layout.cellHeight * (cellPadding/2),\n          // default value(s) -- vega doesn't do recursive merge\n          scale: 'row',\n          field: 'data'\n        },\n        x: {\n          value: def.offset - xOffset\n        },\n        x2: {\n          field: {group: 'mark.group.width'},\n          offset: def.offset + xOffset,\n          // default value(s) -- vega doesn't do recursive merge\n          mult: 1\n        },\n        stroke: { value: encoding.config('cellGridColor') },\n        strokeOpacity: { value: encoding.config('cellGridOpacity') }\n      };\n    } else {\n      def.properties.grid = {\n        stroke: { value: encoding.config('gridColor') },\n        strokeOpacity: { value: encoding.config('gridOpacity') }\n      };\n    }\n  }\n  return def;\n};\n\naxis.hideTicks = function(def) {\n  def.properties.ticks = {opacity: {value: 0}};\n  def.properties.majorTicks = {opacity: {value: 0}};\n  def.properties.axis = {opacity: {value: 0}};\n  return def;\n};\n\naxis.title = function (def, encoding, name, layout) {\n  var ax = encoding.encDef(name).axis;\n\n  if (ax.title) {\n    def.title = ax.title;\n  } else {\n    // if not defined, automatically determine axis title from field def\n    var fieldTitle = encoding.fieldTitle(name),\n      maxLength;\n\n    if (ax.titleMaxLength) {\n      maxLength = ax.titleMaxLength;\n    } else if (name===X) {\n      maxLength = layout.cellWidth / encoding.config('characterWidth');\n    } else if (name === Y) {\n      maxLength = layout.cellHeight / encoding.config('characterWidth');\n    }\n\n    def.title = maxLength ? util.truncate(fieldTitle, maxLength) : fieldTitle;\n  }\n\n  if (name === ROW) {\n    def.properties.title = {\n      angle: {value: 0},\n      align: {value: 'right'},\n      baseline: {value: 'middle'},\n      dy: {value: (-layout.height/2) -20}\n    };\n  }\n\n  return def;\n};\n\naxis.labels = {};\n\n/** add custom label for time type and bin */\naxis.labels.scale = function(def, encoding, name) {\n  // time\n  var timeUnit = encoding.encDef(name).timeUnit;\n  if (encoding.isType(name, T) && timeUnit && (time.hasScale(timeUnit))) {\n    setter(def, ['properties','labels','text','scale'], 'time-'+ timeUnit);\n  }\n  // FIXME bin\n  return def;\n};\n\n/**\n * Determine number format or truncate if maxLabel length is presented.\n */\naxis.labels.format = function (def, encoding, name, stats) {\n  var fieldStats = stats[encoding.encDef(name).name];\n\n  if (encoding.axis(name).format) {\n    def.format = encoding.axis(name).format;\n  } else if (encoding.isType(name, Q) || fieldStats.type === 'number') {\n    def.format = encoding.numberFormat(fieldStats);\n  } else if (encoding.isType(name, T)) {\n    var timeUnit = encoding.encDef(name).timeUnit;\n    if (!timeUnit) {\n      def.format = encoding.config('timeFormat');\n    } else if (timeUnit === 'year') {\n      def.format = 'd';\n    }\n  } else if (encoding.isTypes(name, [N, O]) && encoding.axis(name).maxLabelLength) {\n    setter(def,\n      ['properties','labels','text','template'],\n      '{{ datum.data | truncate:' +\n      encoding.axis(name).maxLabelLength + '}}'\n    );\n  }\n\n  return def;\n};\n\naxis.labels.angle = function(def, encoding, name) {\n  var angle = encoding.axis(name).labelAngle;\n  if (typeof angle === 'undefined') return def;\n\n  setter(def, ['properties', 'labels', 'angle', 'value'], angle);\n  return def;\n};\n\naxis.labels.rotate = function(def) {\n var align = def.orient ==='top' ? 'left' : 'right';\n setter(def, ['properties','labels', 'angle', 'value'], 270);\n setter(def, ['properties','labels', 'align', 'value'], align);\n setter(def, ['properties','labels', 'baseline', 'value'], 'middle');\n return def;\n};\n\naxis.titleOffset = function (encoding, layout, name) {\n  // return specified value if specified\n  var value = encoding.axis(name).titleOffset;\n  if (value)  return value;\n\n  switch (name) {\n    //FIXME make this adjustable\n    case ROW: return 0;\n    case COL: return 35;\n  }\n  return getter(layout, [name, 'axisTitleOffset']);\n};\n","'use strict';\n\nvar summary = module.exports = require('datalib/src/stats').summary;\n\nrequire('../globals');\n\n/**\n * Module for compiling Vega-lite spec into Vega spec.\n */\nvar compiler = module.exports = {};\n\nvar Encoding = require('../Encoding'),\n  axis = compiler.axis = require('./axis'),\n  legend = compiler.legend = require('./legend'),\n  marks = compiler.marks = require('./marks'),\n  scale = compiler.scale = require('./scale');\n\ncompiler.data = require('./data');\ncompiler.facet = require('./facet');\ncompiler.layout = require('./layout');\ncompiler.stack = require('./stack');\ncompiler.style = require('./style');\ncompiler.subfacet = require('./subfacet');\ncompiler.time = require('./time');\n\ncompiler.compile = function (spec, stats, theme) {\n  return compiler.compileEncoding(Encoding.fromSpec(spec, theme), stats);\n};\n\ncompiler.shorthand = function (shorthand, stats, config, theme) {\n  return compiler.compileEncoding(Encoding.fromShorthand(shorthand, config, theme), stats);\n};\n\n/**\n * Create a Vega specification from a Vega-lite Encoding object.\n */\ncompiler.compileEncoding = function (encoding, stats) {\n  // no need to pass stats if you pass in the data\n  if (!stats) {\n    if (encoding.hasValues()) {\n        stats = summary(encoding.data().values).reduce(function(s, p) {\n        s[p.field] = p;\n        return s;\n      }, {});\n    } else {\n      console.error('No stats provided and data is not embedded.');\n    }\n  }\n\n  var layout = compiler.layout(encoding, stats);\n\n  var spec = {\n      width: layout.width,\n      height: layout.height,\n      padding: 'auto',\n      data: compiler.data(encoding),\n      // global scales contains only time unit scales\n      scales: compiler.time.scales(encoding),\n      marks: [{\n        name: 'cell',\n        type: 'group',\n        properties: {\n          enter: {\n            width: layout.cellWidth ?\n                     {value: layout.cellWidth} :\n                     {field: {group: 'width'}},\n            height: layout.cellHeight ?\n                    {value: layout.cellHeight} :\n                    {field: {group: 'height'}}\n          }\n        }\n      }]\n    };\n\n  var group = spec.marks[0];\n\n  // marks\n  var style = compiler.style(encoding, stats),\n    mdefs = group.marks = marks.def(encoding, layout, style, stats),\n    mdef = mdefs[mdefs.length - 1];  // TODO: remove this dirty hack by refactoring the whole flow\n\n  var stack = encoding.stack();\n  if (stack) {\n    // modify mdef.{from,properties}\n    compiler.stack(encoding, mdef, stack);\n  }\n\n  var lineType = marks[encoding.marktype()].line;\n\n  // handle subfacets\n  var details = encoding.details();\n\n  if (details.length > 0 && lineType) {\n    //subfacet to group area / line together in one group\n    compiler.subfacet(group, mdef, details);\n  }\n\n  // auto-sort line/area values\n  if (lineType && encoding.config('autoSortLine')) {\n    var f = (encoding.isMeasure(X) && encoding.isDimension(Y)) ? Y : X;\n    if (!mdef.from) {\n      mdef.from = {};\n    }\n    // TODO: why - ?\n    mdef.from.transform = [{type: 'sort', by: '-' + encoding.fieldRef(f)}];\n  }\n\n  // get a flattened list of all scale names that are used in the vl spec\n  var singleScaleNames = [].concat.apply([], mdefs.map(function(markProps) {\n    return scale.names(markProps.properties.update);\n  }));\n\n  // Small Multiples\n  if (encoding.has(ROW) || encoding.has(COL)) {\n    spec = compiler.facet(group, encoding, layout, spec, singleScaleNames, stats);\n    spec.legends = legend.defs(encoding, style);\n  } else {\n    group.scales = scale.defs(singleScaleNames, encoding, layout, stats);\n    group.axes = [];\n    if (encoding.has(X)) {\n      group.axes.push(axis.def(X, encoding, layout, stats));\n    }\n    if (encoding.has(Y)) {\n      group.axes.push(axis.def(Y, encoding, layout, stats));\n    }\n\n    group.legends = legend.defs(encoding, style);\n  }\n\n  return spec;\n};\n","'use strict';\n\nrequire('../globals');\n\nmodule.exports = data;\n\nvar vlEncDef = require('../encdef'),\n  util = require('../util'),\n  time = require('./time');\n\n/**\n * Create Vega's data array from a given encoding.\n *\n * @param  {Encoding} encoding\n * @return {Array} Array of Vega data.\n *                 This always includes a \"raw\" data table.\n *                 If the encoding contains aggregate value, this will also create\n *                 aggregate table as well.\n */\nfunction data(encoding) {\n  var def = [data.raw(encoding)];\n\n  var aggregate = data.aggregate(encoding);\n  if (aggregate) {\n    def.push(data.aggregate(encoding));\n  }\n\n  // TODO add \"having\" filter here\n\n  // append non-positive filter at the end for the data table\n  data.filterNonPositive(def[def.length - 1], encoding);\n\n  // Stack\n  var stack = encoding.stack();\n  if (stack) {\n    def.push(data.stack(encoding, stack));\n  }\n\n  return def;\n}\n\ndata.raw = function(encoding) {\n  var raw = {name: RAW};\n\n  // Data source (url or inline)\n  if (encoding.hasValues()) {\n    raw.values = encoding.data().values;\n    raw.format = {type: 'json'};\n  } else {\n    raw.url = encoding.data().url;\n    raw.format = {type: encoding.data().formatType};\n  }\n\n  // Set data's format.parse if needed\n  var parse = data.raw.formatParse(encoding);\n  if (parse) {\n    raw.format.parse = parse;\n  }\n\n  raw.transform = data.raw.transform(encoding);\n  return raw;\n};\n\ndata.raw.formatParse = function(encoding) {\n  var parse;\n\n  encoding.forEach(function(encDef) {\n    if (encDef.type == T) {\n      parse = parse || {};\n      parse[encDef.name] = 'date';\n    } else if (encDef.type == Q) {\n      if (vlEncDef.isCount(encDef)) return;\n      parse = parse || {};\n      parse[encDef.name] = 'number';\n    }\n  });\n\n  return parse;\n};\n\n/**\n * Generate Vega transforms for the raw data table.  This can include\n * transforms for time unit, binning and filtering.\n */\ndata.raw.transform = function(encoding) {\n  // null filter comes first so transforms are not performed on null values\n  // time and bin should come before filter so we can filter by time and bin\n  return data.raw.transform.nullFilter(encoding).concat(\n    data.raw.transform.formula(encoding),\n    data.raw.transform.time(encoding),\n    data.raw.transform.bin(encoding),\n    data.raw.transform.filter(encoding)\n  );\n};\n\ndata.raw.transform.time = function(encoding) {\n  return encoding.reduce(function(transform, encDef, encType) {\n    if (encDef.type === T && encDef.timeUnit) {\n      var fieldRef = encoding.fieldRef(encType, {nofn: true, datum: true});\n\n      transform.push({\n        type: 'formula',\n        field: encoding.fieldRef(encType),\n        expr: time.formula(encDef.timeUnit, fieldRef)\n      });\n    }\n    return transform;\n  }, []);\n};\n\ndata.raw.transform.bin = function(encoding) {\n  return encoding.reduce(function(transform, encDef, encType) {\n    if (encoding.bin(encType)) {\n      transform.push({\n        type: 'bin',\n        field: encDef.name,\n        output: {\n          start: encoding.fieldRef(encType, {bin_suffix: '_start'}),\n          end: encoding.fieldRef(encType, {bin_suffix: '_end'})\n        },\n        maxbins: encoding.bin(encType).maxbins\n      });\n      // temporary fix for adding missing `bin_mid` from the bin transform\n      transform.push({\n        type: 'formula',\n        field: encoding.fieldRef(encType, {bin_suffix: '_mid'}),\n        expr: '(' + encoding.fieldRef(encType, {datum:1, bin_suffix: '_start'}) + '+' + encoding.fieldRef(encType, {datum:1, bin_suffix: '_end'}) + ')/2'\n      });\n    }\n    return transform;\n  }, []);\n};\n\n/**\n * @return {Array} An array that might contain a filter transform for filtering null value based on filterNul config\n */\ndata.raw.transform.nullFilter = function(encoding) {\n  var filteredFields = util.reduce(encoding.fields(),\n    function(filteredFields, fieldList, fieldName) {\n      if (fieldName === '*') return filteredFields; //count\n\n      // TODO(#597) revise how filterNull is structured.\n      if ((encoding.config('filterNull').Q && fieldList.containsType[Q]) ||\n          (encoding.config('filterNull').T && fieldList.containsType[T]) ||\n          (encoding.config('filterNull').O && fieldList.containsType[O]) ||\n          (encoding.config('filterNull').N && fieldList.containsType[N])) {\n        filteredFields.push(fieldName);\n      }\n      return filteredFields;\n    }, []);\n\n  return filteredFields.length > 0 ?\n    [{\n      type: 'filter',\n      test: filteredFields.map(function(fieldName) {\n        return 'datum.' + fieldName + '!==null';\n      }).join(' && ')\n    }] : [];\n};\n\ndata.raw.transform.filter = function(encoding) {\n  var filter = encoding.data().filter;\n  return filter ? [{\n      type: 'filter',\n      test: filter\n  }] : [];\n};\n\ndata.raw.transform.formula = function(encoding) {\n  var formulas = encoding.data().formulas;\n  if (formulas === undefined) {\n    return [];\n  }\n\n  return formulas.reduce(function(transform, formula) {\n    formula.type = 'formula';\n    transform.push(formula);\n    return transform;\n  }, []);\n};\n\ndata.aggregate = function(encoding) {\n  /* dict set for dimensions */\n  var dims = {};\n\n  /* dictionary mapping field name => dict set of aggregation functions */\n  var meas = {};\n\n  var hasAggregate = false;\n\n  encoding.forEach(function(encDef, encType) {\n    if (encDef.aggregate) {\n      hasAggregate = true;\n      if (encDef.aggregate === 'count') {\n        meas['*'] = meas['*'] || {};\n        meas['*'].count = true;\n      } else {\n        meas[encDef.name] = meas[encDef.name] || {};\n        meas[encDef.name][encDef.aggregate] = true;\n      }\n    } else {\n      if (encDef.bin) {\n        // TODO(#694) only add dimension for the required ones.\n        dims[encoding.fieldRef(encType, {bin_suffix: '_start'})] = encoding.fieldRef(encType, {bin_suffix: '_start'});\n        dims[encoding.fieldRef(encType, {bin_suffix: '_mid'})] = encoding.fieldRef(encType, {bin_suffix: '_mid'});\n        dims[encoding.fieldRef(encType, {bin_suffix: '_end'})] = encoding.fieldRef(encType, {bin_suffix: '_end'});\n      } else {\n        dims[encDef.name] = encoding.fieldRef(encType);\n      }\n\n    }\n  });\n\n  var groupby = util.vals(dims);\n\n  // short-format summarize object for Vega's aggregate transform\n  // https://github.com/vega/vega/wiki/Data-Transforms#-aggregate\n  var summarize = util.reduce(meas, function(summarize, fnDictSet, field) {\n    summarize[field] = util.keys(fnDictSet);\n    return summarize;\n  }, {});\n\n  if (hasAggregate) {\n    return {\n      name: AGGREGATE,\n      source: RAW,\n      transform: [{\n        type: 'aggregate',\n        groupby: groupby,\n        summarize: summarize\n      }]\n    };\n  }\n\n  return null;\n};\n\n/**\n * Add stacked data source, for feeding the shared scale.\n */\ndata.stack = function(encoding, stack) {\n  var dim = stack.groupby;\n  var val = stack.value;\n  var facets = encoding.facets();\n\n  var stacked = {\n    name: STACKED,\n    source: encoding.dataTable(),\n    transform: [{\n      type: 'aggregate',\n      groupby: [encoding.fieldRef(dim)].concat(facets), // dim and other facets\n      summarize: [{ops: ['sum'], field: encoding.fieldRef(val)}]\n    }]\n  };\n\n  if (facets && facets.length > 0) {\n    stacked.transform.push({ //calculate max for each facet\n      type: 'aggregate',\n      groupby: facets,\n      summarize: [{\n        ops: ['max'],\n        // we want max of sum from above transform\n        field: encoding.fieldRef(val, {prefn: 'sum_'})\n      }]\n    });\n  }\n  return stacked;\n};\n\ndata.filterNonPositive = function(dataTable, encoding) {\n  encoding.forEach(function(encDef, encType) {\n    if (encoding.scale(encType).type === 'log') {\n      dataTable.transform.push({\n        type: 'filter',\n        test: encoding.fieldRef(encType, {datum: 1}) + ' > 0'\n      });\n    }\n  });\n};\n","'use strict';\n\nrequire('../globals');\n\nvar util = require('../util');\n\nvar axis = require('./axis'),\n  scale = require('./scale');\n\nmodule.exports = faceting;\n\nfunction groupdef(name, opt) {\n  opt = opt || {};\n  var group = {\n    name: name || undefined,\n    type: 'group',\n    properties: {\n      enter: {\n        width: opt.width || {field: {group: 'width'}},\n        height: opt.height || {field: {group: 'height'}}\n      }\n    }\n  };\n\n  if (opt.from) {\n    group.from = opt.from;\n  }\n  if (opt.x) {\n    group.properties.enter.x = opt.x;\n  }\n  if (opt.y) {\n    group.properties.enter.y = opt.y;\n  }\n  if (opt.axes) {\n    group.axes = opt.axes;\n  }\n\n  return group;\n}\n\nfunction faceting(group, encoding, layout, spec, singleScaleNames, stats) {\n  var enter = group.properties.enter;\n  var facetKeys = [], cellAxes = [], from, axesGrp;\n\n  var hasRow = encoding.has(ROW), hasCol = encoding.has(COL);\n\n  enter.fill = {value: encoding.config('cellBackgroundColor')};\n\n  //move \"from\" to cell level and add facet transform\n  group.from = {data: group.marks[0].from.data};\n\n  // Hack, this needs to be refactored\n  for (var i = 0; i < group.marks.length; i++) {\n    var mark = group.marks[i];\n    if (mark.from.transform) {\n      delete mark.from.data; //need to keep transform for subfacetting case\n    } else {\n      delete mark.from;\n    }\n  }\n\n  if (hasRow) {\n    if (!encoding.isDimension(ROW)) {\n      util.error('Row encoding should be ordinal.');\n    }\n    enter.y = {scale: ROW, field: encoding.fieldRef(ROW)};\n    enter.height = {'value': layout.cellHeight}; // HACK\n\n    facetKeys.push(encoding.fieldRef(ROW));\n\n    if (hasCol) {\n      from = util.duplicate(group.from);\n      from.transform = from.transform || [];\n      from.transform.unshift({type: 'facet', groupby: [encoding.fieldRef(COL)]});\n    }\n\n    axesGrp = groupdef('x-axes', {\n        axes: encoding.has(X) ? [axis.def(X, encoding, layout, stats)] : undefined,\n        x: hasCol ? {scale: COL, field: encoding.fieldRef(COL)} : {value: 0},\n        width: hasCol && {'value': layout.cellWidth}, //HACK?\n        from: from\n      });\n\n    spec.marks.unshift(axesGrp); // need to prepend so it appears under the plots\n    (spec.axes = spec.axes || []);\n    spec.axes.push(axis.def(ROW, encoding, layout, stats));\n  } else { // doesn't have row\n    if (encoding.has(X)) {\n      //keep x axis in the cell\n      cellAxes.push(axis.def(X, encoding, layout, stats));\n    }\n  }\n\n  if (hasCol) {\n    if (!encoding.isDimension(COL)) {\n      util.error('Col encoding should be ordinal.');\n    }\n    enter.x = {scale: COL, field: encoding.fieldRef(COL)};\n    enter.width = {'value': layout.cellWidth}; // HACK\n\n    facetKeys.push(encoding.fieldRef(COL));\n\n    if (hasRow) {\n      from = util.duplicate(group.from);\n      from.transform = from.transform || [];\n      from.transform.unshift({type: 'facet', groupby: [encoding.fieldRef(ROW)]});\n    }\n\n    axesGrp = groupdef('y-axes', {\n      axes: encoding.has(Y) ? [axis.def(Y, encoding, layout, stats)] : undefined,\n      y: hasRow && {scale: ROW, field: encoding.fieldRef(ROW)},\n      x: hasRow && {value: 0},\n      height: hasRow && {'value': layout.cellHeight}, //HACK?\n      from: from\n    });\n\n    spec.marks.unshift(axesGrp); // need to prepend so it appears under the plots\n    (spec.axes = spec.axes || []);\n    spec.axes.push(axis.def(COL, encoding, layout, stats));\n  } else { // doesn't have col\n    if (encoding.has(Y)) {\n      cellAxes.push(axis.def(Y, encoding, layout, stats));\n    }\n  }\n\n  // assuming equal cellWidth here\n  // TODO: support heterogenous cellWidth (maybe by using multiple scales?)\n  spec.scales = (spec.scales || []).concat(scale.defs(\n    scale.names(enter).concat(singleScaleNames),\n    encoding,\n    layout,\n    stats,\n    true\n  )); // row/col scales + cell scales\n\n  if (cellAxes.length > 0) {\n    group.axes = cellAxes;\n  }\n\n  // add facet transform\n  var trans = (group.from.transform || (group.from.transform = []));\n  trans.unshift({type: 'facet', groupby: facetKeys});\n\n  return spec;\n}\n","'use strict';\n\nrequire('../globals');\n\nvar util = require('../util'),\n  setter = util.setter,\n  time = require('./time'),\n  d3_format = require('d3-format');\n\nmodule.exports = vllayout;\n\nfunction vllayout(encoding, stats) {\n  var layout = box(encoding, stats);\n  layout = offset(encoding, stats, layout);\n  return layout;\n}\n\n/*\n  HACK to set chart size\n  NOTE: this fails for plots driven by derived values (e.g., aggregates)\n  One solution is to update Vega to support auto-sizing\n  In the meantime, auto-padding (mostly) does the trick\n */\nfunction box(encoding, stats) {\n  var hasRow = encoding.has(ROW),\n      hasCol = encoding.has(COL),\n      hasX = encoding.has(X),\n      hasY = encoding.has(Y),\n      marktype = encoding.marktype();\n\n  // FIXME/HACK we need to take filter into account\n  var xCardinality = hasX && encoding.isDimension(X) ? encoding.cardinality(X, stats) : 1,\n    yCardinality = hasY && encoding.isDimension(Y) ? encoding.cardinality(Y, stats) : 1;\n\n  var useSmallBand = xCardinality > encoding.config('largeBandMaxCardinality') ||\n    yCardinality > encoding.config('largeBandMaxCardinality');\n\n  var cellWidth, cellHeight, cellPadding = encoding.config('cellPadding');\n\n  // set cellWidth\n  if (hasX) {\n    if (encoding.isOrdinalScale(X)) {\n      // for ordinal, hasCol or not doesn't matter -- we scale based on cardinality\n      cellWidth = (xCardinality + encoding.encDef(X).band.padding) * encoding.bandSize(X, useSmallBand);\n    } else {\n      cellWidth = hasCol || hasRow ? encoding.encDef(COL).width :  encoding.config('singleWidth');\n    }\n  } else {\n    if (marktype === TEXT) {\n      cellWidth = encoding.config('textCellWidth');\n    } else {\n      cellWidth = encoding.bandSize(X);\n    }\n  }\n\n  // set cellHeight\n  if (hasY) {\n    if (encoding.isOrdinalScale(Y)) {\n      // for ordinal, hasCol or not doesn't matter -- we scale based on cardinality\n      cellHeight = (yCardinality + encoding.encDef(Y).band.padding) * encoding.bandSize(Y, useSmallBand);\n    } else {\n      cellHeight = hasCol || hasRow ? encoding.encDef(ROW).height :  encoding.config('singleHeight');\n    }\n  } else {\n    cellHeight = encoding.bandSize(Y);\n  }\n\n  // Cell bands use rangeBands(). There are n-1 padding.  Outerpadding = 0 for cells\n\n  var width = cellWidth, height = cellHeight;\n  if (hasCol) {\n    var colCardinality = encoding.cardinality(COL, stats);\n    width = cellWidth * ((1 + cellPadding) * (colCardinality - 1) + 1);\n  }\n  if (hasRow) {\n    var rowCardinality =  encoding.cardinality(ROW, stats);\n    height = cellHeight * ((1 + cellPadding) * (rowCardinality - 1) + 1);\n  }\n\n  return {\n    // width and height of the whole cell\n    cellWidth: cellWidth,\n    cellHeight: cellHeight,\n    cellPadding: cellPadding,\n    // width and height of the chart\n    width: width,\n    height: height,\n    // information about x and y, such as band size\n    x: {useSmallBand: useSmallBand},\n    y: {useSmallBand: useSmallBand}\n  };\n}\n\n\n// FIXME fieldStats.max isn't always the longest\nfunction getMaxNumberLength(encoding, et, fieldStats) {\n  var format = encoding.numberFormat(et, fieldStats);\n\n  return d3_format.format(format)(fieldStats.max).length;\n}\n\n// TODO(#600) revise this\nfunction getMaxLength(encoding, stats, et) {\n  var encDef = encoding.encDef(et),\n    fieldStats = stats[encDef.name];\n\n  if (encDef.bin) {\n    // TODO once bin support range, need to update this\n    return getMaxNumberLength(encoding, et, fieldStats);\n  } if (encoding.isType(et, Q)) {\n    return getMaxNumberLength(encoding, et, fieldStats);\n  } else if (encoding.isType(et, T)) {\n    return time.maxLength(encoding.encDef(et).timeUnit, encoding);\n  } else if (encoding.isTypes(et, [N, O])) {\n    if(fieldStats.type === 'number') {\n      return getMaxNumberLength(encoding, et, fieldStats);\n    } else {\n      return Math.min(fieldStats.max, encoding.axis(et).maxLabelLength || Infinity);\n    }\n  }\n}\n\nfunction offset(encoding, stats, layout) {\n  [X, Y].forEach(function (et) {\n    // TODO(kanitw): Jul 19, 2015 - create a set of visual test for extraOffset\n    var extraOffset = et === X ? 20 : 22,\n      maxLength;\n    if (encoding.isDimension(et) || encoding.isType(et, T)) {\n      maxLength = getMaxLength(encoding, stats, et);\n    } else if (\n      // TODO once we have #512 (allow using inferred type)\n      // Need to adjust condition here.\n      encoding.isType(et, Q) ||\n      encoding.encDef(et).aggregate === 'count'\n    ) {\n      if (\n        et===Y\n        // || (et===X && false)\n        // FIXME determine when X would rotate, but should move this to axis.js first #506\n      ) {\n        maxLength = getMaxLength(encoding, stats, et);\n      }\n    } else {\n      // nothing\n    }\n\n    if (maxLength) {\n      setter(layout,[et, 'axisTitleOffset'], encoding.config('characterWidth') *  maxLength + extraOffset);\n    } else {\n      // if no max length (no rotation case), use maxLength = 3\n      setter(layout,[et, 'axisTitleOffset'], encoding.config('characterWidth') * 3 + extraOffset);\n    }\n\n  });\n  return layout;\n}\n","'use strict';\n\nrequire('../globals');\n\nvar time = require('./time'),\n  util = require('../util'),\n  setter = util.setter,\n  getter = util.getter;\n\nvar legend = module.exports = {};\n\nlegend.defs = function(encoding, style) {\n  var defs = [];\n\n  if (encoding.has(COLOR) && encoding.encDef(COLOR).legend) {\n    defs.push(legend.def(COLOR, encoding, {\n      fill: COLOR\n    }, style));\n  }\n\n  if (encoding.has(SIZE) && encoding.encDef(SIZE).legend) {\n    defs.push(legend.def(SIZE, encoding, {\n      size: SIZE\n    }, style));\n  }\n\n  if (encoding.has(SHAPE) && encoding.encDef(SHAPE).legend) {\n    defs.push(legend.def(SHAPE, encoding, {\n      shape: SHAPE\n    }, style));\n  }\n  return defs;\n};\n\nlegend.def = function(name, encoding, def, style) {\n  var timeUnit = encoding.encDef(name).timeUnit;\n\n  def.title = legend.title(name, encoding);\n  def.orient = encoding.encDef(name).legend.orient;\n\n  def = legend.style(name, encoding, def, style);\n\n  if (encoding.isType(name, T) &&\n    timeUnit &&\n    time.hasScale(timeUnit)\n  ) {\n    setter(def, ['properties', 'labels', 'text', 'scale'], 'time-'+ timeUnit);\n  }\n\n  return def;\n};\n\nlegend.style = function(name, e, def, style) {\n  var symbols = getter(def, ['properties', 'symbols']),\n    marktype = e.marktype();\n\n  switch (marktype) {\n    case 'bar':\n    case 'tick':\n    case 'text':\n      symbols.stroke = {value: 'transparent'};\n      symbols.shape = {value: 'square'};\n      break;\n\n    case 'circle':\n    case 'square':\n      symbols.shape = {value: marktype};\n      /* fall through */\n    case 'point':\n      // fill or stroke\n      if (e.encDef(SHAPE).filled) {\n        if (e.has(COLOR) && name === COLOR) {\n          symbols.fill = {scale: COLOR, field: 'data'};\n        } else {\n          symbols.fill = {value: e.value(COLOR)};\n        }\n        symbols.stroke = {value: 'transparent'};\n      } else {\n        if (e.has(COLOR) && name === COLOR) {\n          symbols.stroke = {scale: COLOR, field: 'data'};\n        } else {\n          symbols.stroke = {value: e.value(COLOR)};\n        }\n        symbols.fill = {value: 'transparent'};\n        symbols.strokeWidth = {value: e.config('strokeWidth')};\n      }\n\n      break;\n    case 'line':\n    case 'area':\n      // TODO use shape here after implementing #508\n      break;\n  }\n\n  var opacity = e.encDef(COLOR).opacity || style.opacity;\n  if (opacity) {\n    symbols.opacity = {value: opacity};\n  }\n  return def;\n};\n\nlegend.title = function(name, encoding) {\n  var leg = encoding.encDef(name).legend;\n\n  if (leg.title) return leg.title;\n\n  return encoding.fieldTitle(name);\n};\n","'use strict';\n\nrequire('../globals');\n\nvar marks = module.exports = {};\n\nmarks.def = function(encoding, layout, style, stats) {\n\n  var defs = [],\n    mark = marks[encoding.marktype()],\n    from = encoding.dataTable();\n\n  // to add a background to text, we need to add it before the text\n  if (encoding.marktype() === TEXT && encoding.has(COLOR)) {\n    var bg = {\n      x: {value: 0},\n      y: {value: 0},\n      x2: {value: layout.cellWidth},\n      y2: {value: layout.cellHeight},\n      fill: {scale: COLOR, field: encoding.fieldRef(COLOR)}\n    };\n    defs.push({\n      type: 'rect',\n      from: {data: from},\n      properties: {enter: bg, update: bg}\n    });\n  }\n\n  // add the mark def for the main thing\n  var p = mark.prop(encoding, layout, style, stats);\n  defs.push({\n    type: mark.type,\n    from: {data: from},\n    properties: {enter: p, update: p}\n  });\n\n  return defs;\n};\n\nmarks.bar = {\n  type: 'rect',\n  prop: bar_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, size: 1, color: 1}\n};\n\nmarks.line = {\n  type: 'line',\n  line: true,\n  prop: line_props,\n  requiredEncoding: ['x', 'y'],\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, color: 1, detail:1}\n};\n\nmarks.area = {\n  type: 'area',\n  line: true,\n  requiredEncoding: ['x', 'y'],\n  prop: area_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, color: 1}\n};\n\nmarks.tick = {\n  type: 'rect',\n  prop: tick_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, color: 1, detail: 1}\n};\n\nmarks.circle = {\n  type: 'symbol',\n  prop: filled_point_props('circle'),\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, size: 1, color: 1, detail: 1}\n};\n\nmarks.square = {\n  type: 'symbol',\n  prop: filled_point_props('square'),\n  supportedEncoding: marks.circle.supportedEncoding\n};\n\nmarks.point = {\n  type: 'symbol',\n  prop: point_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, size: 1, color: 1, shape: 1, detail: 1}\n};\n\nmarks.text = {\n  type: 'text',\n  prop: text_props,\n  requiredEncoding: ['text'],\n  supportedEncoding: {row: 1, col: 1, size: 1, color: 1, text: 1}\n};\n\nfunction bar_props(e, layout, style) {\n  // jshint unused:false\n\n  var p = {};\n\n  // x's and width\n  if (e.encDef(X).bin) {\n    p.x = {scale: X, field: e.fieldRef(X, {bin_suffix: '_start'}), offset: 1};\n    p.x2 = {scale: X, field: e.fieldRef(X, {bin_suffix: '_end'})};\n  } else if (e.isMeasure(X)) {\n    p.x = {scale: X, field: e.fieldRef(X)};\n    if (!e.has(Y) || e.isDimension(Y)) {\n      p.x2 = {value: 0};\n    }\n  } else {\n    if (e.has(X)) { // is ordinal\n       p.xc = {scale: X, field: e.fieldRef(X)};\n    } else {\n       p.x = {value: 0, offset: e.config('singleBarOffset')};\n    }\n  }\n\n  // width\n  if (!p.x2) {\n    if (!e.has(X) || e.isOrdinalScale(X)) { // no X or X is ordinal\n      if (e.has(SIZE)) {\n        p.width = {scale: SIZE, field: e.fieldRef(SIZE)};\n      } else {\n        p.width = {\n          value: e.bandSize(X, layout.x.useSmallBand),\n          offset: -1\n        };\n      }\n    } else { // X is Quant or Time Scale\n      p.width = {value: 2};\n    }\n  }\n\n  // y's & height\n  if (e.encDef(Y).bin) {\n    p.y = {scale: Y, field: e.fieldRef(Y, {bin_suffix: '_start'})};\n    p.y2 = {scale: Y, field: e.fieldRef(Y, {bin_suffix: '_end'}), offset: 1};\n  } else if (e.isMeasure(Y)) {\n    p.y = {scale: Y, field: e.fieldRef(Y)};\n    p.y2 = {field: {group: 'height'}};\n  } else {\n    if (e.has(Y)) { // is ordinal\n      p.yc = {scale: Y, field: e.fieldRef(Y)};\n    } else {\n      p.y2 = {\n        field: {group: 'height'},\n        offset: -e.config('singleBarOffset')\n      };\n    }\n\n    if (e.has(SIZE)) {\n      p.height = {scale: SIZE, field: e.fieldRef(SIZE)};\n    } else {\n      p.height = {\n        value: e.bandSize(Y, layout.y.useSmallBand),\n        offset: -1\n      };\n    }\n  }\n\n  // fill\n  if (e.has(COLOR)) {\n    p.fill = {scale: COLOR, field: e.fieldRef(COLOR)};\n  } else {\n    p.fill = {value: e.value(COLOR)};\n  }\n\n  // opacity\n  var opacity = e.encDef(COLOR).opacity;\n  if (opacity) p.opacity = {value: opacity};\n\n  return p;\n}\n\nfunction point_props(e, layout, style) {\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.fieldRef(X, {bin_suffix: '_mid'})};\n  } else if (!e.has(X)) {\n    p.x = {value: e.bandSize(X, layout.x.useSmallBand) / 2};\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.fieldRef(Y, {bin_suffix: '_mid'})};\n  } else if (!e.has(Y)) {\n    p.y = {value: e.bandSize(Y, layout.y.useSmallBand) / 2};\n  }\n\n  // size\n  if (e.has(SIZE)) {\n    p.size = {scale: SIZE, field: e.fieldRef(SIZE)};\n  } else if (!e.has(SIZE)) {\n    p.size = {value: e.value(SIZE)};\n  }\n\n  // shape\n  if (e.has(SHAPE)) {\n    p.shape = {scale: SHAPE, field: e.fieldRef(SHAPE)};\n  } else if (!e.has(SHAPE)) {\n    p.shape = {value: e.value(SHAPE)};\n  }\n\n  // fill or stroke\n  if (e.encDef(SHAPE).filled) {\n    if (e.has(COLOR)) {\n      p.fill = {scale: COLOR, field: e.fieldRef(COLOR)};\n    } else if (!e.has(COLOR)) {\n      p.fill = {value: e.value(COLOR)};\n    }\n  } else {\n    if (e.has(COLOR)) {\n      p.stroke = {scale: COLOR, field: e.fieldRef(COLOR)};\n    } else if (!e.has(COLOR)) {\n      p.stroke = {value: e.value(COLOR)};\n    }\n    p.strokeWidth = {value: e.config('strokeWidth')};\n  }\n\n  // opacity\n  var opacity = e.encDef(COLOR).opacity || style.opacity;\n  if (opacity) p.opacity = {value: opacity};\n\n  return p;\n}\n\nfunction line_props(e,layout, style) {\n  // jshint unused:false\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.fieldRef(X, {bin_suffix: '_mid'})};\n  } else if (!e.has(X)) {\n    p.x = {value: 0};\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.fieldRef(Y, {bin_suffix: '_mid'})};\n  } else if (!e.has(Y)) {\n    p.y = {field: {group: 'height'}};\n  }\n\n  // stroke\n  if (e.has(COLOR)) {\n    p.stroke = {scale: COLOR, field: e.fieldRef(COLOR)};\n  } else if (!e.has(COLOR)) {\n    p.stroke = {value: e.value(COLOR)};\n  }\n\n  var opacity = e.encDef(COLOR).opacity;\n  if (opacity) p.opacity = {value: opacity};\n\n  p.strokeWidth = {value: e.config('strokeWidth')};\n\n  return p;\n}\n\n// TODO(#694): optimize area's usage with bin\nfunction area_props(e, layout, style) {\n  // jshint unused:false\n  var p = {};\n\n  // x\n  if (e.isMeasure(X)) {\n    p.x = {scale: X, field: e.fieldRef(X)};\n    if (e.isDimension(Y)) {\n      p.x2 = {scale: X, value: 0};\n      p.orient = {value: 'horizontal'};\n    }\n  } else if (e.has(X)) {\n    p.x = {scale: X, field: e.fieldRef(X, {bin_suffix: '_mid'})};\n  } else {\n    p.x = {value: 0};\n  }\n\n  // y\n  if (e.isMeasure(Y)) {\n    p.y = {scale: Y, field: e.fieldRef(Y)};\n    p.y2 = {scale: Y, value: 0};\n  } else if (e.has(Y)) {\n    p.y = {scale: Y, field: e.fieldRef(Y, {bin_suffix: '_mid'})};\n  } else {\n    p.y = {field: {group: 'height'}};\n  }\n\n  // fill\n  if (e.has(COLOR)) {\n    p.fill = {scale: COLOR, field: e.fieldRef(COLOR)};\n  } else if (!e.has(COLOR)) {\n    p.fill = {value: e.value(COLOR)};\n  }\n\n  var opacity = e.encDef(COLOR).opacity;\n  if (opacity) p.opacity = {value: opacity};\n\n  return p;\n}\n\nfunction tick_props(e, layout, style) {\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.fieldRef(X, {bin_suffix: '_mid'})};\n    if (e.isDimension(X)) {\n      p.x.offset = -e.bandSize(X, layout.x.useSmallBand) / 3;\n    }\n  } else if (!e.has(X)) {\n    p.x = {value: 0};\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.fieldRef(Y, {bin_suffix: '_mid'})};\n    if (e.isDimension(Y)) {\n      p.y.offset = -e.bandSize(Y, layout.y.useSmallBand) / 3;\n    }\n  } else if (!e.has(Y)) {\n    p.y = {value: 0};\n  }\n\n  // width\n  if (!e.has(X) || e.isDimension(X)) {\n    // TODO(#694): optimize tick's width for bin\n    p.width = {value: e.bandSize(X, layout.y.useSmallBand) / 1.5};\n  } else {\n    p.width = {value: 1};\n  }\n\n  // height\n  if (!e.has(Y) || e.isDimension(Y)) {\n    // TODO(#694): optimize tick's height for bin\n    p.height = {value: e.bandSize(Y, layout.y.useSmallBand) / 1.5};\n  } else {\n    p.height = {value: 1};\n  }\n\n  // fill\n  if (e.has(COLOR)) {\n    p.fill = {scale: COLOR, field: e.fieldRef(COLOR)};\n  } else {\n    p.fill = {value: e.value(COLOR)};\n  }\n\n  var opacity = e.encDef(COLOR).opacity  || style.opacity;\n  if(opacity) p.opacity = {value: opacity};\n\n  return p;\n}\n\nfunction filled_point_props(shape) {\n  return function(e, layout, style) {\n    var p = {};\n\n    // x\n    if (e.has(X)) {\n      p.x = {scale: X, field: e.fieldRef(X, {bin_suffix: '_mid'})};\n    } else if (!e.has(X)) {\n      p.x = {value: e.bandSize(X, layout.x.useSmallBand) / 2};\n    }\n\n    // y\n    if (e.has(Y)) {\n      p.y = {scale: Y, field: e.fieldRef(Y, {bin_suffix: '_mid'})};\n    } else if (!e.has(Y)) {\n      p.y = {value: e.bandSize(Y, layout.y.useSmallBand) / 2};\n    }\n\n    // size\n    if (e.has(SIZE)) {\n      p.size = {scale: SIZE, field: e.fieldRef(SIZE)};\n    } else if (!e.has(X)) {\n      p.size = {value: e.value(SIZE)};\n    }\n\n    // shape\n    p.shape = {value: shape};\n\n    // fill\n    if (e.has(COLOR)) {\n      p.fill = {scale: COLOR, field: e.fieldRef(COLOR)};\n    } else if (!e.has(COLOR)) {\n      p.fill = {value: e.value(COLOR)};\n    }\n\n    var opacity = e.encDef(COLOR).opacity  || style.opacity;\n    if(opacity) p.opacity = {value: opacity};\n\n    return p;\n  };\n}\n\nfunction text_props(e, layout, style, stats) {\n  var p = {},\n    encDef = e.encDef(TEXT);\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.fieldRef(X, {bin_suffix: '_mid'})};\n  } else if (!e.has(X)) {\n    if (e.has(TEXT) && e.isType(TEXT, Q)) {\n      p.x = {value: layout.cellWidth-5};\n    } else {\n      p.x = {value: e.bandSize(X, layout.x.useSmallBand) / 2};\n    }\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.fieldRef(Y, {bin_suffix: '_mid'})};\n  } else if (!e.has(Y)) {\n    p.y = {value: e.bandSize(Y, layout.y.useSmallBand) / 2};\n  }\n\n  // size\n  if (e.has(SIZE)) {\n    p.fontSize = {scale: SIZE, field: e.fieldRef(SIZE)};\n  } else if (!e.has(SIZE)) {\n    p.fontSize = {value: encDef.font.size};\n  }\n\n  // fill\n  // color should be set to background\n  p.fill = {value: encDef.color};\n\n  var opacity = e.encDef(COLOR).opacity  || style.opacity;\n  if(opacity) p.opacity = {value: opacity};\n\n  // text\n  if (e.has(TEXT)) {\n    if (e.isType(TEXT, Q)) {\n      var fieldStats = stats[e.encDef(TEXT).name],\n        numberFormat = encDef.format || e.numberFormat(fieldStats);\n\n      p.text = {template: '{{' + e.fieldRef(TEXT, {datum: true}) + ' | number:\\'' +\n        numberFormat +'\\'}}'};\n      p.align = {value: encDef.align};\n    } else {\n      p.text = {field: e.fieldRef(TEXT)};\n    }\n  } else {\n    p.text = {value: encDef.placeholder};\n  }\n\n  p.font = {value: encDef.font.family};\n  p.fontWeight = {value: encDef.font.weight};\n  p.fontStyle = {value: encDef.font.style};\n  p.baseline = {value: encDef.baseline};\n\n  return p;\n}\n","'use strict';\nrequire('../globals');\nvar util = require('../util'),\n  time = require('./time'),\n  colorbrewer = require('colorbrewer'),\n  interpolate = require('d3-color').interpolateHsl;\n\nvar scale = module.exports = {};\n\nscale.names = function(props) {\n  return util.keys(util.keys(props).reduce(function(a, x) {\n    if (props[x] && props[x].scale) a[props[x].scale] = 1;\n    return a;\n  }, {}));\n};\n\nscale.defs = function(names, encoding, layout, stats, facet) {\n  return names.reduce(function(a, name) {\n    var scaleDef = {};\n\n    scaleDef.name = name;\n    scaleDef.type = scale.type(name, encoding);\n    scaleDef.domain = scale.domain(encoding, name, scaleDef.type, facet);\n\n    // Add optional properties\n    var reverse = scale.reverse(encoding, name);\n    if (reverse) {\n      scaleDef.reverse = reverse;\n    }\n\n    var zero = scale.zero(encoding, name);\n    if (zero !== undefined) {\n      scaleDef.zero = zero;\n    }\n\n    // TODO split scale.range into methods for each properties\n    scaleDef = scale.range(scaleDef, encoding, layout, stats);\n\n    return (a.push(scaleDef), a);\n  }, []);\n};\n\nscale.type = function(name, encoding) {\n  switch (encoding.type(name)) {\n    case N: //fall through\n    case O: return 'ordinal';\n    case T:\n      var timeUnit = encoding.encDef(name).timeUnit;\n      return timeUnit ? time.scale.type(timeUnit, name) : 'time';\n    case Q:\n      if (encoding.bin(name)) {\n        return 'linear';\n      }\n      return encoding.scale(name).type;\n  }\n};\n\nscale.domain = function (encoding, name, type, facet) {\n  var encDef = encoding.encDef(name);\n\n  // special case for temporal scale\n  if (encoding.isType(name, T)) {\n    var range = time.scale.domain(encDef.timeUnit, name);\n    if (range) return range;\n  }\n\n  // For stack, use STACKED data.\n  var stack = encoding.stack();\n  if (stack && name === stack.value) {\n    return {\n      data: STACKED,\n      field: encoding.fieldRef(name, {\n        // If faceted, scale is determined by the max of sum in each facet.\n        prefn: (facet ? 'max_' : '') + 'sum_'\n      })\n    };\n  }\n\n  var useRawDomain = scale._useRawDomain(encoding, name);\n  var sort = scale.sort(encoding, name, type);\n\n  if (useRawDomain) { // useRawDomain - only Q/T\n    return {\n      data: RAW,\n      field: encoding.fieldRef(name, {noAggregate:true})\n    };\n  } else if (encDef.bin) { // bin -- need to merge both bin_start and bin_end\n    return {\n      data: encoding.dataTable(),\n      field: [\n        encoding.fieldRef(name, {bin_suffix:'_start'}),\n        encoding.fieldRef(name, {bin_suffix:'_end'})\n      ]\n    };\n  } else if (sort) { // have sort -- only for ordinal\n    return {\n      // If sort by aggregation of a specified sort field, we need to use RAW table,\n      // so we can aggregate values for the scale independently from the main aggregation.\n      data: sort.op ? RAW : encoding.dataTable(),\n      field: encoding.fieldRef(name),\n      sort: sort\n    };\n  } else {\n    return {\n      data: encoding.dataTable(),\n      field: encoding.fieldRef(name)\n    };\n  }\n};\n\nscale.sort = function(encoding, name, type) {\n  var sort = encoding.encDef(name).sort;\n  if (sort === 'ascending' || sort === 'descending') {\n    return true;\n  }\n\n  // Sorted based on an aggregate calculation over a specified sort field (only for ordinal scale)\n  if (type === 'ordinal' && util.isObject(sort)) {\n    return {\n      op: sort.op,\n      field: sort.field\n    };\n  }\n  return undefined;\n};\n\nscale.reverse = function(encoding, name) {\n  var sort = encoding.encDef(name).sort;\n  return sort && (sort === 'descending' || (sort.order === 'descending'));\n};\n\n/**\n * Determine if useRawDomain should be activated for this scale.\n * @return {Boolean} Returns true if all of the following conditons applies:\n * 1. `useRawDomain` is enabled either through scale or config\n * 2. Aggregation function is not `count` or `sum`\n * 3. The scale is quantitative or time scale.\n */\nscale._useRawDomain = function (encoding, name) {\n  var encDef = encoding.encDef(name);\n\n  // scale value\n  var scaleUseRawDomain = encoding.scale(name).useRawDomain;\n\n  // Determine if useRawDomain is enabled. If scale value is specified, use scale value.\n  // Otherwise, use config value.\n  var useRawDomainEnabled = scaleUseRawDomain !== undefined ?\n      scaleUseRawDomain : encoding.config('useRawDomain');\n\n  var notCountOrSum = !encDef.aggregate ||\n    (encDef.aggregate !=='count' && encDef.aggregate !== 'sum');\n\n  return  useRawDomainEnabled &&\n    notCountOrSum && (\n      // Q always uses quantitative scale except when it's binned and thus uses ordinal scale.\n      (\n        encoding.isType(name, Q) &&\n        !encDef.bin // TODO(#614): this must be changed once bin is reimplemented\n      ) ||\n      // TODO: revise this\n      // T uses non-ordinal scale when there's no unit or when the unit is not ordinal.\n      (\n        encoding.isType(name, T) &&\n        (!encDef.timeUnit || !time.isOrdinalFn(encDef.timeUnit))\n      )\n    );\n};\n\n// FIXME revise if we should produce undefined for shorter spec (and just use vega's default value.)\n// However, let's ignore it for now as it is unclear what is Vega's default value.\nscale.zero = function(encoding, name) {\n  var spec = encoding.scale(name);\n  var encDef = encoding.encDef(name);\n  var timeUnit = encDef.timeUnit;\n\n  if (spec.zero) {\n    return spec.zero; // return explicit value if defined\n  }\n\n  if (encoding.isType(name, T) && (!timeUnit || timeUnit === 'year')) { // FIXME revise this\n    // Returns false (undefined)  by default for time scale\n    return false;\n  }\n  if (encDef.bin) {\n    // Returns false (undefined) by default of bin\n    return false;\n  }\n  // if not bin / temporal, returns true by default\n  return name === X || name === Y || name === SIZE;\n};\n\nscale.range = function (scaleDef, encoding, layout, stats) {\n  var encDef = encoding.encDef(scaleDef.name);\n  var timeUnit = encDef.timeUnit;\n\n  switch (scaleDef.name) {\n    case X:\n      scaleDef.range = layout.cellWidth ? [0, layout.cellWidth] : 'width';\n      if (scaleDef.type === 'ordinal') {\n        scaleDef.bandWidth = encoding.bandSize(X, layout.x.useSmallBand);\n      }\n      scaleDef.round = true;\n      if (scaleDef.type === 'time') {\n        scaleDef.nice = timeUnit || encoding.config('timeScaleNice');\n      }else {\n        scaleDef.nice = true;\n      }\n      break;\n    case Y:\n      if (scaleDef.type === 'ordinal') {\n        scaleDef.range = layout.cellHeight ?\n          (encDef.bin ? [layout.cellHeight, 0] : [0, layout.cellHeight]) :\n          'height';\n        scaleDef.bandWidth = encoding.bandSize(Y, layout.y.useSmallBand);\n      } else {\n        scaleDef.range = layout.cellHeight ? [layout.cellHeight, 0] : 'height';\n      }\n\n      scaleDef.round = true;\n\n      if (scaleDef.type === 'time') {\n        scaleDef.nice = timeUnit || encoding.config('timeScaleNice');\n      }else {\n        scaleDef.nice = true;\n      }\n      break;\n    case ROW: // support only ordinal\n      scaleDef.bandWidth = layout.cellHeight;\n      scaleDef.round = true;\n      scaleDef.nice = true;\n      break;\n    case COL: // support only ordinal\n      scaleDef.bandWidth = layout.cellWidth;\n      scaleDef.round = true;\n      scaleDef.nice = true;\n      break;\n    case SIZE:\n      if (encoding.is('bar')) {\n        // FIXME this is definitely incorrect\n        // but let's fix it later since bar size is a bad encoding anyway\n        scaleDef.range = [3, Math.max(encoding.bandSize(X), encoding.bandSize(Y))];\n      } else if (encoding.is(TEXT)) {\n        scaleDef.range = [8, 40];\n      } else { //point\n        var bandSize = Math.min(encoding.bandSize(X), encoding.bandSize(Y)) - 1;\n        scaleDef.range = [10, 0.8 * bandSize*bandSize];\n      }\n      scaleDef.round = true;\n      break;\n    case SHAPE:\n      scaleDef.range = 'shapes';\n      break;\n    case COLOR:\n      scaleDef.range = scale.color(scaleDef, encoding, stats);\n      break;\n    default:\n      throw new Error('Unknown encoding name: '+ scaleDef.name);\n  }\n\n  // FIXME(kanitw): Jul 29, 2015 - consolidate this with above\n  switch (scaleDef.name) {\n    case ROW:\n    case COL:\n      scaleDef.padding = encoding.config('cellPadding');\n      scaleDef.outerPadding = 0;\n      break;\n    case X:\n    case Y:\n      if (scaleDef.type === 'ordinal') { //&& !s.bandWidth\n        scaleDef.points = true;\n        scaleDef.padding = encoding.encDef(scaleDef.name).band.padding;\n      }\n  }\n\n  return scaleDef;\n};\n\nscale.color = function(s, encoding, stats) {\n  var colorScale = encoding.scale(COLOR),\n    range = colorScale.range,\n    cardinality = encoding.cardinality(COLOR, stats),\n    type = encoding.type(COLOR);\n\n  if (range === undefined) {\n    var ordinalPalette = colorScale.ordinalPalette,\n      quantitativeRange = colorScale.quantitativeRange;\n\n    if (s.type === 'ordinal') {\n      if (type === N) {\n        // use categorical color scale\n        if (cardinality <= 10) {\n          range = colorScale.c10palette;\n        } else {\n          range = colorScale.c20palette;\n        }\n        return scale.color.palette(range, cardinality, type);\n      } else {\n        if (ordinalPalette) {\n          return scale.color.palette(ordinalPalette, cardinality, type);\n        }\n        return scale.color.interpolate(quantitativeRange[0], quantitativeRange[1], cardinality);\n      }\n    } else { //time or quantitative\n      return [quantitativeRange[0], quantitativeRange[1]];\n    }\n  }\n};\n\nscale.color.palette = function(range, cardinality, type) {\n  // FIXME(kanitw): Jul 29, 2015 - check range is string\n  switch (range) {\n    case 'category10k':\n      // tableau's category 10, ordered by perceptual kernel study results\n      // https://github.com/uwdata/perceptual-kernels\n      return ['#2ca02c', '#e377c2', '#7f7f7f', '#17becf', '#8c564b', '#d62728', '#bcbd22', '#9467bd', '#ff7f0e', '#1f77b4'];\n\n    // d3/tableau category10/20/20b/20c\n    case 'category10':\n      return ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf'];\n\n    case 'category20':\n      return ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\n\n    case 'category20b':\n      return ['#393b79', '#5254a3', '#6b6ecf', '#9c9ede', '#637939', '#8ca252', '#b5cf6b', '#cedb9c', '#8c6d31', '#bd9e39', '#e7ba52', '#e7cb94', '#843c39', '#ad494a', '#d6616b', '#e7969c', '#7b4173', '#a55194', '#ce6dbd', '#de9ed6'];\n\n    case 'category20c':\n      return ['#3182bd', '#6baed6', '#9ecae1', '#c6dbef', '#e6550d', '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354', '#74c476', '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc', '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\n  }\n\n  // TODO add our own set of custom ordinal color palette\n\n  if (range in colorbrewer) {\n    var palette = colorbrewer[range];\n\n    // if cardinality pre-defined, use it.\n    if (cardinality in palette) return palette[cardinality];\n\n    // if not, use the highest cardinality one for nominal\n    if (type === N) {\n      return palette[Math.max.apply(null, util.keys(palette))];\n    }\n\n    // otherwise, interpolate\n    var ps = cardinality < 3 ? 3 : Math.max.apply(null, util.keys(palette)),\n      from = 0 , to = ps - 1;\n    // FIXME add config for from / to\n\n    return scale.color.interpolate(palette[ps][from], palette[ps][to], cardinality);\n  }\n\n  return range;\n};\n\nscale.color.interpolate = function (start, end, cardinality) {\n\n  var interpolator = interpolate(start, end);\n  return util.range(cardinality).map(function(i) { return interpolator(i*1.0/(cardinality-1)); });\n};\n","'use strict';\n\nrequire('../globals');\n\nmodule.exports = stacking;\n\nfunction stacking(encoding, mdef, stack) {\n  var groupby = stack.groupby;\n  var field = stack.value;\n\n  var valName = encoding.fieldRef(field);\n  var startField = valName + '_start';\n  var endField = valName + '_end';\n\n  var transforms = [];\n\n  if (encoding.marktype() === 'area') {\n    // Add impute transform to ensure we have all values for each series\n    transforms.push({\n      type: 'impute',\n      field: encoding.fieldRef(field),\n      groupby: [encoding.fieldRef(stack.stack)],\n      orderby: [encoding.fieldRef(groupby)],\n      method: 'value',\n      value: 0\n    });\n  }\n\n\n  // add stack transform to mark\n  var stackTransform = {\n    type: 'stack',\n    groupby: [encoding.fieldRef(groupby)],\n    field: encoding.fieldRef(field),\n    sortby: [(stack.properties.reverse ? '-' : '') + encoding.fieldRef(stack.stack)],\n    output: {start: startField, end: endField}\n  };\n\n  if (stack.properties.offset) {\n    stackTransform.offset = stack.properties.offset;\n  }\n\n  transforms.push(stackTransform)\n\n  mdef.from.transform = transforms;\n\n  // TODO(#276): This is super hack-ish -- consolidate into modular mark properties?\n  mdef.properties.update[field] = mdef.properties.enter[field] = {\n    scale: field,\n    field: startField\n  };\n  mdef.properties.update[field + '2'] = mdef.properties.enter[field + '2'] = {\n    scale: field,\n    field: endField\n  };\n\n  return field; //return stack encoding\n}\n","'use strict';\n\nrequire('../globals');\n\nvar vlEncDef = require('../encdef');\n\nmodule.exports = function(encoding, stats) {\n  return {\n    opacity: estimateOpacity(encoding, stats),\n  };\n};\n\nfunction estimateOpacity(encoding,stats) {\n  if (!stats) {\n    return 1;\n  }\n\n  var numPoints = 0;\n\n  if (encoding.isAggregate()) { // aggregate plot\n    numPoints = 1;\n\n    //  get number of points in each \"cell\"\n    //  by calculating product of cardinality\n    //  for each non faceting and non-ordinal X / Y fields\n    //  note that ordinal x,y are not include since we can\n    //  consider that ordinal x are subdividing the cell into subcells anyway\n    encoding.forEach(function(encDef, encType) {\n\n      if (encType !== ROW && encType !== COL &&\n          !((encType === X || encType === Y) &&\n          vlEncDef.isOrdinalScale(encDef))\n        ) {\n        numPoints *= encoding.cardinality(encType, stats);\n      }\n    });\n\n  } else { // raw plot\n\n    // TODO: error handling\n    if (!stats['*'])\n      return 1;\n\n    numPoints = stats['*'].max;  // count\n\n    // small multiples divide number of points\n    var numMultiples = 1;\n    if (encoding.has(ROW)) {\n      numMultiples *= encoding.cardinality(ROW, stats);\n    }\n    if (encoding.has(COL)) {\n      numMultiples *= encoding.cardinality(COL, stats);\n    }\n    numPoints /= numMultiples;\n  }\n\n  var opacity = 0;\n  if (numPoints <= 25) {\n    opacity = 1;\n  } else if (numPoints < 200) {\n    opacity = 0.8;\n  } else if (numPoints < 1000 || encoding.is('tick')) {\n    opacity = 0.7;\n  } else {\n    opacity = 0.3;\n  }\n\n  return opacity;\n}\n\n","'use strict';\n\nrequire('../globals');\n\nmodule.exports = subfaceting;\n\nfunction subfaceting(group, mdef, details, encoding) {\n  var m = group.marks;\n  var g = {\n    name: 'subfacet',\n    type: 'group',\n    from: mdef.from,\n    properties: {\n      enter: {\n        width: {field: {group: 'width'}},\n        height: {field: {group: 'height'}}\n      }\n    },\n    marks: m\n  };\n\n  group.marks = [g];\n  delete mdef.from; // (move to the new g)\n\n  //TODO test LOD -- we should support stack / line without color (LOD) field\n  var trans = (g.from.transform || (g.from.transform = []));\n  trans.push({type: 'facet', groupby: details});\n}\n","'use strict';\n\nvar util = require('../util'),\n  d3_time_format = require('d3-time-format');\n\nvar time = module.exports = {};\n\n// 'Wednesday September 17 04:00:00 2014'\n// Wednesday is the longest date\n// September is the longest month (8 in javascript as it is zero-indexed).\nvar LONG_DATE = new Date(Date.UTC(2014, 8, 17));\n\ntime.cardinality = function(encDef, stats, filterNull, type) {\n  var timeUnit = encDef.timeUnit;\n  switch (timeUnit) {\n    case 'seconds': return 60;\n    case 'minutes': return 60;\n    case 'hours': return 24;\n    case 'day': return 7;\n    case 'date': return 31;\n    case 'month': return 12;\n    case 'year':\n      var stat = stats[encDef.name],\n        yearstat = stats['year_' + encDef.name];\n\n      if (!yearstat) { return null; }\n\n      return yearstat.distinct -\n        (stat.missing > 0 && filterNull[type] ? 1 : 0);\n  }\n\n  return null;\n};\n\ntime.formula = function(timeUnit, fieldRef) {\n  // TODO(kanitw): add formula to other time format\n  var fn = 'utc' + timeUnit;\n  return fn + '(' + fieldRef + ')';\n};\n\ntime.maxLength = function(timeUnit, encoding) {\n  switch (timeUnit) {\n    case 'seconds':\n    case 'minutes':\n    case 'hours':\n    case 'date':\n      return 2;\n    case 'month':\n    case 'day':\n      var range = time.range(timeUnit, encoding);\n      if (range) {\n        // return the longest name in the range\n        return Math.max.apply(null, range.map(function(r) {return r.length;}));\n      }\n      return 2;\n    case 'year':\n      return 4; //'1998'\n  }\n  // TODO(#600) revise this\n  // no time unit\n  var timeFormat = encoding.config('timeFormat');\n  return d3_time_format.utcFormat(timeFormat)(LONG_DATE).length;\n};\n\ntime.range = function(timeUnit, encoding) {\n  var labelLength = encoding.config('timeScaleLabelLength'),\n    scaleLabel;\n  switch (timeUnit) {\n    case 'day':\n      scaleLabel = encoding.config('dayScaleLabel');\n      break;\n    case 'month':\n      scaleLabel = encoding.config('monthScaleLabel');\n      break;\n  }\n  if (scaleLabel) {\n    return labelLength ? scaleLabel.map(\n        function(s) { return s.substr(0, labelLength);}\n      ) : scaleLabel;\n  }\n  return;\n};\n\n\n/**\n * @param  {Object} encoding\n * @return {Array}  scales for time unit names\n */\ntime.scales = function(encoding) {\n  var scales = encoding.reduce(function(scales, encDef) {\n    var timeUnit = encDef.timeUnit;\n    if (encDef.type === T && timeUnit && !scales[timeUnit]) {\n      var scale = time.scale.def(encDef.timeUnit, encoding);\n      if (scale) scales[timeUnit] = scale;\n    }\n    return scales;\n  }, {});\n\n  return util.vals(scales);\n};\n\n\ntime.scale = {};\n\n/** append custom time scales for axis label */\ntime.scale.def = function(timeUnit, encoding) {\n  var range = time.range(timeUnit, encoding);\n\n  if (range) {\n    return {\n      name: 'time-'+timeUnit,\n      type: 'ordinal',\n      domain: time.scale.domain(timeUnit),\n      range: range\n    };\n  }\n  return null;\n};\n\ntime.isOrdinalFn = function(timeUnit) {\n  switch (timeUnit) {\n    case 'seconds':\n    case 'minutes':\n    case 'hours':\n    case 'day':\n    case 'date':\n    case 'month':\n      return true;\n  }\n  return false;\n};\n\ntime.scale.type = function(timeUnit, name) {\n  if (name === COLOR) {\n    return 'linear'; // time has order, so use interpolated ordinal color scale.\n  }\n\n  // FIXME revise this -- should 'year' be linear too?\n  return time.isOrdinalFn(timeUnit) || name === COL || name === ROW ? 'ordinal' : 'linear';\n};\n\ntime.scale.domain = function(timeUnit, name) {\n  var isColor = name === COLOR;\n  switch (timeUnit) {\n    case 'seconds':\n    case 'minutes': return isColor ? [0,59] : util.range(0, 60);\n    case 'hours': return isColor ? [0,23] : util.range(0, 24);\n    case 'day': return isColor ? [0,6] : util.range(0, 7);\n    case 'date': return isColor ? [1,31] : util.range(1, 32);\n    case 'month': return isColor ? [0,11] : util.range(0, 12);\n  }\n  return null;\n};\n\n/** whether a particular time function has custom scale for labels implemented in time.scale */\ntime.hasScale = function(timeUnit) {\n  switch (timeUnit) {\n    case 'day':\n    case 'month':\n      return true;\n  }\n  return false;\n};\n","'use strict';\n\nrequire('./globals');\n\nvar consts = module.exports = {};\n\nconsts.encodingTypes = [X, Y, ROW, COL, SIZE, SHAPE, COLOR, TEXT, DETAIL];\n\nconsts.shorthand = {\n  delim:  '|',\n  assign: '=',\n  type:   ',',\n  func:   '_'\n};\n","'use strict';\n\nrequire('./globals');\n\nvar stats = require('datalib/src/stats');\n\nvar vldata = module.exports = {};\n\n/** Mapping from datalib's inferred type to Vega-lite's type */\nvldata.types = {\n  'boolean': N,\n  'number': Q,\n  'integer': Q,\n  'date': T,\n  'string': N\n};\n\nvldata.stats = function(data) {\n  var summary = stats.summary(data);\n\n  return summary.reduce(function(s, profile) {\n    s[profile.field] = profile;\n    return s;\n  }, {\n    '*': {\n      max: data.length,\n      min: 0\n    }\n  });\n};","// utility for enc\n\n'use strict';\n\nvar consts = require('./consts'),\n  c = consts.shorthand,\n  vlEncDef = require('./encdef'),\n  util = require('./util'),\n  schema = require('./schema/schema'),\n  encTypes = schema.encTypes;\n\nvar vlenc = module.exports = {};\n\nvlenc.countRetinal = function(enc) {\n  var count = 0;\n  if (enc.color) count++;\n  if (enc.size) count++;\n  if (enc.shape) count++;\n  return count;\n};\n\nvlenc.has = function(enc, encType) {\n  var fieldDef = enc && enc[encType];\n  return fieldDef && fieldDef.name;\n};\n\nvlenc.isAggregate = function(enc) {\n  for (var k in enc) {\n    if (vlenc.has(enc, k) && enc[k].aggregate) {\n      return true;\n    }\n  }\n  return false;\n};\n\nvlenc.forEach = function(enc, f) {\n  var i = 0;\n  encTypes.forEach(function(k) {\n    if (vlenc.has(enc, k)) {\n      f(enc[k], k, i++);\n    }\n  });\n};\n\nvlenc.map = function(enc, f) {\n  var arr = [];\n  encTypes.forEach(function(k) {\n    if (vlenc.has(enc, k)) {\n      arr.push(f(enc[k], k, enc));\n    }\n  });\n  return arr;\n};\n\nvlenc.reduce = function(enc, f, init) {\n  var r = init;\n  encTypes.forEach(function(k) {\n    if (vlenc.has(enc, k)) {\n      r = f(r, enc[k], k,  enc);\n    }\n  });\n  return r;\n};\n\n/*\n * return key-value pairs of field name and list of fields of that field name\n */\nvlenc.fields = function(enc) {\n  return vlenc.reduce(enc, function (m, field) {\n    var fieldList = m[field.name] = m[field.name] || [],\n      containsType = fieldList.containsType = fieldList.containsType || {};\n\n    if (fieldList.indexOf(field) === -1) {\n      fieldList.push(field);\n      // augment the array with containsType.Q / O / N / T\n      containsType[field.type] = true;\n    }\n    return m;\n  }, {});\n};\n\nvlenc.shorthand = function(enc) {\n  return vlenc.map(enc, function(field, et) {\n    return et + c.assign + vlEncDef.shorthand(field);\n  }).join(c.delim);\n};\n\nvlenc.fromShorthand = function(shorthand) {\n  var enc = util.isArray(shorthand) ? shorthand : shorthand.split(c.delim);\n  return enc.reduce(function(m, e) {\n    var split = e.split(c.assign),\n        enctype = split[0].trim(),\n        field = split[1];\n\n    m[enctype] = vlEncDef.fromShorthand(field);\n    return m;\n  }, {});\n};\n","'use strict';\n\n// utility for field\n\nrequire('./globals');\n\nvar consts = require('./consts'),\n  c = consts.shorthand,\n  time = require('./compiler/time'),\n  util = require('./util'),\n  schema = require('./schema/schema');\n\nvar vlfield = module.exports = {};\n\n/**\n * @param field\n * @param opt\n *   opt.nofn -- exclude bin, aggregate, timeUnit\n *   opt.noAggregate -- exclude aggregation function\n *   opt.datum - include 'datum.'\n *   opt.fn - replace fn with custom function prefix\n *   opt.prefn - prepend fn with custom function prefix\n *   opt.bin_suffix - append suffix to the field ref for bin (default='_start')\n\n * @return {[type]}       [description]\n */\nvlfield.fieldRef = function(field, opt) {\n  opt = opt || {};\n\n  var f = (opt.datum ? 'datum.' : '') + (opt.prefn || ''),\n    name = field.name;\n\n  if (vlfield.isCount(field)) {\n    return f + 'count';\n  } else if (opt.fn) {\n    return f + opt.fn + '_' + name;\n  } else if (!opt.nofn && field.bin) {\n    var bin_suffix = opt.bin_suffix || '_start';\n    return f + 'bin_' + name + bin_suffix;\n  } else if (!opt.nofn && !opt.noAggregate && field.aggregate) {\n    return f + field.aggregate + '_' + name;\n  } else if (!opt.nofn && field.timeUnit) {\n    return f + field.timeUnit + '_' + name;\n  }  else {\n    return f + name;\n  }\n};\n\nvlfield.shorthand = function(f) {\n  var c = consts.shorthand;\n  return (f.aggregate ? f.aggregate + c.func : '') +\n    (f.timeUnit ? f.timeUnit + c.func : '') +\n    (f.bin ? 'bin' + c.func : '') +\n    (f.name || '') + c.type + f.type;\n};\n\nvlfield.shorthands = function(fields, delim) {\n  delim = delim || c.delim;\n  return fields.map(vlfield.shorthand).join(delim);\n};\n\nvlfield.fromShorthand = function(shorthand) {\n  var split = shorthand.split(c.type), i;\n  var o = {\n    name: split[0].trim(),\n    type: split[1].trim()\n  };\n\n  // check aggregate type\n  for (i in schema.aggregate.enum) {\n    var a = schema.aggregate.enum[i];\n    if (o.name.indexOf(a + '_') === 0) {\n      o.name = o.name.substr(a.length + 1);\n      if (a == 'count' && o.name.length === 0) o.name = '*';\n      o.aggregate = a;\n      break;\n    }\n  }\n\n  // check time timeUnit\n  for (i in schema.timefns) {\n    var tu = schema.timefns[i];\n    if (o.name && o.name.indexOf(tu + '_') === 0) {\n      o.name = o.name.substr(o.length + 1);\n      o.timeUnit = tu;\n      break;\n    }\n  }\n\n  // check bin\n  if (o.name && o.name.indexOf('bin_') === 0) {\n    o.name = o.name.substr(4);\n    o.bin = true;\n  }\n\n  return o;\n};\n\nvar isType = vlfield.isType = function (fieldDef, type) {\n  return fieldDef.type === type;\n};\n\nvar isTypes = vlfield.isTypes = function (fieldDef, types) {\n  for (var t=0; t<types.length; t++) {\n    if(fieldDef.type === types[t]) return true;\n  }\n  return false;\n};\n\n/*\n * Most fields that use ordinal scale are dimensions.\n * However, YEAR(T), YEARMONTH(T) use time scale, not ordinal but are dimensions too.\n */\nvlfield.isOrdinalScale = function(field) {\n  return  isTypes(field, [N, O]) ||\n    ( isType(field, T) && field.timeUnit && time.isOrdinalFn(field.timeUnit) );\n};\n\nfunction isDimension(field) {\n  return  isTypes(field, [N, O]) || !!field.bin ||\n    ( isType(field, T) && !!field.timeUnit );\n}\n\n/**\n * For encoding, use encoding.isDimension() to avoid confusion.\n * Or use Encoding.isType if your field is from Encoding (and thus have numeric data type).\n * otherwise, do not specific isType so we can use the default isTypeName here.\n */\nvlfield.isDimension = function(field) {\n  return field && isDimension(field);\n};\n\nvlfield.isMeasure = function(field) {\n  return field && !isDimension(field);\n};\n\nvlfield.count = function() {\n  return {name:'*', aggregate: 'count', type: Q, displayName: vlfield.count.displayName};\n};\n\nvlfield.count.displayName = 'Number of Records';\n\nvlfield.isCount = function(field) {\n  return field.aggregate === 'count';\n};\n\n/**\n * For encoding, use encoding.cardinality() to avoid confusion.  Or use Encoding.isType if your field is from Encoding (and thus have numeric data type).\n * otherwise, do not specific isType so we can use the default isTypeName here.\n */\nvlfield.cardinality = function(field, stats, filterNull) {\n  // FIXME need to take filter into account\n\n  var stat = stats[field.name];\n  var type = field.type;\n\n  filterNull = filterNull || {};\n\n  if (field.bin) {\n    var bins = util.getbins(stat, field.bin.maxbins || schema.MAXBINS_DEFAULT);\n    return (bins.stop - bins.start) / bins.step;\n  }\n  if (isType(field, T)) {\n    var cardinality = time.cardinality(field, stats, filterNull, type);\n    if(cardinality !== null) return cardinality;\n    //otherwise use calculation below\n  }\n  if (field.aggregate) {\n    return 1;\n  }\n\n  // remove null\n  return stat.distinct -\n    (stat.missing > 0 && filterNull[type] ? 1 : 0);\n};\n","'use strict';\n\n// declare global constant\nvar g = global || window;\n\ng.AGGREGATE = 'aggregate';\ng.RAW = 'raw';\ng.STACKED = 'stacked';\ng.INDEX = 'index';\n\ng.X = 'x';\ng.Y = 'y';\ng.ROW = 'row';\ng.COL = 'col';\ng.SIZE = 'size';\ng.SHAPE = 'shape';\ng.COLOR = 'color';\ng.TEXT = 'text';\ng.DETAIL = 'detail';\n\ng.N = 'N';\ng.O = 'O';\ng.Q = 'Q';\ng.T = 'T';\n","'use strict';\n\n// TODO(kanitw): chat with Vega team and possibly move this to vega-logging\nmodule.exports = function(prefix) {\n  // Borrowed some ideas from http://stackoverflow.com/a/15653260/866989\n  // and https://github.com/patik/console.log-wrapper/blob/master/consolelog.js\n  var METHODS = ['error', 'info', 'debug', 'warn', 'log'];\n\n  return METHODS.reduce(function(logger, fn) {\n    var cfn = console[fn] ? fn : 'log';\n    if (console[cfn].bind === 'undefined') { // IE < 10\n        logger[fn] = Function.prototype.bind.call(console[cfn], console, prefix);\n    }\n    else {\n        logger[fn] = console[cfn].bind(console, prefix);\n    }\n    return logger;\n  }, {});\n};","// Package of defining Vega-lite Specification's json schema\n'use strict';\n\nrequire('../globals');\n\nvar schema = module.exports = {},\n  util = require('../util'),\n  toMap = util.toMap,\n  colorbrewer = require('colorbrewer');\n\nvar VALID_AGG_OPS = require('vega/src/transforms/Aggregate').VALID_OPS;\n\n// TODO(#620) refer to vega schema\n// var vgStackSchema = require('vega/src/transforms/Stack').schema;\n\n\nschema.util = require('./schemautil');\n\nschema.marktype = {\n  type: 'string',\n  enum: ['point', 'tick', 'bar', 'line', 'area', 'circle', 'square', 'text']\n};\n\nschema.aggregate = {\n  type: 'string',\n  enum: VALID_AGG_OPS,\n  supportedEnums: {\n    Q: VALID_AGG_OPS,\n    O: ['median','min','max'],\n    N: [],\n    T: ['mean', 'median', 'min', 'max'],\n    '': ['count']\n  },\n  supportedTypes: toMap([Q, N, O, T, ''])\n};\n\nschema.getSupportedRole = function(encType) {\n  return schema.schema.properties.encoding.properties[encType].supportedRole;\n};\n\nschema.timeUnits = ['year', 'month', 'day', 'date', 'hours', 'minutes', 'seconds'];\n\nschema.defaultTimeFn = 'month';\n\nschema.timeUnit = {\n  type: 'string',\n  enum: schema.timeUnits,\n  supportedTypes: toMap([T])\n};\n\nschema.scale_type = {\n  type: 'string',\n  // TODO(kanitw) read vega's schema here, add description\n  enum: ['linear', 'log', 'pow', 'sqrt', 'quantile'],\n  default: 'linear',\n  supportedTypes: toMap([Q])\n};\n\nschema.field = {\n  type: 'object',\n  properties: {\n    name: {\n      type: 'string'\n    }\n  }\n};\n\nvar clone = util.duplicate;\nvar merge = schema.util.merge;\n\nschema.MAXBINS_DEFAULT = 15;\n\nvar bin = {\n  type: ['boolean', 'object'],\n  default: false,\n  properties: {\n    maxbins: {\n      type: 'integer',\n      default: schema.MAXBINS_DEFAULT,\n      minimum: 2,\n      description: 'Maximum number of bins.'\n    }\n  },\n  supportedTypes: toMap([Q]) // TODO: add O after finishing #81\n};\n\nvar typicalField = merge(clone(schema.field), {\n  type: 'object',\n  properties: {\n    type: {\n      type: 'string',\n      enum: [N, O, Q, T]\n    },\n    aggregate: schema.aggregate,\n    timeUnit: schema.timeUnit,\n    bin: bin,\n    scale: {\n      type: 'object',\n      properties: {\n        /* Common Scale Properties */\n        type: schema.scale_type,\n\n        /* Quantitative Scale Properties */\n        nice: {\n          type: 'string',\n          enum: ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'],\n          supportedTypes: toMap([T])\n        },\n        zero: {\n          type: 'boolean',\n          description: 'Include zero',\n          default: undefined,\n          supportedTypes: toMap([Q, T])\n        },\n\n        /* Vega-lite only Properties */\n        useRawDomain: {\n          type: 'boolean',\n          default: undefined,\n          description: 'Use the raw data range as scale domain instead of ' +\n                       'aggregated data for aggregate axis. ' +\n                       'This option does not work with sum or count aggregate' +\n                       'as they might have a substantially larger scale range.' +\n                       'By default, use value from config.useRawDomain.'\n        }\n      }\n    }\n  }\n});\n\nvar onlyOrdinalField = merge(clone(schema.field), {\n  type: 'object',\n  supportedRole: {\n    dimension: true\n  },\n  properties: {\n    type: {\n      type: 'string',\n      enum: [N, O, Q, T] // ordinal-only field supports Q when bin is applied and T when time unit is applied.\n    },\n    timeUnit: schema.timeUnit,\n    bin: bin,\n    aggregate: {\n      type: 'string',\n      enum: ['count'],\n      supportedTypes: toMap([N, O]) // FIXME this looks weird to me\n    }\n  }\n});\n\nvar axisMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true},\n  properties: {\n    axis: {\n      type: 'object',\n      properties: {\n        /* Vega Axis Properties */\n        format: {\n          type: 'string',\n          default: undefined,  // auto\n          description: 'The formatting pattern for axis labels. '+\n                       'If not undefined, this will be determined by ' +\n                       'small/largeNumberFormat and the max value ' +\n                       'of the field.'\n        },\n        grid: {\n          type: 'boolean',\n          default: undefined,\n          description: 'A flag indicate if gridlines should be created in addition to ticks. If `grid` is unspecified, the default value is `true` for ROW and COL. For X and Y, the default value is `true` for quantitative and time fields and `false` otherwise.'\n        },\n        layer: {\n          type: 'string',\n          default: 'back',\n          description: 'A string indicating if the axis (and any gridlines) should be placed above or below the data marks. One of \"front\" (default) or \"back\".'\n        },\n        orient: {\n          type: 'string',\n          default: undefined,\n          enum: ['top', 'right', 'left', 'bottom'],\n          description: 'The orientation of the axis. One of top, bottom, left or right. The orientation can be used to further specialize the axis type (e.g., a y axis oriented for the right edge of the chart).'\n        },\n        ticks: {\n          type: 'integer',\n          default: 5,\n          minimum: 0,\n          description: 'A desired number of ticks, for axes visualizing quantitative scales. The resulting number may be different so that values are \"nice\" (multiples of 2, 5, 10) and lie within the underlying scale\\'s range.'\n        },\n        /* Vega Axis Properties that are automatically populated by Vega-lite */\n        title: {\n          type: 'string',\n          default: undefined,\n          description: 'A title for the axis. (Shows field name and its function by default.)'\n        },\n        /* Vega-lite only */\n        maxLabelLength: {\n          type: 'integer',\n          default: 25,\n          minimum: 0,\n          description: 'Truncate labels that are too long.'\n        },\n        labelAngle: {\n          type: 'integer',\n          default: undefined, // auto\n          minimum: 0,\n          maximum: 360,\n          description: 'Angle by which to rotate labels. Set to 0 to force horizontal.'\n        },\n        titleMaxLength: {\n          type: 'integer',\n          default: undefined,\n          minimum: 0,\n          description: 'Max length for axis title if the title is automatically generated from the field\\'s description'\n        },\n        titleOffset: {\n          type: 'integer',\n          default: undefined,  // auto\n          description: 'A title offset value for the axis.'\n        },\n      }\n    }\n  }\n};\n\nvar sortMixin = {\n  type: 'object',\n  properties: {\n    sort: {\n      default: 'ascending',\n      supportedTypes: toMap([N, O]),\n      oneOf: [\n        {\n          type: 'string',\n          enum: ['ascending', 'descending', 'unsorted']\n        },\n        { // sort by aggregation of another field\n          type: 'object',\n          required: ['field', 'op'],\n          properties: {\n            field: {\n              type: 'string',\n              description: 'The field name to aggregate over.'\n            },\n            op: {\n              type: 'string',\n              enum: VALID_AGG_OPS,\n              description: 'The field name to aggregate over.'\n            },\n            order: {\n              type: 'string',\n              enum: ['ascending', 'descending']\n            }\n          }\n        }\n      ]\n\n    }\n  }\n};\n\nvar bandMixin = {\n  type: 'object',\n  properties: {\n    band: {\n      type: 'object',\n      properties: {\n        size: {\n          type: 'integer',\n          minimum: 0,\n          default: undefined\n        },\n        padding: {\n          type: 'integer',\n          minimum: 0,\n          default: 1\n        }\n      }\n    }\n  }\n};\n\nvar legendMixin = {\n  type: 'object',\n  properties: {\n    legend: {\n      type: 'object',\n      description: 'Properties of a legend.',\n      properties: {\n        title: {\n          type: 'string',\n          default: undefined,\n          description: 'A title for the legend. (Shows field name and its function by default.)'\n        },\n        orient: {\n          type: 'string',\n          default: 'right',\n          description: 'The orientation of the legend. One of \"left\" or \"right\". This determines how the legend is positioned within the scene. The default is \"right\".'\n        }\n      }\n    }\n  }\n};\n\nvar textMixin = {\n  type: 'object',\n  supportedMarktypes: {'text': true},\n  properties: {\n    align: {\n      type: 'string',\n      default: 'right'\n    },\n    baseline: {\n      type: 'string',\n      default: 'middle'\n    },\n    color: {\n      type: 'string',\n      role: 'color',\n      default: '#000000'\n    },\n    margin: {\n      type: 'integer',\n      default: 4,\n      minimum: 0\n    },\n    placeholder: {\n      type: 'string',\n      default: 'Abc'\n    },\n    font: {\n      type: 'object',\n      properties: {\n        weight: {\n          type: 'string',\n          enum: ['normal', 'bold'],\n          default: 'normal'\n        },\n        size: {\n          type: 'integer',\n          default: 10,\n          minimum: 0\n        },\n        family: {\n          type: 'string',\n          default: 'Helvetica Neue'\n        },\n        style: {\n          type: 'string',\n          default: 'normal',\n          enum: ['normal', 'italic']\n        }\n      }\n    },\n    format: {\n      type: 'string',\n      default: undefined,  // auto\n      description: 'The formatting pattern for text value. '+\n                   'If not undefined, this will be determined by ' +\n                   'small/largeNumberFormat and the max value ' +\n                   'of the field.'\n    },\n  }\n};\n\nvar sizeMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, bar: true, circle: true, square: true, text: true},\n  properties: {\n    value: {\n      type: 'integer',\n      default: 30,\n      minimum: 0,\n      description: 'Size of marks.'\n    }\n  }\n};\n\nvar colorMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, 'text': true},\n  properties: {\n    value: {\n      type: 'string',\n      role: 'color',\n      default: '#4682b4',\n      description: 'Color to be used for marks.'\n    },\n    opacity: {\n      type: 'number',\n      default: undefined,  // auto\n      minimum: 0,\n      maximum: 1\n    },\n    scale: {\n      type: 'object',\n      properties: {\n        range: {\n          type: ['string', 'array'],\n          default: undefined,\n          description:\n            'Color palette, if undefined vega-lite will use data property' +\n            'to pick one from c10palette, c20palette, or ordinalPalette.'\n            //FIXME\n        },\n        c10palette: {\n          type: 'string',\n          default: 'category10',\n          enum: [\n            // Tableau\n            'category10', 'category10k',\n            // Color Brewer\n            'Pastel1', 'Pastel2', 'Set1', 'Set2', 'Set3'\n          ]\n        },\n        c20palette: {\n          type: 'string',\n          default: 'category20',\n          enum: ['category20', 'category20b', 'category20c']\n        },\n        ordinalPalette: {\n          type: 'string',\n          default: undefined,\n          description: 'Color palette to encode ordinal variables.',\n          enum: util.keys(colorbrewer)\n        },\n        quantitativeRange: {\n          type: 'array',\n          default: ['#AFC6A3', '#09622A'], // tableau greens\n          // default: ['#ccece6', '#00441b'], // BuGn.9 [2-8]\n          description: 'Color range to encode quantitative variables.',\n          minItems: 2,\n          maxItems: 2,\n          items: {\n            type: 'string',\n            role: 'color'\n          }\n        }\n      }\n    }\n  }\n};\n\nvar stackMixin = {\n  type: 'object',\n  properties: {\n    stack: {\n      type: ['boolean', 'object'],\n      default: true,\n      description: 'Enable stacking (for bar and area marks only).',\n      properties: {\n        reverse: {\n          type: 'boolean',\n          default: false,\n          description: 'Whether to reverse the stack\\'s sortby.'\n        },\n        offset: {\n          type: 'string',\n          default: undefined,\n          enum: ['zero', 'center', 'normalize']\n          // TODO(#620) refer to Vega spec once it doesn't throw error\n          // enum: vgStackSchema.properties.offset.oneOf[0].enum\n        }\n      }\n    }\n  }\n};\n\nvar shapeMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, circle: true, square: true},\n  properties: {\n    value: {\n      type: 'string',\n      enum: ['circle', 'square', 'cross', 'diamond', 'triangle-up', 'triangle-down'],\n      default: 'circle',\n      description: 'Mark to be used.'\n    },\n    filled: {\n      type: 'boolean',\n      default: false,\n      description: 'Whether the shape\\'s color should be used as fill color instead of stroke color.'\n    }\n  }\n};\n\nvar detailMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, line: true, circle: true, square: true}\n};\n\nvar rowMixin = {\n  properties: {\n    height: {\n      type: 'number',\n      minimum: 0,\n      default: 150\n    }\n  }\n};\n\nvar colMixin = {\n  properties: {\n    width: {\n      type: 'number',\n      minimum: 0,\n      default: 150\n    },\n    axis: {\n      properties: {\n        maxLabelLength: {\n          type: 'integer',\n          default: 12,\n          minimum: 0,\n          description: 'Truncate labels that are too long.'\n        }\n      }\n    }\n  }\n};\n\nvar facetMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, text: true},\n  properties: {\n    padding: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.1\n    }\n  }\n};\n\nvar requiredNameType = {\n  required: ['name', 'type']\n};\n\nvar multiRoleField = merge(clone(typicalField), {\n  supportedRole: {\n    measure: true,\n    dimension: true\n  }\n});\n\nvar quantitativeField = merge(clone(typicalField), {\n  supportedRole: {\n    measure: true,\n    dimension: 'ordinal-only' // using size to encoding category lead to order interpretation\n  }\n});\n\nvar onlyQuantitativeField = merge(clone(typicalField), {\n  supportedRole: {\n    measure: true\n  }\n});\n\nvar x = merge(clone(multiRoleField), axisMixin, bandMixin, requiredNameType, sortMixin);\nvar y = clone(x);\n\nvar facet = merge(clone(onlyOrdinalField), requiredNameType, facetMixin, sortMixin);\nvar row = merge(clone(facet), axisMixin, rowMixin);\nvar col = merge(clone(facet), axisMixin, colMixin);\n\nvar size = merge(clone(quantitativeField), legendMixin, sizeMixin, sortMixin);\nvar color = merge(clone(multiRoleField), legendMixin, colorMixin, stackMixin, sortMixin);\n\nvar shape = merge(clone(onlyOrdinalField), legendMixin, shapeMixin, sortMixin);\nvar detail = merge(clone(onlyOrdinalField), detailMixin, stackMixin, sortMixin);\n\n// we only put aggregated measure in pivot table\nvar text = merge(clone(onlyQuantitativeField), textMixin, sortMixin);\n\n// TODO add label\n\nvar data = {\n  type: 'object',\n  properties: {\n    // data source\n    formatType: {\n      type: 'string',\n      enum: ['json', 'csv'],\n      default: 'json'\n    },\n    url: {\n      type: 'string',\n      default: undefined\n    },\n    values: {\n      type: 'array',\n      default: undefined,\n      description: 'Pass array of objects instead of a url to a file.',\n      items: {\n        type: 'object',\n        additionalProperties: true\n      }\n    },\n    // we generate a vega filter transform\n    filter: {\n      type: 'string',\n      default: undefined,\n      description: 'A string containing the filter Vega expression. Use `datum` to refer to the current data object.'\n    },\n    // we generate a vega formula transform\n    formulas: {\n      type: 'array',\n      default: undefined,\n      description: 'Array of formula transforms. Formulas are applied before filter.',\n      items: {\n        type: 'object',\n        properties: {\n          field: {\n            type: 'string',\n            description: 'The property name in which to store the computed formula value.'\n          },\n          expr: {\n            type: 'string',\n            description: 'A string containing an expression for the formula. Use the variable `datum` to to refer to the current data object.'\n          }\n        }\n      }\n    }\n  }\n};\n\nvar config = {\n  type: 'object',\n  properties: {\n    // template\n    width: {\n      type: 'integer',\n      default: undefined\n    },\n    height: {\n      type: 'integer',\n      default: undefined\n    },\n    viewport: {\n      type: 'array',\n      items: {\n        type: 'integer'\n      },\n      default: undefined\n    },\n    gridColor: {\n      type: 'string',\n      role: 'color',\n      default: '#000000'\n    },\n    gridOpacity: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.08\n    },\n\n    // filter null\n    // TODO(#597) revise this config\n    filterNull: {\n      type: 'object',\n      properties: {\n        N: {type:'boolean', default: false},\n        O: {type:'boolean', default: false},\n        Q: {type:'boolean', default: true},\n        T: {type:'boolean', default: true}\n      }\n    },\n    autoSortLine: {\n      type: 'boolean',\n      default: true\n    },\n\n    // single plot\n    singleHeight: {\n      // will be overwritten by bandWidth * (cardinality + padding)\n      type: 'integer',\n      default: 200,\n      minimum: 0\n    },\n    singleWidth: {\n      // will be overwritten by bandWidth * (cardinality + padding)\n      type: 'integer',\n      default: 200,\n      minimum: 0\n    },\n    // band size\n    largeBandSize: {\n      type: 'integer',\n      default: 21,\n      minimum: 0\n    },\n    smallBandSize: {\n      //small multiples or single plot with high cardinality\n      type: 'integer',\n      default: 12,\n      minimum: 0\n    },\n    largeBandMaxCardinality: {\n      type: 'integer',\n      default: 10\n    },\n    // small multiples\n    cellPadding: {\n      type: 'number',\n      default: 0.1\n    },\n    cellGridColor: {\n      type: 'string',\n      role: 'color',\n      default: '#000000'\n    },\n    cellGridOpacity: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.25\n    },\n    cellGridOffset: {\n      type: 'number',\n      default: 6 // equal to tickSize\n    },\n    cellBackgroundColor: {\n      type: 'string',\n      role: 'color',\n      default: 'rgba(0,0,0,0)'\n    },\n    textCellWidth: {\n      type: 'integer',\n      default: 90,\n      minimum: 0\n    },\n\n    // marks\n    strokeWidth: {\n      type: 'integer',\n      default: 2,\n      minimum: 0\n    },\n    singleBarOffset: {\n      type: 'integer',\n      default: 5,\n      minimum: 0\n    },\n    // scales\n    timeScaleLabelLength: {\n      type: 'integer',\n      default: 3,\n      minimum: 0,\n      description: 'Max length for values in dayScaleLabel and monthScaleLabel.  Zero means using full names in dayScaleLabel/monthScaleLabel.'\n    },\n    dayScaleLabel: {\n      type: 'array',\n      items: {\n        type: 'string'\n      },\n      default: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n      description: 'Axis labels for day of week, starting from Sunday.' +\n        '(Consistent with Javascript -- See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getDay.'\n    },\n    monthScaleLabel: {\n      type: 'array',\n      items: {\n        type: 'string'\n      },\n      default: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n      description: 'Axis labels for month.'\n    },\n    // other\n    characterWidth: {\n      type: 'integer',\n      default: 6\n    },\n    maxSmallNumber: {\n      type: 'number',\n      default: 10000,\n      description: 'maximum number that a field will be considered smallNumber.'+\n                   'Used for axis labelling.'\n    },\n    smallNumberFormat: {\n      type: 'string',\n      default: '',\n      description: 'D3 Number format for axis labels and text tables '+\n                   'for number <= maxSmallNumber. Used for axis labelling.'\n    },\n    largeNumberFormat: {\n      type: 'string',\n      default: '.3s',\n      description: 'D3 Number format for axis labels and text tables ' +\n                   'for number > maxSmallNumber.'\n    },\n    timeFormat: {\n      type: 'string',\n      default: '%Y-%m-%d',\n      description: 'Date format for axis labels.'\n    },\n    useRawDomain: {\n      type: 'boolean',\n      default: false,\n      description: 'Use the raw data range as scale domain instead of ' +\n                   'aggregated data for aggregate axis. ' +\n                   'This option does not work with sum or count aggregate' +\n                   'as they might have a substantially larger scale range.' +\n                   'By default, use value from config.useRawDomain.'\n    }\n  }\n};\n\n/** @type Object Schema of a vega-lite specification */\nschema.schema = {\n  $schema: 'http://json-schema.org/draft-04/schema#',\n  description: 'Schema for Vega-lite specification',\n  type: 'object',\n  required: ['marktype', 'encoding', 'data'],\n  properties: {\n    data: data,\n    marktype: schema.marktype,\n    encoding: {\n      type: 'object',\n      properties: {\n        x: x,\n        y: y,\n        row: row,\n        col: col,\n        size: size,\n        color: color,\n        shape: shape,\n        text: text,\n        detail: detail\n      }\n    },\n    config: config\n  }\n};\n\nschema.encTypes = util.keys(schema.schema.properties.encoding.properties);\n\n/** Instantiate a verbose vl spec from the schema */\nschema.instantiate = function() {\n  return schema.util.instantiate(schema.schema);\n};\n","'use strict';\n\nvar schemautil = module.exports = {},\n  util = require('../util');\n\nvar isEmpty = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\nschemautil.extend = function(instance, schema) {\n  return schemautil.merge(schemautil.instantiate(schema), instance);\n};\n\n// instantiate a schema\nschemautil.instantiate = function(schema) {\n  var val;\n  if (schema === undefined) {\n    return undefined;\n  } else if ('default' in schema) {\n    val = schema.default;\n    return util.isObject(val) ? util.duplicate(val) : val;\n  } else if (schema.type === 'object') {\n    var instance = {};\n    for (var name in schema.properties) {\n      val = schemautil.instantiate(schema.properties[name]);\n      if (val !== undefined) {\n        instance[name] = val;\n      }\n    }\n    return instance;\n  } else if (schema.type === 'array') {\n    return [];\n  }\n  return undefined;\n};\n\n// remove all defaults from an instance\nschemautil.subtract = function(instance, defaults) {\n  var changes = {};\n  for (var prop in instance) {\n    var def = defaults[prop];\n    var ins = instance[prop];\n    // Note: does not properly subtract arrays\n    if (!defaults || def !== ins) {\n      if (typeof ins === 'object' && !util.isArray(ins) && def) {\n        var c = schemautil.subtract(ins, def);\n        if (!isEmpty(c))\n          changes[prop] = c;\n      } else if (!util.isArray(ins) || ins.length > 0) {\n        changes[prop] = ins;\n      }\n    }\n  }\n  return changes;\n};\n\nschemautil.merge = function(/*dest*, src0, src1, ...*/){\n  var dest = arguments[0];\n  for (var i=1 ; i<arguments.length; i++) {\n    dest = merge(dest, arguments[i]);\n  }\n  return dest;\n};\n\n// recursively merges src into dest\nfunction merge(dest, src) {\n  if (typeof src !== 'object' || src === null) {\n    return dest;\n  }\n\n  for (var p in src) {\n    if (!src.hasOwnProperty(p)) {\n      continue;\n    }\n    if (src[p] === undefined) {\n      continue;\n    }\n    if (typeof src[p] !== 'object' || src[p] === null) {\n      dest[p] = src[p];\n    } else if (typeof dest[p] !== 'object' || dest[p] === null) {\n      dest[p] = merge(src[p].constructor === Array ? [] : {}, src[p]);\n    } else {\n      merge(dest[p], src[p]);\n    }\n  }\n  return dest;\n}","'use strict';\n\nvar util = module.exports = require('datalib/src/util');\n\nutil.extend(util, require('datalib/src/generate'));\nutil.extend(util, require('datalib/src/stats'));\nutil.extend(util, require('./logger')('[VL Error]'));\nutil.bin = require('datalib/src/bins/bins');\n\nutil.isin = function(item, array) {\n  return array.indexOf(item) !== -1;\n};\n\nutil.forEach = function(obj, f, thisArg) {\n  if (obj.forEach) {\n    obj.forEach.call(thisArg, f);\n  } else {\n    for (var k in obj) {\n      f.call(thisArg, obj[k], k , obj);\n    }\n  }\n};\n\nutil.reduce = function(obj, f, init, thisArg) {\n  if (obj.reduce) {\n    return obj.reduce.call(thisArg, f, init);\n  } else {\n    for (var k in obj) {\n      init = f.call(thisArg, init, obj[k], k, obj);\n    }\n    return init;\n  }\n};\n\nutil.map = function(obj, f, thisArg) {\n  if (obj.map) {\n    return obj.map.call(thisArg, f);\n  } else {\n    var output = [];\n    for (var k in obj) {\n      output.push( f.call(thisArg, obj[k], k, obj));\n    }\n  }\n};\n\nutil.any = function(arr, f) {\n  var i = 0, k;\n  for (k in arr) {\n    if (f(arr[k], k, i++)) return true;\n  }\n  return false;\n};\n\nutil.all = function(arr, f) {\n  var i = 0, k;\n  for (k in arr) {\n    if (!f(arr[k], k, i++)) return false;\n  }\n  return true;\n};\n\nutil.getbins = function(stats, maxbins) {\n  return util.bin({\n    min: stats.min,\n    max: stats.max,\n    maxbins: maxbins\n  });\n};\n\n/**\n * x[p[0]]...[p[n]] = val\n * @param noaugment determine whether new object should be added f\n * or non-existing properties along the path\n */\nutil.setter = function(x, p, val, noaugment) {\n  for (var i=0; i<p.length-1; ++i) {\n    if (!noaugment && !(p[i] in x)){\n      x = x[p[i]] = {};\n    } else {\n      x = x[p[i]];\n    }\n  }\n  x[p[i]] = val;\n};\n\n\n/**\n * returns x[p[0]]...[p[n]]\n * @param augment determine whether new object should be added f\n * or non-existing properties along the path\n */\nutil.getter = function(x, p, noaugment) {\n  for (var i=0; i<p.length; ++i) {\n    if (!noaugment && !(p[i] in x)){\n      x = x[p[i]] = {};\n    } else {\n      x = x[p[i]];\n    }\n  }\n  return x;\n};\n\n","'use strict';\n\nrequire('./globals');\n\nvar util = require('./util'),\n    consts = require('./consts');\n\nvar vl = {};\n\nutil.extend(vl, consts, util);\n\nvl.Encoding = require('./Encoding');\nvl.compiler = require('./compiler/compiler');\nvl.compile = vl.compiler.compile;\nvl.data = require('./data');\nvl.enc = require('./enc');\nvl.encDef = require('./encdef');\nvl.schema = require('./schema/schema');\nvl.toShorthand = vl.Encoding.shorthand;\nvl.format = require('d3-format').format;\n\nmodule.exports = vl;"],"sourceRoot":"/source/"}